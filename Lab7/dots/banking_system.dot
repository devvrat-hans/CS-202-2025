digraph banking_system_CFG {
    rankdir=TB;
    node [shape=box, style=filled, fillcolor=lightblue];

    B0 [label="B0:\n#include <stdio.h> #include <stdlib.h> #include..."];
    B1 [label="B1:\nint account_number;\nchar name[MAX_NAME_LENGTH];\ndouble balance;\nint is_active;\n\} Account;"];
    B2 [label="B2:\nAccount accounts[MAX_ACCOUNTS];\nint total_accounts = 0;\nvoid display_menu() \{"];
    B3 [label="B3:\nprintf(\"\n=== BANKING SYSTEM ===\n\");\nprintf(\"1. Create Account\n\");\nprintf(\"2. Deposit Money\n\");\nprintf(\"3. Withdraw Money\n\");\nprintf(\"4. Check Balance\n\");\nprintf(\"5. Transfer Money\n\");\nprintf(\"6. Display All Accounts\n\");\nprintf(\"7. Close Account\n\");\nprintf(\"8. Calculate Interest\n\");\nprintf(\"9. Exit\n\");\n..."];
    B4 [label="B4:\nint find_account(int account_number) \{"];
    B5 [label="B5:\nint i = 0;\nint found_index = -1;\nwhile (i < total_accounts) \{"];
    B6 [label="B6:\nif (accounts[i].account_number == account_numbe..."];
    B7 [label="B7:\nfound_index = i;\nbreak;"];
    B8 [label="B8:\n\}"];
    B9 [label="B9:\ni = i + 1;\n\}"];
    B10 [label="B10:\nreturn found_index;"];
    B11 [label="B11:\n\}"];
    B12 [label="B12:\nvoid create_account() \{"];
    B13 [label="B13:\nint account_number;\nchar name[MAX_NAME_LENGTH];\ndouble initial_deposit;\nint valid_account = 1;\nif (total_accounts >= MAX_ACCOUNTS) \{"];
    B14 [label="B14:\nprintf(\"Maximum account limit reached!\n\");\nreturn;"];
    B15 [label="B15:\n\}"];
    B16 [label="B16:\nprintf(\"Enter account number: \");\nscanf(\"%d\", &account_number);\nint existing_index = find_account(account_number);\nif (existing_index != -1) \{"];
    B17 [label="B17:\nprintf(\"Account already exists!\n\");\nvalid_account = 0;\n\}"];
    B18 [label="B18:\nif (valid_account == 1) \{"];
    B19 [label="B19:\nprintf(\"Enter account holder name: \");\nscanf(\"%s\", name);\nprintf(\"Enter initial deposit: \");\nscanf(\"%lf\", &initial_deposit);\nif (initial_deposit < 100.0) \{"];
    B20 [label="B20:\nprintf(\"Minimum initial deposit is $100\n\");\nvalid_account = 0;\n\}"];
    B21 [label="B21:\n\}"];
    B22 [label="B22:\nif (valid_account == 1) \{"];
    B23 [label="B23:\naccounts[total_accounts].account_number = accou...\nstrcpy(accounts[total_accounts].name, name);\naccounts[total_accounts].balance = initial_depo...\naccounts[total_accounts].is_active = 1;\ntotal_accounts = total_accounts + 1;\nprintf(\"Account created successfully!\n\");\nprintf(\"Account Number: %d\n\", account_number);\nprintf(\"Account Holder: %s\n\", name);\nprintf(\"Initial Balance: $%.2f\n\", initial_de...\n\}"];
    B24 [label="B24:\n\}"];
    B25 [label="B25:\nvoid deposit_money() \{"];
    B26 [label="B26:\nint account_number;\ndouble deposit_amount;\nint account_index;\nprintf(\"Enter account number: \");\nscanf(\"%d\", &account_number);\naccount_index = find_account(account_number);\nif (account_index == -1) \{"];
    B27 [label="B27:\nprintf(\"Account not found or inactive!\n\");\nreturn;"];
    B28 [label="B28:\n\}"];
    B29 [label="B29:\nprintf(\"Enter deposit amount: \");\nscanf(\"%lf\", &deposit_amount);\nif (deposit_amount <= 0) \{"];
    B30 [label="B30:\nprintf(\"Invalid deposit amount!\n\");\nreturn;"];
    B31 [label="B31:\n\}"];
    B32 [label="B32:\naccounts[account_index].balance = accounts[acco...\nprintf(\"Deposit successful!\n\");\nprintf(\"New Balance: $%.2f\n\", accounts[accou...\n\}"];
    B33 [label="B33:\nvoid withdraw_money() \{"];
    B34 [label="B34:\nint account_number;\ndouble withdraw_amount;\nint account_index;\ndouble new_balance;\nprintf(\"Enter account number: \");\nscanf(\"%d\", &account_number);\naccount_index = find_account(account_number);\nif (account_index == -1) \{"];
    B35 [label="B35:\nprintf(\"Account not found or inactive!\n\");\nreturn;"];
    B36 [label="B36:\n\}"];
    B37 [label="B37:\nprintf(\"Current Balance: $%.2f\n\", accounts[a...\nprintf(\"Enter withdrawal amount: \");\nscanf(\"%lf\", &withdraw_amount);\nif (withdraw_amount <= 0) \{"];
    B38 [label="B38:\nprintf(\"Invalid withdrawal amount!\n\");\nreturn;"];
    B39 [label="B39:\n\}"];
    B40 [label="B40:\nnew_balance = accounts[account_index].balance -...\nif (new_balance < 50.0) \{"];
    B41 [label="B41:\nprintf(\"Insufficient funds! Minimum balance of...\nreturn;"];
    B42 [label="B42:\n\}"];
    B43 [label="B43:\naccounts[account_index].balance = new_balance;\nprintf(\"Withdrawal successful!\n\");\nprintf(\"New Balance: $%.2f\n\", accounts[accou...\n\}"];
    B44 [label="B44:\nvoid check_balance() \{"];
    B45 [label="B45:\nint account_number;\nint account_index;\nprintf(\"Enter account number: \");\nscanf(\"%d\", &account_number);\naccount_index = find_account(account_number);\nif (account_index == -1) \{"];
    B46 [label="B46:\nprintf(\"Account not found or inactive!\n\");\nreturn;"];
    B47 [label="B47:\n\}"];
    B48 [label="B48:\nprintf(\"Account Number: %d\n\", accounts[accou...\nprintf(\"Account Holder: %s\n\", accounts[accou...\nprintf(\"Current Balance: $%.2f\n\", accounts[a...\n\}"];
    B49 [label="B49:\nvoid transfer_money() \{"];
    B50 [label="B50:\nint from_account, to_account;\ndouble transfer_amount;\nint from_index, to_index;\ndouble new_from_balance;\nprintf(\"Enter source account number: \");\nscanf(\"%d\", &from_account);\nprintf(\"Enter destination account number: \");\nscanf(\"%d\", &to_account);\nfrom_index = find_account(from_account);\nto_index = find_account(to_account);\n..."];
    B51 [label="B51:\nprintf(\"Source account not found or inactive!\...\nreturn;"];
    B52 [label="B52:\n\}"];
    B53 [label="B53:\nif (to_index == -1) \{"];
    B54 [label="B54:\nprintf(\"Destination account not found or inact...\nreturn;"];
    B55 [label="B55:\n\}"];
    B56 [label="B56:\nif (from_account == to_account) \{"];
    B57 [label="B57:\nprintf(\"Cannot transfer to the same account!\n...\nreturn;"];
    B58 [label="B58:\n\}"];
    B59 [label="B59:\nprintf(\"Enter transfer amount: \");\nscanf(\"%lf\", &transfer_amount);\nif (transfer_amount <= 0) \{"];
    B60 [label="B60:\nprintf(\"Invalid transfer amount!\n\");\nreturn;"];
    B61 [label="B61:\n\}"];
    B62 [label="B62:\nnew_from_balance = accounts[from_index].balance...\nif (new_from_balance < 50.0) \{"];
    B63 [label="B63:\nprintf(\"Insufficient funds in source account!\...\nreturn;"];
    B64 [label="B64:\n\}"];
    B65 [label="B65:\naccounts[from_index].balance = new_from_balance;\naccounts[to_index].balance = accounts[to_index]...\nprintf(\"Transfer successful!\n\");\nprintf(\"From Account %d: $%.2f\n\", from_accou...\nprintf(\"To Account %d: $%.2f\n\", to_account, ...\n\}"];
    B66 [label="B66:\nvoid display_all_accounts() \{"];
    B67 [label="B67:\nint i = 0;\nint active_count = 0;\nprintf(\"\n=== ALL ACTIVE ACCOUNTS ===\n\");\nprintf(\"%-10s %-20s %-15s\n\", \"Acc No.\", \"...\nprintf(\"--------------------------------------...\nwhile (i < total_accounts) \{"];
    B68 [label="B68:\nif (accounts[i].is_active == 1) \{"];
    B69 [label="B69:\nprintf(\"%-10d %-20s $%-14.2f\n\", accounts[i]....\nactive_count = active_count + 1;\n\}"];
    B70 [label="B70:\ni = i + 1;\n\}"];
    B71 [label="B71:\nprintf(\"--------------------------------------...\nprintf(\"Total Active Accounts: %d\n\", active_...\n\}"];
    B72 [label="B72:\nvoid close_account() \{"];
    B73 [label="B73:\nint account_number;\nint account_index;\nchar confirmation;\nprintf(\"Enter account number to close: \");\nscanf(\"%d\", &account_number);\naccount_index = find_account(account_number);\nif (account_index == -1) \{"];
    B74 [label="B74:\nprintf(\"Account not found or already inactive!...\nreturn;"];
    B75 [label="B75:\n\}"];
    B76 [label="B76:\nprintf(\"Account Details:\n\");\nprintf(\"Account Number: %d\n\", accounts[accou...\nprintf(\"Account Holder: %s\n\", accounts[accou...\nprintf(\"Current Balance: $%.2f\n\", accounts[a...\nprintf(\"Are you sure you want to close this ac...\nscanf(\" %c\", &confirmation);\nif (confirmation == 'y' || confirmation == 'Y') \{"];
    B77 [label="B77:\naccounts[account_index].is_active = 0;\nprintf(\"Account closed successfully!\n\");\nif (accounts[account_index].balance > 0) \{"];
    B78 [label="B78:\nprintf(\"Please collect your remaining balance ...\n\}"];
    B79 [label="B79:\n\} else \{"];
    B80 [label="B80:\nprintf(\"Account closure cancelled.\n\");\n\}"];
    B81 [label="B81:\n\}"];
    B82 [label="B82:\nvoid calculate_interest() \{"];
    B83 [label="B83:\nint i = 0;\ndouble interest_rate = 0.05;\ndouble total_interest = 0.0;\ndouble account_interest;\nprintf(\"\n=== INTEREST CALCULATION ===\n\");\nprintf(\"Annual Interest Rate: %.2f%%\n\", inte...\nprintf(\"%-10s %-20s %-15s %-15s\n\", \"Acc No....\nprintf(\"--------------------------------------...\nwhile (i < total_accounts) \{"];
    B84 [label="B84:\nif (accounts[i].is_active == 1 && accounts[i].b..."];
    B85 [label="B85:\naccount_interest = accounts[i].balance * intere...\ntotal_interest = total_interest + account_inter...\nprintf(\"%-10d %-20s $%-14.2f $%-14.2f\n\", acc...\n\}"];
    B86 [label="B86:\ni = i + 1;\n\}"];
    B87 [label="B87:\nprintf(\"--------------------------------------...\nprintf(\"Total Interest Payable: $%.2f\n\", tot...\n\}"];
    B88 [label="B88:\nint main() \{"];
    B89 [label="B89:\nint choice;\nint continue_program = 1;\nprintf(\"Welcome to the Banking System!\n\");\nwhile (continue_program == 1) \{"];
    B90 [label="B90:\ndisplay_menu();\nscanf(\"%d\", &choice);\nif (choice == 1) \{"];
    B91 [label="B91:\ncreate_account();\n\} else if (choice == 2) \{"];
    B92 [label="B92:\ndeposit_money();\n\} else if (choice == 3) \{"];
    B93 [label="B93:\nwithdraw_money();\n\} else if (choice == 4) \{"];
    B94 [label="B94:\ncheck_balance();\n\} else if (choice == 5) \{"];
    B95 [label="B95:\ntransfer_money();\n\} else if (choice == 6) \{"];
    B96 [label="B96:\ndisplay_all_accounts();\n\} else if (choice == 7) \{"];
    B97 [label="B97:\nclose_account();\n\} else if (choice == 8) \{"];
    B98 [label="B98:\ncalculate_interest();\n\} else if (choice == 9) \{"];
    B99 [label="B99:\nprintf(\"Thank you for using our Banking System...\ncontinue_program = 0;"];
    B100 [label="B100:\n\} else \{"];
    B101 [label="B101:\nprintf(\"Invalid choice! Please try again.\n\");\n\}"];
    B102 [label="B102:\nif (continue_program == 1) \{"];
    B103 [label="B103:\nprintf(\"\nPress Enter to continue...\");\ngetchar();\ngetchar();\n\}"];
    B104 [label="B104:\n\}"];
    B105 [label="B105:\nreturn 0;"];
    B106 [label="B106:\n\}"];

    B0 -> B1;
    B1 -> B2;
    B2 -> B3;
    B3 -> B4;
    B4 -> B5;
    B5 -> B6 [label="true"];
    B5 -> B10 [label="false"];
    B5 -> B16 [label="false"];
    B5 -> B18 [label="false"];
    B5 -> B22 [label="false"];
    B5 -> B24 [label="false"];
    B5 -> B29 [label="false"];
    B5 -> B32 [label="false"];
    B5 -> B37 [label="false"];
    B5 -> B40 [label="false"];
    B5 -> B43 [label="false"];
    B5 -> B48 [label="false"];
    B5 -> B53 [label="false"];
    B5 -> B56 [label="false"];
    B5 -> B59 [label="false"];
    B5 -> B62 [label="false"];
    B5 -> B65 [label="false"];
    B5 -> B71 [label="false"];
    B5 -> B76 [label="false"];
    B5 -> B81 [label="false"];
    B5 -> B87 [label="false"];
    B5 -> B105 [label="false"];
    B6 -> B7 [label="true"];
    B6 -> B79 [label="false"];
    B8 -> B9;
    B9 -> B10;
    B11 -> B12;
    B12 -> B13;
    B13 -> B14 [label="true"];
    B13 -> B79 [label="false"];
    B15 -> B16;
    B16 -> B17 [label="true"];
    B16 -> B79 [label="false"];
    B17 -> B18;
    B18 -> B19 [label="true"];
    B18 -> B79 [label="false"];
    B19 -> B20 [label="true"];
    B19 -> B79 [label="false"];
    B20 -> B21;
    B21 -> B22;
    B22 -> B23 [label="true"];
    B22 -> B79 [label="false"];
    B23 -> B24;
    B24 -> B25;
    B25 -> B26;
    B26 -> B27 [label="true"];
    B26 -> B79 [label="false"];
    B28 -> B29;
    B29 -> B30 [label="true"];
    B29 -> B79 [label="false"];
    B31 -> B32;
    B32 -> B33;
    B33 -> B34;
    B34 -> B35 [label="true"];
    B34 -> B79 [label="false"];
    B36 -> B37;
    B37 -> B38 [label="true"];
    B37 -> B79 [label="false"];
    B39 -> B40;
    B40 -> B41 [label="true"];
    B40 -> B79 [label="false"];
    B42 -> B43;
    B43 -> B44;
    B44 -> B45;
    B45 -> B46 [label="true"];
    B45 -> B79 [label="false"];
    B47 -> B48;
    B48 -> B49;
    B49 -> B50;
    B50 -> B51 [label="true"];
    B50 -> B79 [label="false"];
    B52 -> B53;
    B53 -> B54 [label="true"];
    B53 -> B79 [label="false"];
    B55 -> B56;
    B56 -> B57 [label="true"];
    B56 -> B79 [label="false"];
    B58 -> B59;
    B59 -> B60 [label="true"];
    B59 -> B79 [label="false"];
    B61 -> B62;
    B62 -> B63 [label="true"];
    B62 -> B79 [label="false"];
    B64 -> B65;
    B65 -> B66;
    B66 -> B67;
    B67 -> B68 [label="true"];
    B67 -> B71 [label="false"];
    B67 -> B76 [label="false"];
    B67 -> B81 [label="false"];
    B67 -> B87 [label="false"];
    B67 -> B105 [label="false"];
    B68 -> B69 [label="true"];
    B68 -> B79 [label="false"];
    B69 -> B70;
    B70 -> B71;
    B71 -> B72;
    B72 -> B73;
    B73 -> B74 [label="true"];
    B73 -> B79 [label="false"];
    B75 -> B76;
    B76 -> B77 [label="true"];
    B76 -> B79 [label="false"];
    B77 -> B78 [label="true"];
    B77 -> B79 [label="false"];
    B78 -> B79;
    B79 -> B80;
    B80 -> B81;
    B81 -> B82;
    B82 -> B83;
    B83 -> B84 [label="true"];
    B83 -> B87 [label="false"];
    B83 -> B105 [label="false"];
    B84 -> B85 [label="true"];
    B84 -> B91 [label="false"];
    B85 -> B86;
    B86 -> B87;
    B87 -> B88;
    B88 -> B89;
    B89 -> B90 [label="true"];
    B89 -> B105 [label="false"];
    B90 -> B91 [label="true"];
    B90 -> B92 [label="false"];
    B91 -> B92;
    B92 -> B93;
    B93 -> B94;
    B94 -> B95;
    B95 -> B96;
    B96 -> B97;
    B97 -> B98;
    B98 -> B99;
    B99 -> B89;
    B100 -> B101;
    B101 -> B102;
    B102 -> B103 [label="true"];
    B102 -> B104 [label="false"];
    B103 -> B104;
    B104 -> B105;
}