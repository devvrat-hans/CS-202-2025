{
  "file": "employee_management.c",
  "blocks": [
    [
      0,
      [
        "#include<stdio.h> #include<string.h> #include<stdlib.h> #include<math.h> #define Employee struct emp void add(FILE * fp);",
        "FILE * del(FILE * fp);",
        "void modify(FILE * fp);",
        "void displayList(FILE * fp);",
        "void searchRecord(FILE *fp);",
        "void printChar(char ch,int n);",
        "void printHead();",
        "struct emp {"
      ]
    ],
    [
      1,
      [
        "int id;",
        "char name[100];",
        "char desgn[10];",
        "float sal;",
        "char jdate[8];",
        "char gender[10];",
        "char branch[50];",
        "char psaddr[200];",
        "char prtaddr[200];",
        "char phone[15];",
        "char mail[20];",
        "};"
      ]
    ],
    [
      2,
      [
        "int main() {"
      ]
    ],
    [
      3,
      [
        "FILE * fp;",
        "Employee e;",
        "int option;",
        "char another;",
        "if((fp=fopen(\"employeeInfo.txt\",\"rb+\"))==NULL)"
      ]
    ],
    [
      4,
      [
        "{"
      ]
    ],
    [
      5,
      [
        "if((fp=fopen(\"employeeInfo.txt\",\"wb+\"))==NULL)"
      ]
    ],
    [
      6,
      [
        "{"
      ]
    ],
    [
      7,
      [
        "printf(\"can't open file\");",
        "return 0;"
      ]
    ],
    [
      8,
      [
        "}"
      ]
    ],
    [
      9,
      [
        "}"
      ]
    ],
    [
      10,
      [
        "char username[10],password[10];",
        "printHead();",
        "printf(\"\\n\\t\\t\\t\\t  Login Screen\");",
        "printf(\"\\n\\t\\t\\t      Enter Your Credential\");",
        "printf(\"\\n\\n\\n\\t\\tUsername: \");",
        "scanf(\"%s\",username);",
        "printf(\"\\n\\t\\tPassword: \");",
        "scanf(\"%s\",password);",
        "if(((strcasecmp(username,\"admin\"))==0)&&((strcasecmp(password,\"pass\")==0)))"
      ]
    ],
    [
      11,
      [
        "{"
      ]
    ],
    [
      12,
      [
        "while(1)"
      ]
    ],
    [
      13,
      [
        "{"
      ]
    ],
    [
      14,
      [
        "printHead();",
        "printf(\"\\n\\t\\t\\t\\tMain Menu\");",
        "printf(\"\\n\\n\\n\");",
        "printf(\"\\n\\n\\t\\t\\t1. Add Employee\");",
        "printf(\"\\n\\n\\t\\t\\t2. Delete Employee\");",
        "printf(\"\\n\\n\\t\\t\\t3. Modify Employee\");",
        "printf(\"\\n\\n\\t\\t\\t4. Display Employee List\");",
        "printf(\"\\n\\n\\t\\t\\t5. Search Record\");",
        "printf(\"\\n\\n\\t\\t\\t0. EXIT\");",
        "printf(\"\\n\\n\\t\\tEnter Your Option :--> \");",
        "scanf(\"%d\",&option);",
        "switch(option) {"
      ]
    ],
    [
      15,
      [
        "case 0:",
        "return 1;"
      ]
    ],
    [
      16,
      [
        "break;"
      ]
    ],
    [
      17,
      [
        "case 1:",
        "add(fp);",
        "break;"
      ]
    ],
    [
      18,
      [
        "case 2:",
        "fp=del(fp);",
        "break;"
      ]
    ],
    [
      19,
      [
        "case 3:",
        "modify(fp);",
        "break;"
      ]
    ],
    [
      20,
      [
        "case 4:",
        "displayList(fp);",
        "break;"
      ]
    ],
    [
      21,
      [
        "case 5:",
        "searchRecord(fp);",
        "break;"
      ]
    ],
    [
      22,
      [
        "default:",
        "printf(\"\\n\\t\\tYou Pressed wrong key\");",
        "printf(\"\\n\\t\\tProgram terminated\");",
        "exit(0);",
        "}"
      ]
    ],
    [
      23,
      [
        "}"
      ]
    ],
    [
      24,
      [
        "}"
      ]
    ],
    [
      25,
      [
        "else {"
      ]
    ],
    [
      26,
      [
        "printf(\"\\n\\t\\tLogin Failed\");",
        "}"
      ]
    ],
    [
      27,
      [
        "return 1;"
      ]
    ],
    [
      28,
      [
        "}"
      ]
    ],
    [
      29,
      [
        "void printChar(char ch,int n) {"
      ]
    ],
    [
      30,
      [
        "while(n--)"
      ]
    ],
    [
      31,
      [
        "{"
      ]
    ],
    [
      32,
      [
        "putchar(ch);",
        "}"
      ]
    ],
    [
      33,
      [
        "}"
      ]
    ],
    [
      34,
      [
        "void printHead() {"
      ]
    ],
    [
      35,
      [
        "system(\"cls\");",
        "printf(\"\\t\");",
        "printChar('=',65);",
        "printf(\"\\n\\t\");",
        "printChar('=',16);",
        "printf(\"[EMPLOYEE] [MANAGEMENT] [SYSTEM]\");",
        "printChar('=',16);",
        "printf(\"\\n\\t\");",
        "printChar('=',65);",
        "}"
      ]
    ],
    [
      36,
      [
        "void add(FILE * fp) {"
      ]
    ],
    [
      37,
      [
        "printHead();",
        "printf(\"\\n\\t\\t\\t\\Add Employee\");",
        "char another='y';",
        "Employee e;",
        "fseek(fp,0,SEEK_END);",
        "while(another=='y'||another=='Y')"
      ]
    ],
    [
      38,
      [
        "{"
      ]
    ],
    [
      39,
      [
        "printf(\"\\n\\n\\t\\tEnter ID number: \");",
        "scanf(\"%d\",&e.id);",
        "printf(\"\\n\\n\\t\\tEnter Full Name of Employee: \");",
        "fflush(stdin);",
        "fgets(e.name,100,stdin);",
        "e.name[strlen(e.name)-1]='\\0';",
        "printf(\"\\n\\n\\t\\tEnter Designation: \");",
        "fflush(stdin);",
        "fgets(e.desgn,10,stdin);",
        "e.desgn[strlen(e.desgn)-1]='\\0';",
        "printf(\"\\n\\n\\t\\tEnter Gender: \");",
        "fflush(stdin);",
        "fgets(e.gender,10,stdin);",
        "e.gender[strlen(e.gender)-1]='\\0';",
        "printf(\"\\n\\n\\t\\tEnter Branch: \");",
        "fflush(stdin);",
        "fgets(e.branch,50,stdin);",
        "e.branch[strlen(e.branch)-1]='\\0';",
        "printf(\"\\n\\n\\t\\tEnter Salary: \");",
        "scanf(\"%f\",&e.sal);",
        "fwrite(&e,sizeof(e),1,fp);",
        "printf(\"\\n\\n\\t\\tWant to enter another employee info (Y/N)\\t\");",
        "fflush(stdin);",
        "another=getchar();",
        "}"
      ]
    ],
    [
      40,
      [
        "}"
      ]
    ],
    [
      41,
      [
        "FILE * del(FILE * fp) {"
      ]
    ],
    [
      42,
      [
        "printHead();",
        "printf(\"\\n\\t\\t\\t\\Delete Employee\");",
        "Employee e;",
        "int flag=0,tempid,siz=sizeof(e);",
        "FILE *ft;",
        "if((ft=fopen(\"temp.txt\",\"wb+\"))==NULL)"
      ]
    ],
    [
      43,
      [
        "{"
      ]
    ],
    [
      44,
      [
        "printf(\"\\n\\n\\t\\t\\t\\\\t!!! ERROR !!!\\n\\t\\t\");",
        "return fp;"
      ]
    ],
    [
      45,
      [
        "}"
      ]
    ],
    [
      46,
      [
        "printf(\"\\n\\n\\tEnter ID number of Employee to Delete the Record\");",
        "printf(\"\\n\\n\\t\\t\\tID No. : \");",
        "scanf(\"%d\",&tempid);",
        "rewind(fp);",
        "while((fread(&e,siz,1,fp))==1)"
      ]
    ],
    [
      47,
      [
        "{"
      ]
    ],
    [
      48,
      [
        "if(e.id==tempid)"
      ]
    ],
    [
      49,
      [
        "{"
      ]
    ],
    [
      50,
      [
        "flag=1;",
        "printf(\"\\n\\tRecord Deleted for\");",
        "printf(\"\\n\\n\\t\\t%s\\n\\n\\t\\t%s\\n\\n\\t\\t%d\\n\\t\",e.name,e.branch,e.id);",
        "continue;"
      ]
    ],
    [
      51,
      [
        "}"
      ]
    ],
    [
      52,
      [
        "fwrite(&e,siz,1,ft);",
        "}"
      ]
    ],
    [
      53,
      [
        "fclose(fp);",
        "fclose(ft);",
        "remove(\"employeeInfo.txt\");",
        "rename(\"temp.txt\",\"employeeInfo.txt\");",
        "if((fp=fopen(\"employeeInfo.txt\",\"rb+\"))==NULL)"
      ]
    ],
    [
      54,
      [
        "{"
      ]
    ],
    [
      55,
      [
        "printf(\"ERROR\");",
        "return NULL;"
      ]
    ],
    [
      56,
      [
        "}"
      ]
    ],
    [
      57,
      [
        "if(flag==0)"
      ]
    ],
    [
      58,
      [
        "printf(\"\\n\\n\\t\\t!!!! ERROR RECORD NOT FOUND \\n\\t\");",
        "return fp;"
      ]
    ],
    [
      59,
      [
        "}"
      ]
    ],
    [
      60,
      [
        "void modify(FILE * fp) {"
      ]
    ],
    [
      61,
      [
        "printHead();",
        "printf(\"\\n\\t\\t\\t\\Modify Employee\");",
        "Employee e;",
        "int i,flag=0,tempid,siz=sizeof(e);",
        "printf(\"\\n\\n\\tEnter ID Number of Employee to Modify the Record : \");",
        "scanf(\"%d\",&tempid);",
        "rewind(fp);",
        "while((fread(&e,siz,1,fp))==1)"
      ]
    ],
    [
      62,
      [
        "{"
      ]
    ],
    [
      63,
      [
        "if(e.id==tempid)"
      ]
    ],
    [
      64,
      [
        "{"
      ]
    ],
    [
      65,
      [
        "flag=1;",
        "break;"
      ]
    ],
    [
      66,
      [
        "}"
      ]
    ],
    [
      67,
      [
        "}"
      ]
    ],
    [
      68,
      [
        "if(flag==1)"
      ]
    ],
    [
      69,
      [
        "{"
      ]
    ],
    [
      70,
      [
        "fseek(fp,-siz,SEEK_CUR);",
        "printf(\"\\n\\n\\t\\tRecord Found\");",
        "printf(\"\\n\\n\\t\\tEnter New Data for the Record\");",
        "printf(\"\\n\\n\\t\\tEnter ID number: \");",
        "scanf(\"%d\",&e.id);",
        "printf(\"\\n\\n\\t\\tEnter Full Name of Employee: \");",
        "fflush(stdin);",
        "fgets(e.name,100,stdin);",
        "e.name[strlen(e.name)-1]='\\0';",
        "printf(\"\\n\\n\\t\\tEnter Designation: \");",
        "fflush(stdin);",
        "fgets(e.desgn,10,stdin);",
        "e.desgn[strlen(e.desgn)-1]='\\0';",
        "printf(\"\\n\\n\\t\\tEnter Gender: \");",
        "fflush(stdin);",
        "fgets(e.gender,10,stdin);",
        "e.gender[strlen(e.gender)-1]='\\0';",
        "printf(\"\\n\\n\\t\\tEnter Branch: \");",
        "fflush(stdin);",
        "fgets(e.branch,50,stdin);",
        "e.branch[strlen(e.branch)-1]='\\0';",
        "printf(\"\\n\\n\\t\\tEnter Salary: \");",
        "scanf(\"%f\",&e.sal);",
        "fwrite(&e,sizeof(e),1,fp);",
        "}"
      ]
    ],
    [
      71,
      [
        "else"
      ]
    ],
    [
      72,
      [
        "printf(\"\\n\\n\\t!!!! ERROR !!!! RECORD NOT FOUND\");",
        "}"
      ]
    ],
    [
      73,
      [
        "void displayList(FILE * fp) {"
      ]
    ],
    [
      74,
      [
        "printHead();",
        "printf(\"\\n\\t\\t\\t\\List of Employees\");",
        "Employee e;",
        "int i,siz=sizeof(e);",
        "rewind(fp);",
        "while((fread(&e,siz,1,fp))==1)"
      ]
    ],
    [
      75,
      [
        "{"
      ]
    ],
    [
      76,
      [
        "printf(\"\\n\\n\\t\\tID : %d\",e.id);",
        "printf(\"\\n\\n\\t\\tNAME : %s\",e.name);",
        "printf(\"\\n\\n\\t\\tDESIGNATION : %s\",e.desgn);",
        "printf(\"\\n\\n\\t\\tGENDER : %s\",e.gender);",
        "printf(\"\\n\\n\\t\\tBRANCH : %s\",e.branch);",
        "printf(\"\\n\\n\\t\\tSALARY : %.2f\",e.sal);",
        "printChar('=',65);",
        "}"
      ]
    ],
    [
      77,
      [
        "}"
      ]
    ],
    [
      78,
      [
        "void searchRecord(FILE *fp) {"
      ]
    ],
    [
      79,
      [
        "printHead();",
        "printf(\"\\n\\t\\t\\t\\Search Employee\");",
        "int tempid,flag,siz,i;",
        "Employee e;",
        "char another='y';",
        "siz=sizeof(e);",
        "while(another=='y'||another=='Y')"
      ]
    ],
    [
      80,
      [
        "{"
      ]
    ],
    [
      81,
      [
        "printf(\"\\n\\n\\tEnter ID Number of Employee to search the record : \");",
        "scanf(\"%d\",&tempid);",
        "rewind(fp);",
        "while((fread(&e,siz,1,fp))==1)"
      ]
    ],
    [
      82,
      [
        "{"
      ]
    ],
    [
      83,
      [
        "if(e.id==tempid)"
      ]
    ],
    [
      84,
      [
        "{"
      ]
    ],
    [
      85,
      [
        "flag=1;",
        "break;"
      ]
    ],
    [
      86,
      [
        "}"
      ]
    ],
    [
      87,
      [
        "}"
      ]
    ],
    [
      88,
      [
        "if(flag==1)"
      ]
    ],
    [
      89,
      [
        "{"
      ]
    ],
    [
      90,
      [
        "printf(\"\\n\\t\\tNAME : %s\",e.name);",
        "printf(\"\\n\\n\\t\\tID : %d\",e.id);",
        "printf(\"\\n\\n\\t\\tDESIGNATION : %s\",e.desgn);",
        "printf(\"\\n\\n\\t\\tBRANCH : %s\",e.branch);",
        "printf(\"\\n\\n\\t\\tSALARY: %.2f\",e.sal);",
        "printChar('=',65);",
        "}"
      ]
    ],
    [
      91,
      [
        "else"
      ]
    ],
    [
      92,
      [
        "printf(\"\\n\\n\\t\\t!!!! ERROR RECORD NOT FOUND !!!!\");",
        "printf(\"\\n\\n\\t\\tWant to enter another search (Y/N)\");",
        "fflush(stdin);",
        "another=getchar();",
        "}"
      ]
    ],
    [
      93,
      [
        "}"
      ]
    ]
  ],
  "edges": [
    [
      0,
      1,
      ""
    ],
    [
      1,
      2,
      ""
    ],
    [
      2,
      3,
      ""
    ],
    [
      3,
      4,
      "true"
    ],
    [
      3,
      25,
      "false"
    ],
    [
      4,
      5,
      ""
    ],
    [
      5,
      6,
      "true"
    ],
    [
      5,
      25,
      "false"
    ],
    [
      6,
      7,
      ""
    ],
    [
      8,
      9,
      ""
    ],
    [
      9,
      10,
      ""
    ],
    [
      10,
      11,
      "true"
    ],
    [
      10,
      25,
      "false"
    ],
    [
      11,
      12,
      ""
    ],
    [
      12,
      13,
      "true"
    ],
    [
      12,
      25,
      "false"
    ],
    [
      12,
      27,
      "false"
    ],
    [
      12,
      33,
      "false"
    ],
    [
      12,
      40,
      "false"
    ],
    [
      12,
      46,
      "false"
    ],
    [
      12,
      53,
      "false"
    ],
    [
      12,
      57,
      "false"
    ],
    [
      12,
      68,
      "false"
    ],
    [
      12,
      71,
      "false"
    ],
    [
      12,
      77,
      "false"
    ],
    [
      12,
      93,
      "false"
    ],
    [
      13,
      14,
      ""
    ],
    [
      14,
      15,
      ""
    ],
    [
      22,
      23,
      ""
    ],
    [
      23,
      24,
      ""
    ],
    [
      24,
      25,
      ""
    ],
    [
      25,
      26,
      ""
    ],
    [
      26,
      27,
      ""
    ],
    [
      28,
      29,
      ""
    ],
    [
      29,
      30,
      ""
    ],
    [
      30,
      31,
      "true"
    ],
    [
      30,
      34,
      "false"
    ],
    [
      30,
      36,
      "false"
    ],
    [
      30,
      41,
      "false"
    ],
    [
      30,
      60,
      "false"
    ],
    [
      30,
      73,
      "false"
    ],
    [
      30,
      78,
      "false"
    ],
    [
      31,
      32,
      ""
    ],
    [
      32,
      33,
      ""
    ],
    [
      33,
      34,
      ""
    ],
    [
      34,
      35,
      ""
    ],
    [
      35,
      36,
      ""
    ],
    [
      36,
      37,
      ""
    ],
    [
      37,
      38,
      "true"
    ],
    [
      37,
      41,
      "false"
    ],
    [
      37,
      60,
      "false"
    ],
    [
      37,
      73,
      "false"
    ],
    [
      37,
      78,
      "false"
    ],
    [
      38,
      39,
      ""
    ],
    [
      39,
      40,
      ""
    ],
    [
      40,
      41,
      ""
    ],
    [
      41,
      42,
      ""
    ],
    [
      42,
      43,
      "true"
    ],
    [
      42,
      71,
      "false"
    ],
    [
      43,
      44,
      ""
    ],
    [
      45,
      46,
      ""
    ],
    [
      46,
      47,
      "true"
    ],
    [
      46,
      60,
      "false"
    ],
    [
      46,
      73,
      "false"
    ],
    [
      46,
      78,
      "false"
    ],
    [
      47,
      48,
      ""
    ],
    [
      48,
      49,
      "true"
    ],
    [
      48,
      71,
      "false"
    ],
    [
      49,
      50,
      ""
    ],
    [
      50,
      46,
      ""
    ],
    [
      51,
      52,
      ""
    ],
    [
      52,
      53,
      ""
    ],
    [
      53,
      54,
      "true"
    ],
    [
      53,
      71,
      "false"
    ],
    [
      54,
      55,
      ""
    ],
    [
      56,
      57,
      ""
    ],
    [
      57,
      58,
      "true"
    ],
    [
      57,
      71,
      "false"
    ],
    [
      59,
      60,
      ""
    ],
    [
      60,
      61,
      ""
    ],
    [
      61,
      62,
      "true"
    ],
    [
      61,
      73,
      "false"
    ],
    [
      61,
      78,
      "false"
    ],
    [
      62,
      63,
      ""
    ],
    [
      63,
      64,
      "true"
    ],
    [
      63,
      71,
      "false"
    ],
    [
      64,
      65,
      ""
    ],
    [
      66,
      67,
      ""
    ],
    [
      67,
      68,
      ""
    ],
    [
      68,
      69,
      "true"
    ],
    [
      68,
      71,
      "false"
    ],
    [
      69,
      70,
      ""
    ],
    [
      70,
      71,
      ""
    ],
    [
      71,
      72,
      ""
    ],
    [
      72,
      73,
      ""
    ],
    [
      73,
      74,
      ""
    ],
    [
      74,
      75,
      "true"
    ],
    [
      74,
      78,
      "false"
    ],
    [
      75,
      76,
      ""
    ],
    [
      76,
      77,
      ""
    ],
    [
      77,
      78,
      ""
    ],
    [
      78,
      79,
      ""
    ],
    [
      79,
      80,
      "true"
    ],
    [
      80,
      81,
      ""
    ],
    [
      81,
      82,
      "true"
    ],
    [
      81,
      93,
      "false"
    ],
    [
      82,
      83,
      ""
    ],
    [
      83,
      84,
      "true"
    ],
    [
      83,
      91,
      "false"
    ],
    [
      84,
      85,
      ""
    ],
    [
      86,
      87,
      ""
    ],
    [
      87,
      88,
      ""
    ],
    [
      88,
      89,
      "true"
    ],
    [
      88,
      91,
      "false"
    ],
    [
      89,
      90,
      ""
    ],
    [
      90,
      91,
      ""
    ],
    [
      91,
      92,
      ""
    ],
    [
      92,
      93,
      ""
    ]
  ],
  "total_blocks": 94,
  "total_edges": 118
}