File,Line,Column,DefaultLevel,Level,Category,Name,Warning,Suggestion,Note,CWEs,Context,Fingerprint,ToolVersion,RuleId,HelpUri
./btop/include/fmt/os.h,169,8,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,"  std::system(format(""say \""{}\"""", format(fmt, args...)).c_str());",c7db8e76405ec52321c1dd1568b1d3b6d4ff81dfe583167a3842b7384ec4c710,2.0.19,FF1044,https://cwe.mitre.org/data/definitions/78.html
./btop/include/fmt/printf.h,392,6,4,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"void vprintf(buffer<Char>& buf, basic_string_view<Char> format,",5021b2a0a5cf4c2790de73d764d80bee51197857ad235b7ec136b0c8cf0d988a,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,553,13,4,4,format,vsprintf,Potential format string problem (CWE-134).,Make format string constant.,,CWE-134,"inline auto vsprintf(basic_string_view<Char> fmt,",2e00cea7d8e657cb41fa01c345b382844bbf5745378bb759db35c9320eb18297,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,557,11,4,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"  detail::vprintf(buf, fmt, args);",a0aa45c94c4cc75fe46aab8c427de41c8918c68d28cb16442eda66a67411e7df,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,570,13,4,4,format,sprintf,Potential format string problem (CWE-134).,Make format string constant.,,CWE-134,"inline auto sprintf(string_view fmt, const T&... args) -> std::string {",3dabea3b87c67bb1b9fbab490f7e5c27f5d077efa7d714c43a6b0f53d06df821,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,571,10,4,4,format,vsprintf,Potential format string problem (CWE-134).,Make format string constant.,,CWE-134,"  return vsprintf(fmt, make_printf_args(args...));",b86cb6a18180c093e192b40dbd32f0ed141947cb5f8ef5fc90ec2ceda66aa62f,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,574,21,4,4,format,sprintf,Potential format string problem (CWE-134).,Make format string constant.,,CWE-134,"FMT_DEPRECATED auto sprintf(basic_string_view<wchar_t> fmt, const T&... args)",3334bb3b69656d5b68cf754bb3137957fce361f58e51476290be593224a547d3,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,576,10,4,4,format,vsprintf,Potential format string problem (CWE-134).,Make format string constant.,,CWE-134,"  return vsprintf(fmt, make_printf_args<wchar_t>(args...));",641fd543fff7715f95d352b32d286c6d04e7140e72ebd07a60852b68db9a67f1,2.0.19,FF1015,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,580,6,4,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"auto vfprintf(std::FILE* f, basic_string_view<Char> fmt,",c28ec45598981ab2f33bdade748a964a545afda404420f5cd5c37c342a330a2c,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,583,11,4,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"  detail::vprintf(buf, fmt, args);",a0aa45c94c4cc75fe46aab8c427de41c8918c68d28cb16442eda66a67411e7df,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,599,13,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"inline auto fprintf(std::FILE* f, string_view fmt, const T&... args) -> int {",dc8243d06b03103c1ab04a761a62900b66da3317467fc16f47c42ccaf0e82a14,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,600,10,4,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"  return vfprintf(f, fmt, make_printf_args(args...));",64b7895a773eb2c8abd7af73a049ca4d9fb9473a81e23bd547fcad8af0eec475,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,603,21,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"FMT_DEPRECATED auto fprintf(std::FILE* f, basic_string_view<wchar_t> fmt,",c40145780954bcddcf555facf3b2761e62f12ef202e2860d7b0b62f2aeeb5217,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,605,10,4,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"  return vfprintf(f, fmt, make_printf_args<wchar_t>(args...));",cb179ff4cf6fd18cad25b2080e040bd3ead352a38bee7ae2125ea5d44995f8ba,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,617,13,4,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"inline auto printf(string_view fmt, const T&... args) -> int {",bc55bd67353027a427f65d229359e41e82d6603d0004bc027885e8d6bb567a1e,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
./btop/include/fmt/printf.h,618,10,4,4,format,vfprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"  return vfprintf(stdout, fmt, make_printf_args(args...));",381faa67d17ceb80f3ab7b200463232c241fd5ac639889e3f7c443a10cc834bc,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
./btop/src/btop.cpp,883,55,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"		if (ec or not fs::is_directory(Theme::theme_dir) or access(Theme::theme_dir.c_str(), R_OK) == -1) Theme::theme_dir.clear();",245b94583f160d9a19ffaa6a36e594a26c8eab04d0792da604a4aaff4e9778c7,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/btop.cpp,888,51,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"			if (fs::is_directory(fs::path(theme_path)) and access(theme_path, R_OK) != -1) {",f54942af4ee7f028bc51af619465547eb18ff34bcde71c0fa29585383dfa749d,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/btop_theme.cpp,422,49,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"				if (file.path().extension() == "".theme"" and access(file.path().c_str(), R_OK) != -1 and not v_contains(themes, file.path().c_str())) {",bf2835c72fc1c1087dda50ece36fde821e5985dc1464477514d6e2889329cadc,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/freebsd/btop_collect.cpp,502,58,4,4,shell,popen,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,"			PipeWrapper(const char *file, const char *mode) {fd = popen(file, mode);}",a23d5090fe1514edaa9bf599955e7cde3c57565baa9a75030d5fa53a37cdcffd,2.0.19,FF1043,https://cwe.mitre.org/data/definitions/78.html
./btop/src/linux/btop_collect.cpp,262,55,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"		procPath = (fs::is_directory(fs::path(""/proc"")) and access(""/proc"", R_OK) != -1) ? ""/proc"" : """";",9e321cacec3878e8b06553239f37f69ed70c49abb44b9e7b4b81dbc6ed067345,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/linux/btop_collect.cpp,266,67,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"		passwd_path = (fs::is_regular_file(fs::path(""/etc/passwd"")) and access(""/etc/passwd"", R_OK) != -1) ? ""/etc/passwd"" : """";",0845d088ed05431b42649ab91056051e8ab3f795101d8d7c14f38c8135b895e8,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/linux/btop_collect.cpp,292,41,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"		if (not fs::exists(Cpu::freq_path) or access(Cpu::freq_path.c_str(), R_OK) == -1) Cpu::freq_path.clear();",40061bb4609e76c8089c7928b982a56aab39cc51439d934d0635e9f23dd93d0e,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/linux/btop_collect.cpp,403,53,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"			if (fs::exists(fs::path(""/sys/class/hwmon"")) and access(""/sys/class/hwmon"", R_OK) != -1) {",77d2b7ebf45c7aa92ecf56f5cf78d767e0e4b6517a1cd8037ea46bcec5c4944b,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/linux/btop_collect.cpp,2116,43,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"								if (fs::exists(stat_path, ec) and access(stat_path.c_str(), R_OK) == 0) {",dd5c8d7113399c6826ba67758d061b0f9b85dd63847cbff9d07ad422e3ebd2ec,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/linux/btop_collect.cpp,2229,31,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"					if (disk.stat.empty() or access(disk.stat.c_str(), R_OK) != 0) continue;",830e3cc0b70df0efdaaa259b9a3ff18dd5336aa4cb3af2ef0b2a0378b43cf1ab,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/linux/btop_collect.cpp,2323,8,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"			if (access(zfs_pool_stat_path.c_str(), R_OK) == 0) {",9dd62af94605b4ab99960e727443231bfac397f99da98d9cf263271c666b7a24,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/linux/btop_collect.cpp,2355,12,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"							if (access(file.path().c_str(), R_OK) == 0) {",03b70f76ef75c5c602661ed7a230cfda9a5261bc14a969c37a815f0bee8ed5f1,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,61,17,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"    int count = vsnprintf(NULL, 0, format, ap);",85df05a686f666eeddf84d591ad8066b73ea01c01ebbb1f35f39c99d084c4daf,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,71,17,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"        count = vsnprintf(buffer, count + 1, format, ap);",1adea990cafb1078623665ce9704e3e370ec3fcc9a3a17788fb508ad4194c90f,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,86,23,4,4,buffer,scanf,"The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).","Specify a limit to %s, or use a different input function.",,"CWE-120, CWE-20","__attribute__((format(scanf,3,4)))",71841e4f4f76a48c026ceabf0cff5f9e39511e1114bc8690dc48eee4289db8bb,2.0.19,FF1020,https://cwe.mitre.org/data/definitions/120.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,102,9,4,4,buffer,vfscanf,"The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).","Specify a limit to %s, or use a different input function.","If the scanf format is influenceable by an attacker, it's exploitable.","CWE-120, CWE-20","		ret = vfscanf(file, fmt, ap);",edc99bbf3b1de75adedb0d609a070b68268b936fd350c815287b3b6d6263c60e,2.0.19,FF1021,https://cwe.mitre.org/data/definitions/120.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,322,3,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"		strcpy(buf, dent->d_name);",777848b6e8b297409e942e98cbf2d4c7d5c1b80bc283f0dcb684c979151bc6ae,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,33,13,4,4,race,access,"This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).","Set up the correct permissions (e.g., using setuid()) and try to open the file directly.",,CWE-362/CWE-367!,"        if (access(vendor_path, F_OK) != -1) {",74e265a987b365ac5523c219cc39a26644432694cfcf5c26ff68c65564c5e573,2.0.19,FF1030,https://cwe.mitre.org/data/definitions/362.htmlhttps://cwe.mitre.org/data/definitions/367.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,90,13,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"            strcpy(dev_name, info->codename);",1aa413ab57da7cf0288e89bedc764843d711f08215171a38278c3626c3d9d783,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
./btop/src/osx/sensors.cpp,82,36,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,"	IOHIDEventSystemClientSetMatching(system, thermalSensors);",69ef8c34a887800a36eb00ed76b7633ce01fbab9ed272e9e999f19bac5973e41,2.0.19,FF1044,https://cwe.mitre.org/data/definitions/78.html
./btop/src/osx/sensors.cpp,83,63,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,	CFArrayRef matchingsrvs = IOHIDEventSystemClientCopyServices(system);,a988d03e8eb3c6ec59a6d83a25e2680cdc15deb11e04e029cea5a43ff25e519d,2.0.19,FF1044,https://cwe.mitre.org/data/definitions/78.html
./btop/src/osx/sensors.cpp,109,12,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,	CFRelease(system);,76a5b85f89134fe5f1321968d15a4689fa78a9c8373e2b7250b3f78d0c821421,2.0.19,FF1044,https://cwe.mitre.org/data/definitions/78.html
./btop/src/btop.cpp,907,13,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","			if (std::getenv(loc_env) != nullptr and str_to_upper(s_replace((string)std::getenv(loc_env), ""-"", """")).ends_with(""UTF8"")) {",0fd669dbf907284406877ac14e383641ee3712d66e01a09d6200242b67c4c791,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/btop.cpp,907,80,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","			if (std::getenv(loc_env) != nullptr and str_to_upper(s_replace((string)std::getenv(loc_env), ""-"", """")).ends_with(""UTF8"")) {",0fd669dbf907284406877ac14e383641ee3712d66e01a09d6200242b67c4c791,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/btop.cpp,908,18,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",				found = std::getenv(loc_env);,80c2b828e91352bb4ff1798833c549c9110a8cf6cfa0c876d3497bfe70a6e82f,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/btop_config.cpp,343,42,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","			if (const auto xdg_config_home = std::getenv(""XDG_CONFIG_HOME""); xdg_config_home != nullptr) {",e063479516e2ee2877d6628c247e93d7a3298941e2a99f793361e20997763b97,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/btop_config.cpp,347,38,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","			} else if (const auto home = std::getenv(""HOME""); home != nullptr) {",cdcd585626d15ba691397fdbe338901cd41572cbe61a6a2373bb22c18d5fc8a0,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/btop_config.cpp,792,41,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","			const auto xdg_state_home_ptr = std::getenv(""XDG_STATE_HOME"");",277decf6960d4a67c0e10e4d9b254f273b10906793ea0a1edee6a317e6b59dd7,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/btop_config.cpp,796,32,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","				const auto home_ptr = std::getenv(""HOME"");",268bb04350bb263e2366d618e6325d95174786426c5cc08c912d30aa2ff3ded7,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/btop_tools.cpp,580,15,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","		auto user = getenv(""LOGNAME"");",93b579737bc22cceca227bc0a01a2835b9f1ce6318400b2364c8fd5175db2ad2,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/btop_tools.cpp,581,52,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","		if (user == nullptr or strlen(user) == 0) user = getenv(""USER"");",4ccd7b0ebd8a1a5c23cbd0a45712656d83f3bf8ffb841870d1338f60483484b4,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/freebsd/btop_collect.cpp,596,26,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","		static bool snapped = (getenv(""BTOP_SNAPPED"") != nullptr);",3eeff27ba59f5afc665ef42f5a8379f5ff5d321991970ca4cc49866238178629,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/netbsd/btop_collect.cpp,708,26,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","		static bool snapped = (getenv(""BTOP_SNAPPED"") != nullptr);",3eeff27ba59f5afc665ef42f5a8379f5ff5d321991970ca4cc49866238178629,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/openbsd/btop_collect.cpp,557,26,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","		static bool snapped = (getenv(""BTOP_SNAPPED"") != nullptr);",3eeff27ba59f5afc665ef42f5a8379f5ff5d321991970ca4cc49866238178629,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/src/osx/btop_collect.cpp,647,26,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","		static bool snapped = (getenv(""BTOP_SNAPPED"") != nullptr);",3eeff27ba59f5afc665ef42f5a8379f5ff5d321991970ca4cc49866238178629,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./btop/include/fmt/base.h,729,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char fill_data_[max_fill_size] = {' '};,52caa8d4ad1bb275e2216df7472aa9a13600164feb06b07dc49826211789fc17,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/chrono.h,568,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char tmp[len];,cda1135d06ed65b6d5e7798218a7b5abac422e4b4af234f229d003879a02c4ae,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/chrono.h,569,10,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    std::memcpy(tmp, &digits, len);",4c78dd9d6e1564f25b44b7882358d54a0e6195e26ebad7aebd483ccb97ee89d1,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./btop/include/fmt/chrono.h,572,10,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    std::memcpy(buf, &digits, len);",2b83d341b4cb9a6bae0123c01e314307c3b7cc46dddc7508884b24c135a6ab29,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./btop/include/fmt/chrono.h,1289,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char buf[8];,794dd086f29fe8304359c335f25d99574851f607ff35b5fa940ffbc8b6b35d2c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/chrono.h,1297,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char buf[10];,9be0047bb01729e0b107fd1018f57326904460be88591f71182c8343cd5132c9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/chrono.h,1439,7,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,      char buf[8];,794dd086f29fe8304359c335f25d99574851f607ff35b5fa940ffbc8b6b35d2c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/compile.h,550,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char data[N];,e14ae02b386ae07c5040ed865823e0587a3657e9f66e30720a4818092c055dcc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/format.h,282,8,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  std::memcpy(static_cast<void*>(&to), &from, sizeof(to));",73a5e2493b72d42ea64ec52e2bbd5b90145ea301b482a58cb57cfd60686296f2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./btop/include/fmt/format.h,295,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char data[sizeof(int)];,54646c82da4091ec3a3159a201d83e2c596933883031fefd513b0113cd4f292b,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/format.h,655,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char buf[2 * block_size - 1] = {};,5dc07ee456fa7ddbf995ebd78c0b0429564cd915d779c75000e34a6945544d05,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/format.h,814,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(new_data, old_data, buf.size() * sizeof(T));",9909f319e6940526f86ffce8d6b0efec2e3fe0092b032c6b740d0201811a1638,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./btop/include/fmt/format.h,1197,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    memcpy(out, digits2(value), 2);",78fd36f964360a926aeaf0309652640ea85f7755b6d7fbf937d92b6e0b7ecf8d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./btop/include/fmt/format.h,1244,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char buffer[digits10<UInt>() + 1];,e90972bb4b09160e174ebdc60215ffbf39aa0f76b93c533d94a5a16f4b816280,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/format.h,1281,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char buffer[num_bits<UInt>()];,d657ae68afa747bbea5e4dfb42502d290b6756cb036deed6063f527499cf29a3,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/format.h,2055,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char buffer[buffer_size];,14e9f141c47577b6f0ca00bf8128896e9380cd59e0134639d48ebf5945a400b4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/format.h,3088,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char xdigits[num_bits<carrier_uint>() / 4];,2b06fac4db048ac1a6421c003c00895d9f19e78d4e69bb4d9c00c7de28db84b4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/format.h,3532,7,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"      memcpy(ptr, prefix, 2);",737d4216d346a96a4f0be203c01ea9ba9eeee401f34f02183546fb0027eb4819,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./btop/include/fmt/format.h,4158,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  mutable char buffer_[buffer_size];,0080222d369c702eac4f2ba55e2531ebf1cee126bf5dfb3b8783b5e47c542ec0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/format.h,4351,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  char buffer[max_of(detail::digits10<T>() + 2, 5)];",ad7038522c02aa1974c8754236f27334c4f9c340c98b8a1e7a61fe9370a1ee3e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/ranges.h,314,59,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  FMT_CONSTEXPR void set_brackets(basic_string_view<Char> open,",6c66b4049e33e5b0ea7ada559c4cea48502e01cbea4d03fe696d3d906bdf071f,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/include/fmt/ranges.h,316,24,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,    opening_bracket_ = open;,63b52feec004ed4e044da3d7e20993f79dd58d306e06237c521d688d26b84a4b,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/include/fmt/ranges.h,417,59,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  FMT_CONSTEXPR void set_brackets(basic_string_view<Char> open,",6c66b4049e33e5b0ea7ada559c4cea48502e01cbea4d03fe696d3d906bdf071f,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/include/fmt/ranges.h,419,24,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,    opening_bracket_ = open;,63b52feec004ed4e044da3d7e20993f79dd58d306e06237c521d688d26b84a4b,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/include/fmt/ranges.h,567,51,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    if (!no_delimiters_) out = detail::copy<Char>(open, out);",b478d24aed4191b492971199c02351f6409570c9836f095dd7aa05dbff7a61ad,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/btop.cpp,875,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char buf [PATH_MAX];,b28a800b5d6a5a1c3d3098752843edc6237ec79461efd81fbae7d5095fef5562,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/btop_draw.cpp,1567,23,2,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190).","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended).",,CWE-190,			int mouse_y = std::atoi(cmd_key.substr(6).data());,128581f5c5fd2952ab1e144413d55df9e953e7d5a072c758e22945a5d5d4ed75,2.0.19,FF1047,https://cwe.mitre.org/data/definitions/190.html
./btop/src/btop_input.cpp,109,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char buf[1024];,5065f5757ec562d76d80e513ac33668b30265995d34290fc3fe7083c178c0622,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/btop_input.cpp,233,25,2,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190).","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended).",,CWE-190,					auto intKey = std::atoi(key.data());,733f704229890db8ba5b65222b00cc2d5357e29f2cb8ed2fde52007368adcb21,2.0.19,FF1047,https://cwe.mitre.org/data/definitions/190.html
./btop/src/btop_tools.cpp,100,19,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"			auto dev_tty = open(""/dev/tty"", O_RDONLY | O_CLOEXEC);",0b59c3ef478023a6b6aed76bf729aa91c586b0b7186779f07f1258af28837223,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/btop_tools.cpp,573,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char host[HOST_NAME_MAX];,2a80750dc936c2414bdd202c1baa7c579317799872e522ca244610f6089efb6b,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/freebsd/btop_collect.cpp,213,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char buffer[1024];,3474af3a84d38a685cce2d20df708587e9c57e5bb4c612e61586c780a1fe1236,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/freebsd/btop_collect.cpp,515,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char poolName[512];,6826509bd18c8ca2ced4bfb13d46152baadc5087ea03b62d0c43c6a5e581c6b9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/freebsd/btop_collect.cpp,553,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char sysCtl[1024];,6382420770e7a265630c772a3dede7b91bfc9b028873ac3f9529ed83d05ddae5,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/freebsd/btop_collect.cpp,557,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,				char buf[512];,657ff8329591453022e3359353e72b30b702c62cf6567d962d837e05e108b31a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/freebsd/btop_collect.cpp,628,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char buf[_POSIX2_LINE_MAX];,a3e0b5a8c84ac1e2b84b13be65dd2d8461bf2a350ffff4dbd63d650cc1bc7119,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/freebsd/btop_collect.cpp,808,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char ip[IPBUFFER_MAXSIZE];,d06e8956be1ac5148b5463502e75a8a7f4fa930c689dc291ebe8d280ec4df6e6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/freebsd/btop_collect.cpp,871,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,							char iface[32];,ee6c0003da52c1027166f447a5034107dcd25c48098031a9cd5ede7b45cfaecc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/freebsd/btop_collect.cpp,1118,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char buf[_POSIX2_LINE_MAX];,a3e0b5a8c84ac1e2b84b13be65dd2d8461bf2a350ffff4dbd63d650cc1bc7119,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/btop_collect.cpp,450,27,2,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190).","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended).",,CWE-190,"						const int file_id = atoi(file.path().filename().c_str() + 4); // skip ""temp"" prefix",dd494d14c6e2619ffde30c7987d75b3dc800790e7301f62f0b0bbdae99fbb554,2.0.19,FF1047,https://cwe.mitre.org/data/definitions/190.html
./btop/src/linux/btop_collect.cpp,946,10,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"			cread.open(Shared::procPath / ""stat"");",2b6a8985037f8d53ca8148ad9b594bea01aa9b75296c7165c0929315967f14aa,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,1187,6,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,					char name[NVML_DEVICE_NAME_BUFFER_SIZE];,ad7c740d029edc6f2af27031d07b372a472479630e622fdfa2b1174e684527f6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/btop_collect.cpp,1504,6,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,					char name[RSMI_DEVICE_NAME_BUFFER_SIZE];,bfad29d208f73d386c9990f4d36df8af79003de1f394ac77e4aab1ef948e047a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/btop_collect.cpp,2033,15,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"					diskread.open(Shared::procPath / ""filesystems"");",74166104715dce2059467f78bf9172e106d61e39a2f63713d0b0a4c543665519,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2050,15,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"					diskread.open(""/etc/fstab"");",009c6f5a4bcc9ab709cc6b9a5ad9fa07b7d6d166e6d699842d1060f0b2c56c86,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2071,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"				diskread.open((Shared::procPath / ""self/mountinfo""));",8189450143cd6b6cfc08e1c3ce4e3d32ce91d669df9c9e93f1f7b990e14a1d57,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2234,15,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,					diskread.open(disk.stat);,2a636f000781b8d14b2f29c10f7040281671c4d7de72ae43800543297a977a94,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2346,17,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,					filestream.open(file.path());,5cd82ab613851b438017ff071da6bf3d61235ac572594a66fc49a5c946250f39,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2387,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,				diskread.open(file.path());,b7569918750c6faf1a7b10c5deee0692f1d8fea43216a01ff92e33e0f9e037f2,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2484,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char ip[IPBUFFER_MAXSIZE];,d06e8956be1ac5148b5463502e75a8a7f4fa930c689dc291ebe8d280ec4df6e6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/btop_collect.cpp,2716,11,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"			d_read.open(pid_path / ""smaps"");",63fb2cf2328aeb6985d4bd88fdda4675f4910fab56f029ed86cc77270868e0e0,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2751,11,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"			d_read.open(pid_path / ""io"");",b2910a7ee60cdfb4f1df6113f73976808d570d34a3ef17c8381610c1c28da335,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2832,11,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,				pread.open(Shared::passwd_path);,369dc54d7885ebb84c7cd4ff93312c544717ca5a57764dd2b193f50fbed12526,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2851,10,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"			pread.open(Shared::procPath / ""stat"");",aeb0117e4769bb9cbbdc38fa36b1ff854afd7276996de465743de8b74222a16c,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2890,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"					pread.open(d.path() / ""comm"");",e6d5e105125018c44172366c081e1cc7937f435fe303ddb2439f917cbcb60e43,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2897,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"					pread.open(d.path() / ""cmdline"");",7abafefd49cbb00fbdbe186e7f7109eea3818c9b96a11abf05eb315bf9fba52a,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2910,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"					pread.open(d.path() / ""status"");",58dd6a4d858d6c9c42b1c6b5edfe1f7d7afc824242bcab0346043a9e3f7e9d38,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,2948,11,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"				pread.open(d.path() / ""stat"");",ef3523599263c6f662efbd760b9bafc45d9ea1ed0bca7e950ed7e8a0c6ff8998,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/btop_collect.cpp,3017,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"					pread.open(d.path() / ""statm"");",5d72c9bdd1cbf6e520e490f416972222fab6e8d4d94beaf432179849f31b0cb5,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/intel_gpu_top/drm.h,125,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char padding[60];			/**< Pad to cache line */,9f4d519a61b6f2eecc316a18035897b913359829b8f40622a722fc7514aec59c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/drm_mode.h,259,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[DRM_DISPLAY_MODE_LEN];,e0739e4423d2e671dca3106f7b95cc22484c07b36b2d6c858a45a0e1a70666e6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/drm_mode.h,556,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[DRM_PROP_NAME_LEN];,0f1f64c234dba128a5434124a431d09aabb2ef9b7c81542c31d8ab94520a93ca,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/drm_mode.h,610,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char name[DRM_PROP_NAME_LEN];,0f1f64c234dba128a5434124a431d09aabb2ef9b7c81542c31d8ab94520a93ca,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/i915_drm.h,2948,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char uuid[36];,d9a94de49ce251f98c34b55e8f04266c15529afd0b99bb4f0780e2be9d8386b0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/i915_drm.h,3372,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char uuid[36];,d9a94de49ce251f98c34b55e8f04266c15529afd0b99bb4f0780e2be9d8386b0,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/igt_perf.c,32,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	dir = open(path, O_RDONLY);",68bc8470c3d8a46c6096dc4d059fa5c57130bf00ee46183e875444b0f3f066eb,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/intel_gpu_top/igt_perf.c,60,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(buf, prefix, plen);",cf12c7d2c201e7888a71c09931779d9bc9df2459c627719197bd35b7bd731473,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./btop/src/linux/intel_gpu_top/igt_perf.c,84,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(buf, pref, len);",5b965d10b43a63360b028b390a656dbce8b016f64f75bd262027b2f608187429,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./btop/src/linux/intel_gpu_top/igt_perf.c,99,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[80];,993f92e14b9f08606183213cba5c55864badef29d5682c7370c5390df46d0c2e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/igt_perf.c,106,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[80];,993f92e14b9f08606183213cba5c55864badef29d5682c7370c5390df46d0c2e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/igt_perf.c,113,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[64];,465eabb0806860179ab2df61dda647bce326eb7218231f8bbb69a8f322b93fff,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/igt_perf.c,120,7,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	fd = open(buf, O_RDONLY);",d2507e7a494ce66ba3769219dc6b11ca93505202e23276d4ab0c8046af5393d2,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/intel_gpu_top/igt_perf.c,136,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[80];,993f92e14b9f08606183213cba5c55864badef29d5682c7370c5390df46d0c2e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/igt_perf.c,137,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char path[PATH_MAX];,cdc22d4b1c2076a8c80e5924fadbebba26a4ca3e1ad91e60c584a8dcd0345d6d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/igt_perf.c,141,9,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	return open(path, O_RDONLY);",d6d987b80f55e913fe1974a40918877ec3f4e9d762a63e06377cc37f4034bda1,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,117,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char buf[128] = {};,38d6e5bbb0fb4325bf3160c017ed29f4c05b62c21bd9df6d97ec8492c8ee874f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,120,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"	dir = open(path, O_RDONLY);",68bc8470c3d8a46c6096dc4d059fa5c57130bf00ee46183e875444b0f3f066eb,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,208,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"	char buf[128], *p;",49668131b9cc7ef2152e8f099efc92cda9c1b8f491ce0fc9b79ae218c48ebddc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,284,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char sysfs_root[PATH_MAX];,64a1ab129c50f71310628fcde8356e60f73b7b0d34bba66c01488b014dab8315,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,312,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char buf[256];,86753089edd8e96675f0102bc52bd39c8f2c94e4f63e4a6e6052dfa82d40f6a3,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,19,12,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    static char path[256];,125394c431da25adc8e2f5580d636b1b7f66248b0d91f42e143e3050d80a1967,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,20,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char vendor_path[256];,3754ead16f0ca2df9b4128a0fd426e215e1686bced895b2ec2c51f7cf51f1107,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,21,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char vendor_id[16];,0b9443c3d2519bf989852412822b3d1a5312c52bea6bf00feaca11ee1b7bab1e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,34,26,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"            FILE *file = fopen(vendor_path, ""r"");",032ae7c1d74d5bdef4ef6c1127aca47b62e531287ec1af7c79d0cdcc06737000,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,58,12,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    static char device_path[256];,cff0ae17f7e80d6b34435d2fe1f95fdc21ec43c33e9f941f4f061cd1205cc753,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,59,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char device_id[16];,59148a7d223b5978cecbc713242495c65496db15f5d27d4ec12584ab8f3104cf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,64,18,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    FILE *file = fopen(device_path, ""r"");",04aaf89e8a9ff6b95f931ba076d47dcc1b88315f4bfb44076ab0aba48633f1e4,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,83,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char dev_name[256];,3c9b0d43b651ad31132c217be25631c5d9450c2284c4be5fb1a5b69ca9c4d5bf,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,84,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char full_name[256];,6502a04dcef2f9e002e6fdfddaf13c0d8ff31bb323bf059079c6a6712b653107,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/linux/intel_gpu_top/intel_name_lookup_shim.c,88,13,4,2,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",Risk is low because the source is a constant string.,CWE-120,"            strcpy(dev_name, ""(unknown)"");",9b338e0b4ac06e058316a1ee70b688f295828c740c99d50bcb771b4af17ad287,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
./btop/src/netbsd/btop_collect.cpp,208,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char buffer[1024];,3474af3a84d38a685cce2d20df708587e9c57e5bb4c612e61586c780a1fe1236,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/netbsd/btop_collect.cpp,231,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"		int fd = open(_PATH_SYSMON, O_RDONLY);",b4f9d983ad593e8ff3795d324dbe492d9393f59421d84c91b1ac4caa3975c5c7,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/netbsd/btop_collect.cpp,283,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"		int fd = open(_PATH_SYSMON, O_RDONLY);",b4f9d983ad593e8ff3795d324dbe492d9393f59421d84c91b1ac4caa3975c5c7,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/netbsd/btop_collect.cpp,428,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"		int fd = open(_PATH_SYSMON, O_RDONLY);",b4f9d983ad593e8ff3795d324dbe492d9393f59421d84c91b1ac4caa3975c5c7,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./btop/src/netbsd/btop_collect.cpp,903,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char ip[IPBUFFER_MAXSIZE];,d06e8956be1ac5148b5463502e75a8a7f4fa930c689dc291ebe8d280ec4df6e6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/netbsd/btop_collect.cpp,966,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,							char iface[32];,ee6c0003da52c1027166f447a5034107dcd25c48098031a9cd5ede7b45cfaecc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/netbsd/btop_collect.cpp,1194,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char buf[_POSIX2_LINE_MAX];,a3e0b5a8c84ac1e2b84b13be65dd2d8461bf2a350ffff4dbd63d650cc1bc7119,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/openbsd/btop_collect.cpp,208,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char buffer[1024];,3474af3a84d38a685cce2d20df708587e9c57e5bb4c612e61586c780a1fe1236,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/openbsd/btop_collect.cpp,760,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char ip[IPBUFFER_MAXSIZE];,d06e8956be1ac5148b5463502e75a8a7f4fa930c689dc291ebe8d280ec4df6e6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/openbsd/btop_collect.cpp,823,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,							char iface[32];,ee6c0003da52c1027166f447a5034107dcd25c48098031a9cd5ede7b45cfaecc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/openbsd/btop_collect.cpp,1051,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char buf[_POSIX2_LINE_MAX];,a3e0b5a8c84ac1e2b84b13be65dd2d8461bf2a350ffff4dbd63d650cc1bc7119,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/osx/btop_collect.cpp,209,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char buffer[1024];,3474af3a84d38a685cce2d20df708587e9c57e5bb4c612e61586c780a1fe1236,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/osx/btop_collect.cpp,544,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char buf[200];,ac093ada935e99035b2643a550215465f8fde252fad6d350a080c886f6e1e5ab,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/osx/btop_collect.cpp,843,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char ip[IPBUFFER_MAXSIZE];,d06e8956be1ac5148b5463502e75a8a7f4fa930c689dc291ebe8d280ec4df6e6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/osx/btop_collect.cpp,904,8,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,							char iface[32];,ee6c0003da52c1027166f447a5034107dcd25c48098031a9cd5ede7b45cfaecc,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/osx/btop_collect.cpp,1184,7,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,						char fullname[PROC_PIDPATHINFO_MAXSIZE];,4d595bcadf69fc88cb2cf18628546bc472ca674d45b31b72cbf60830da939091,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/osx/sensors.cpp,92,6,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,					char buf[200];,ac093ada935e99035b2643a550215465f8fde252fad6d350a080c886f6e1e5ab,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/osx/smc.cpp,135,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(val->bytes, outputStructure.bytes, sizeof(outputStructure.bytes));",0afab0df6747122cb89a1123eeae5ea301bff7ae723b5f4280a8cf78685661a4,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./btop/src/osx/smc.hpp,57,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char reserved[1];,be2510e32eccb609300e83677c105c036e76c17073acff1d83a7cd9799018cb2,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/osx/smc.hpp,75,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,typedef char SMCBytes_t[32];,4d12a2725d18d4bf305bbeb4b52a52ddebcf536a52570369eaec0b85cbe19c88,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/src/osx/smc.hpp,89,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,typedef char UInt32Char_t[5];,0c3dd773f6e6693f461d120fbb4b0aa9a541842f197c81d0d2da3c8da8f48880,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./btop/include/fmt/os.h,285,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  auto read(void* buffer, size_t count) -> size_t;",faa4cbee6e99151deb8067620df30883fbbf23cd3d87a929fb5079cfa2b86e43,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./btop/src/btop_input.cpp,111,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","			while((count = read(STDIN_FILENO, buf, sizeof(buf))) > 0) {",394f29c7ebcb5c37d596f72d68fff67e5d042d056b5ced0ce5bd919f1d0a80c0,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./btop/src/btop_tools.cpp,581,26,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		if (user == nullptr or strlen(user) == 0) user = getenv(""USER"");",4ccd7b0ebd8a1a5c23cbd0a45712656d83f3bf8ffb841870d1338f60483484b4,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./btop/src/freebsd/btop_collect.cpp,872,8,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"							strncpy(iface, sdl->sdl_data, sdl->sdl_nlen);",e6231f050da84b581feea9b02cd8f451fe2d39abb3c32e058cb1a0169efe3b28,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
./btop/src/linux/intel_gpu_top/igt_perf.c,55,14,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,#define plen strlen(prefix),5192d86402159dcdfeed6d1ab54748550b0009d142d38ef3b7ccc61b26c06559,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./btop/src/linux/intel_gpu_top/igt_perf.c,78,12,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,	int len = strlen(pref);,272c08cbadbbda66cdc6f5982794d5326fa5af2ae7df2a6e636c2462fba25085,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./btop/src/linux/intel_gpu_top/igt_perf.c,124,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	ret = read(fd, buf, sizeof(buf) - 1);",1e155313d580c617852ff599091fc8f191a382e40644cecced1b2997525b3727,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,219,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	ret = read(fd, buf, sizeof(buf));",7363aa99f06786f81af1689404ea91c80d7783a7f4a7e1e47e3e534cd030e7d2,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,309,31,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		const unsigned int endlen = strlen(endswith);,6ef4de672b48383554e6082b98b21dd30a6365e11ac246c3acc7409e55c57ccf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,317,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		if (strlen(dent->d_name) >= sizeof(buf)) {,ad6cd0081333fc7deab93b6fbb38a66f8f05c9bdad16a6c2f62088468aa3cc95,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,325,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		if (strlen(buf) < (endlen + 4)),7e23100493d212e49ff890ea31527c186074877f48ac24ab0fdde3947936c809,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,327,19,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"		if (strcmp(&buf[strlen(buf) - endlen], endswith))",c5a34eb98ade822f983b31520178afb1e31300c2ccd3a98881e0ab8654632a95,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,332,7,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,		buf[strlen(buf) - endlen] = 0;,ceb0e4ff306799c197e0bd62efc4e055a9630e9ee1843c408fdc251cc505911b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./btop/src/linux/intel_gpu_top/intel_gpu_top.c,604,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","	len = read(fd, buf, sizeof(buf));",ead6ed353c52a03f8773a9a94f873864f3309c01637115c09a9ce5e6785e0e50,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./btop/src/netbsd/btop_collect.cpp,967,8,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"							strncpy(iface, sdl->sdl_data, sdl->sdl_nlen);",e6231f050da84b581feea9b02cd8f451fe2d39abb3c32e058cb1a0169efe3b28,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
./btop/src/openbsd/btop_collect.cpp,824,8,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"							strncpy(iface, sdl->sdl_data, sdl->sdl_nlen);",e6231f050da84b581feea9b02cd8f451fe2d39abb3c32e058cb1a0169efe3b28,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
./btop/src/osx/btop_collect.cpp,905,8,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"							strncpy(iface, sdl->sdl_data, sdl->sdl_nlen);",e6231f050da84b581feea9b02cd8f451fe2d39abb3c32e058cb1a0169efe3b28,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
