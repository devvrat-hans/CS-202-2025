<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.18.3"/>
    <errors>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/common-ggml.h" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common-ggml.h" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common-ggml.h" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common-ggml.h" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common-ggml.cpp" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common-ggml.cpp" line="4" column="0"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/examples/common-ggml.cpp">
            <location file="ggml/examples/common-ggml.cpp" line="157" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/examples/common-ggml.cpp">
            <location file="ggml/examples/common-ggml.cpp" line="223" column="24"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="ggml/examples/common-ggml.cpp">
            <location file="ggml/examples/common-ggml.cpp" line="125" column="56"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="ggml/examples/common-ggml.cpp">
            <location file="ggml/examples/common-ggml.cpp" line="133" column="56"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.h" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.h" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.h" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.h" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.h" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ctime&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ctime&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.h" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.h" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.h" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;codecvt&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;codecvt&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;locale&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;locale&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/common.cpp" line="11" column="0"/>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;params&apos; can be declared as reference to const" verbose="Parameter &apos;params&apos; can be declared as reference to const" cwe="398" file0="ggml/examples/common.cpp">
            <location file="ggml/examples/common.cpp" line="14" column="101" info="Parameter &apos;params&apos; can be declared as reference to const"/>
            <symbol>params</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;rng&apos; can be declared as reference to const" verbose="Parameter &apos;rng&apos; can be declared as reference to const" cwe="398" file0="ggml/examples/common.cpp">
            <location file="ggml/examples/common.cpp" line="118" column="46" info="Parameter &apos;rng&apos; can be declared as reference to const"/>
            <symbol>rng</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;vocab&apos; can be declared as reference to const" verbose="Parameter &apos;vocab&apos; can be declared as reference to const" cwe="398" file0="ggml/examples/common.cpp">
            <location file="ggml/examples/common.cpp" line="353" column="37" info="Parameter &apos;vocab&apos; can be declared as reference to const"/>
            <symbol>vocab</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;cube&apos; can be declared as const array" verbose="Variable &apos;cube&apos; can be declared as const array" cwe="398" file0="ggml/examples/common.cpp">
            <location file="ggml/examples/common.h" line="265" column="19" info="Variable &apos;cube&apos; can be declared as const array"/>
            <symbol>cube</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy algorithm instead of a raw loop." verbose="Consider using std::copy algorithm instead of a raw loop." cwe="398" file0="ggml/examples/common.cpp">
            <location file="ggml/examples/common.cpp" line="253" column="19"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy algorithm instead of a raw loop." verbose="Consider using std::copy algorithm instead of a raw loop." cwe="398" file0="ggml/examples/common.cpp">
            <location file="ggml/examples/common.cpp" line="285" column="27"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="ggml/examples/common.cpp">
            <location file="ggml/examples/common.cpp" line="432" column="14"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="ggml/examples/common.cpp">
            <location file="ggml/examples/common.cpp" line="448" column="11"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="ggml/examples/common.cpp">
            <location file="ggml/examples/common.cpp" line="547" column="14"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="ggml/examples/common.cpp">
            <location file="ggml/examples/common.cpp" line="563" column="11"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common.h&quot; not found." verbose="Include file: &quot;common.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common-ggml.h&quot; not found." verbose="Include file: &quot;common-ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="16" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)&apos; is always false" verbose="Condition &apos;!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)&apos; is always false" cwe="570" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="812" column="17" info="Condition &apos;!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)&apos; is always false"/>
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="812" column="27" info="Calling function &apos;gpt2_eval&apos; returns 1"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="141" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="698" column="10"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="721" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="91" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="102" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="103" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="104" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="105" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="106" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="107" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="125" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-alloc.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="138" column="22"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common.h&quot; not found." verbose="Include file: &quot;common.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="14" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common-ggml.h&quot; not found." verbose="Include file: &quot;common-ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="24" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)&apos; is always false" verbose="Condition &apos;!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)&apos; is always false" cwe="570" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="873" column="17" info="Condition &apos;!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)&apos; is always false"/>
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="873" column="27" info="Calling function &apos;gpt2_eval&apos; returns 1"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="165" column="22"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="115" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="126" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="127" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="128" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="129" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="130" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="131" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="149" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="162" column="22"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;ctx&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;ctx&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="324" column="17" info="ctx is overwritten"/>
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="313" column="20" info="ctx is initialized"/>
            <symbol>ctx</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;n_ctx&apos; shadows outer argument" verbose="Local variable &apos;n_ctx&apos; shadows outer argument" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="240" column="19" info="Shadow variable"/>
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="103" column="92" info="Shadowed declaration"/>
            <symbol>n_ctx</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;ctx&apos; shadows outer variable" verbose="Local variable &apos;ctx&apos; shadows outer variable" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="313" column="16" info="Shadow variable"/>
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="184" column="12" info="Shadowed declaration"/>
            <symbol>ctx</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;n_ctx&apos; shadows outer argument" verbose="Local variable &apos;n_ctx&apos; shadows outer argument" cwe="398" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="335" column="19" info="Shadow variable"/>
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="103" column="92" info="Shadowed declaration"/>
            <symbol>n_ctx</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common.h&quot; not found." verbose="Include file: &quot;common.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="14" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common-ggml.h&quot; not found." verbose="Include file: &quot;common-ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;set&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;set&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="24" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="25" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="212" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="848" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="850" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="853" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="854" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="855" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="162" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="173" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="174" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="175" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="176" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="177" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="178" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="196" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="209" column="22"/>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;n_ctx&apos; shadows outer argument" verbose="Local variable &apos;n_ctx&apos; shadows outer argument" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="238" column="19" info="Shadow variable"/>
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="150" column="92" info="Shadowed declaration"/>
            <symbol>n_ctx</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;n_ctx&apos; shadows outer argument" verbose="Local variable &apos;n_ctx&apos; shadows outer argument" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="331" column="19" info="Shadow variable"/>
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="150" column="92" info="Shadowed declaration"/>
            <symbol>n_ctx</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;n_ctx&apos; shadows outer argument" verbose="Local variable &apos;n_ctx&apos; shadows outer argument" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="402" column="19" info="Shadow variable"/>
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="150" column="92" info="Shadowed declaration"/>
            <symbol>n_ctx</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;n_tokens&apos; shadows outer variable" verbose="Local variable &apos;n_tokens&apos; shadows outer variable" cwe="398" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="920" column="23" info="Shadow variable"/>
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="877" column="19" info="Shadowed declaration"/>
            <symbol>n_tokens</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common.h&quot; not found." verbose="Include file: &quot;common.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common-ggml.h&quot; not found." verbose="Include file: &quot;common-ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="13" column="0"/>
        </error>
        <error id="memleakOnRealloc" severity="error" msg="Common realloc mistake: &apos;buf&apos; nulled but not freed upon failure" verbose="Common realloc mistake: &apos;buf&apos; nulled but not freed upon failure" cwe="401" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="418" column="9"/>
            <symbol>buf</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="138" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="439" column="10"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="685" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="88" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="99" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="100" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="101" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="102" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="103" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="104" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="122" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-ctx.cpp">
            <location file="ggml/examples/gpt-2/main-ctx.cpp" line="135" column="22"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common.h&quot; not found." verbose="Include file: &quot;common.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="18" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common-ggml.h&quot; not found." verbose="Include file: &quot;common-ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="24" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="28" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;gpu_backend&apos; is always false" verbose="Condition &apos;gpu_backend&apos; is always false" cwe="570" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="134" column="9" info="Condition &apos;gpu_backend&apos; is always false"/>
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="110" column="34" info="Assignment &apos;gpu_backend=NULL&apos;, assigned value is 0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!gpt2_eval(model,sched,n_past,embd,logits)&apos; is always false" verbose="Condition &apos;!gpt2_eval(model,sched,n_past,embd,logits)&apos; is always false" cwe="570" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="1002" column="17" info="Condition &apos;!gpt2_eval(model,sched,n_past,embd,logits)&apos; is always false"/>
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="1002" column="27" info="Calling function &apos;gpt2_eval&apos; returns 1"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="217" column="22"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="167" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="178" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="179" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="180" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="181" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="182" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="183" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="201" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="214" column="22"/>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;params&apos; shadows outer argument" verbose="Local variable &apos;params&apos; shadows outer argument" cwe="398" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="239" column="33" info="Shadow variable"/>
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="155" column="107" info="Shadowed declaration"/>
            <symbol>params</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-blas.h&quot; not found." verbose="Include file: &quot;ggml-blas.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="15" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common.h&quot; not found." verbose="Include file: &quot;common.h&quot; not found.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common-ggml.h&quot; not found." verbose="Include file: &quot;common-ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="14" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="107" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="108" column="24"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="47" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="53" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="60" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="61" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="62" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="63" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="64" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="65" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="80" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="81" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="82" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="83" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="84" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="85" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="91" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="92" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="103" column="24"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/quantize.cpp" line="104" column="24"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-j/main.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/examples/gpt-j/main.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common.h&quot; not found." verbose="Include file: &quot;common.h&quot; not found.">
            <location file="ggml/examples/gpt-j/main.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common-ggml.h&quot; not found." verbose="Include file: &quot;common-ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-j/main.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/main.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/main.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/main.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/main.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/main.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/main.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/main.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/main.cpp" line="14" column="0"/>
        </error>
        <error id="memleakOnRealloc" severity="error" msg="Common realloc mistake: &apos;buf&apos; nulled but not freed upon failure" verbose="Common realloc mistake: &apos;buf&apos; nulled but not freed upon failure" cwe="401" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="415" column="9"/>
            <symbol>buf</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="141" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="433" column="18"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="606" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="89" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="100" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="101" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="102" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="103" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="104" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="105" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="106" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="125" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/main.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="138" column="22"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common.h&quot; not found." verbose="Include file: &quot;common.h&quot; not found.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;common-ggml.h&quot; not found." verbose="Include file: &quot;common-ggml.h&quot; not found.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="14" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="110" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="111" column="24"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="48" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="54" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="61" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="62" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="63" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="64" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="65" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="66" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="67" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="82" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="83" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="84" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="85" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="86" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="87" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="88" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="94" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="95" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="106" column="24"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/quantize.cpp" line="107" column="24"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/magika/main.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;gguf.h&quot; not found." verbose="Include file: &quot;gguf.h&quot; not found.">
            <location file="ggml/examples/magika/main.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/examples/magika/main.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/examples/magika/main.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/magika/main.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/magika/main.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/magika/main.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;numeric&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;numeric&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/magika/main.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/magika/main.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/magika/main.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/magika/main.cpp" line="12" column="0"/>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;magika_hparams::block_size&apos; is never used." verbose="struct member &apos;magika_hparams::block_size&apos; is never used." cwe="563" file0="ggml/examples/magika/main.cpp">
            <location file="ggml/examples/magika/main.cpp" line="41" column="15"/>
            <symbol>magika_hparams::block_size</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;magika_hparams::min_file_size_for_dl&apos; is never used." verbose="struct member &apos;magika_hparams::min_file_size_for_dl&apos; is never used." cwe="563" file0="ggml/examples/magika/main.cpp">
            <location file="ggml/examples/magika/main.cpp" line="45" column="15"/>
            <symbol>magika_hparams::min_file_size_for_dl</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-opt.h&quot; not found." verbose="Include file: &quot;ggml-opt.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.h" line="1" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.h" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.h" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.h" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.h" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.h" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-common.h" line="8" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-common.h" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-common.h" line="10" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;gguf.h&quot; not found." verbose="Include file: &quot;gguf.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-common.h" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-common.h" line="12" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-opt.h&quot; not found." verbose="Include file: &quot;ggml-opt.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-common.h" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;utility&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;utility&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="16" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/mnist/mnist-common.cpp">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="32" column="18"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/mnist/mnist-common.cpp">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="75" column="18"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;mnist_image_print&apos; argument 1 names different: declaration &apos;f&apos; definition &apos;stream&apos;." verbose="Function &apos;mnist_image_print&apos; argument 1 names different: declaration &apos;f&apos; definition &apos;stream&apos;." cwe="628" inconclusive="true" file0="ggml/examples/mnist/mnist-common.cpp">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="42" column="31"/>
            <location file="ggml/examples/mnist/mnist-common.h" line="158" column="31"/>
            <symbol>mnist_image_print</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;digit&apos; is assigned a value that is never used." verbose="Variable &apos;digit&apos; is assigned a value that is never used." cwe="563" file0="ggml/examples/mnist/mnist-common.cpp">
            <location file="ggml/examples/mnist/mnist-common.cpp" line="458" column="29"/>
            <symbol>digit</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-eval.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-opt.h&quot; not found." verbose="Include file: &quot;ggml-opt.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-eval.cpp" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-eval.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-eval.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-eval.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-eval.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ctime&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ctime&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-eval.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-eval.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-eval.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-eval.cpp" line="13" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-opt.h&quot; not found." verbose="Include file: &quot;ggml-opt.h&quot; not found.">
            <location file="ggml/examples/mnist/mnist-train.cpp" line="1" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-train.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-train.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-train.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ctime&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ctime&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-train.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/mnist/mnist-train.cpp" line="8" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/perf-metal/perf-metal.cpp" line="12" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/examples/perf-metal/perf-metal.cpp" line="13" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/perf-metal/perf-metal.cpp" line="14" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/examples/perf-metal/perf-metal.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/perf-metal/perf-metal.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/perf-metal/perf-metal.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/perf-metal/perf-metal.cpp" line="19" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/sam/sam.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/examples/sam/sam.cpp" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/examples/sam/sam.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/sam/sam.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;stb_image.h&quot; not found." verbose="Include file: &quot;stb_image.h&quot; not found.">
            <location file="ggml/examples/sam/sam.cpp" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;stb_image_write.h&quot; not found." verbose="Include file: &quot;stb_image_write.h&quot; not found.">
            <location file="ggml/examples/sam/sam.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/sam/sam.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/sam/sam.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/sam/sam.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/sam/sam.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/sam/sam.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/sam/sam.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/sam/sam.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/sam/sam.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/sam/sam.cpp" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/sam/sam.cpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/sam/sam.cpp" line="23" column="0"/>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;sam_hparams::n_img_size&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;sam_hparams::n_img_size&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="46" column="13"/>
            <symbol>sam_hparams::n_img_size</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;sam_hparams::n_window_size&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;sam_hparams::n_window_size&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="47" column="13"/>
            <symbol>sam_hparams::n_window_size</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;sam_hparams::n_patch_size&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;sam_hparams::n_patch_size&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="48" column="13"/>
            <symbol>sam_hparams::n_patch_size</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!sam_decode_mask(model,enc_res,pe_img_dense,ctx0,gf,state,multimask_output)&apos; is always false" verbose="Condition &apos;!sam_decode_mask(model,enc_res,pe_img_dense,ctx0,gf,state,multimask_output)&apos; is always false" cwe="570" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="2034" column="9" info="Condition &apos;!sam_decode_mask(model,enc_res,pe_img_dense,ctx0,gf,state,multimask_output)&apos; is always false"/>
            <location file="ggml/examples/sam/sam.cpp" line="2034" column="25" info="Calling function &apos;sam_decode_mask&apos; returns 1"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;sam_params_parse(argc,argv,params)==false&apos; is always false" verbose="Condition &apos;sam_params_parse(argc,argv,params)==false&apos; is always false" cwe="570" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="2242" column="46" info="Condition &apos;sam_params_parse(argc,argv,params)==false&apos; is always false"/>
            <location file="ggml/examples/sam/sam.cpp" line="2242" column="25" info="Calling function &apos;sam_params_parse&apos; returns 1"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!sam_image_preprocess(img0,img1)&apos; is always false" verbose="Condition &apos;!sam_image_preprocess(img0,img1)&apos; is always false" cwe="570" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="2261" column="9" info="Condition &apos;!sam_image_preprocess(img0,img1)&apos; is always false"/>
            <location file="ggml/examples/sam/sam.cpp" line="2261" column="30" info="Calling function &apos;sam_image_preprocess&apos; returns 1"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="337" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1391" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1877" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1887" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="2044" column="19"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="2081" column="24"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="520" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="539" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="540" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="541" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="542" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="543" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="544" column="18"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;Qcur&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;Qcur&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1537" column="10" info="Qcur is overwritten"/>
            <location file="ggml/examples/sam/sam.cpp" line="1533" column="31" info="Qcur is initialized"/>
            <symbol>Qcur</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;Kcur&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;Kcur&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1540" column="10" info="Kcur is overwritten"/>
            <location file="ggml/examples/sam/sam.cpp" line="1534" column="31" info="Kcur is initialized"/>
            <symbol>Kcur</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;Vcur&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;Vcur&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1543" column="10" info="Vcur is overwritten"/>
            <location file="ggml/examples/sam/sam.cpp" line="1535" column="31" info="Vcur is initialized"/>
            <symbol>Vcur</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;Q&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;Q&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1550" column="7" info="Q is overwritten"/>
            <location file="ggml/examples/sam/sam.cpp" line="1546" column="28" info="Q is initialized"/>
            <symbol>Q</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;K&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;K&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1553" column="7" info="K is overwritten"/>
            <location file="ggml/examples/sam/sam.cpp" line="1547" column="28" info="K is initialized"/>
            <symbol>K</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;V&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;V&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1556" column="7" info="V is overwritten"/>
            <location file="ggml/examples/sam/sam.cpp" line="1548" column="28" info="V is initialized"/>
            <symbol>V</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;cur&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;cur&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1588" column="9" info="cur is overwritten"/>
            <location file="ggml/examples/sam/sam.cpp" line="1587" column="30" info="cur is initialized"/>
            <symbol>cur</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;tokens&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;tokens&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1623" column="16" info="tokens is overwritten"/>
            <location file="ggml/examples/sam/sam.cpp" line="1617" column="33" info="tokens is initialized"/>
            <symbol>tokens</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;src&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;src&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1639" column="13" info="src is overwritten"/>
            <location file="ggml/examples/sam/sam.cpp" line="1633" column="30" info="src is initialized"/>
            <symbol>src</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;pos_src&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;pos_src&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1665" column="17" info="pos_src is overwritten"/>
            <location file="ggml/examples/sam/sam.cpp" line="1634" column="34" info="pos_src is initialized"/>
            <symbol>pos_src</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;upscaled_embedding&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;upscaled_embedding&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1800" column="28" info="upscaled_embedding is overwritten"/>
            <location file="ggml/examples/sam/sam.cpp" line="1780" column="45" info="upscaled_embedding is initialized"/>
            <symbol>upscaled_embedding</symbol>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1481" column="11"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1497" column="11"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1501" column="11"/>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;params&apos; shadows outer argument" verbose="Local variable &apos;params&apos; shadows outer argument" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="720" column="33" info="Shadow variable"/>
            <location file="ggml/examples/sam/sam.cpp" line="508" column="40" info="Shadowed declaration"/>
            <symbol>params</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;inp&apos; shadows outer variable" verbose="Local variable &apos;inp&apos; shadows outer variable" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1390" column="30" info="Shadow variable"/>
            <location file="ggml/examples/sam/sam.cpp" line="1215" column="26" info="Shadowed declaration"/>
            <symbol>inp</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;data&apos; shadows outer variable" verbose="Local variable &apos;data&apos; shadows outer variable" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="2081" column="17" info="Shadow variable"/>
            <location file="ggml/examples/sam/sam.cpp" line="2044" column="12" info="Shadowed declaration"/>
            <symbol>data</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;val&apos; shadows outer variable" verbose="Local variable &apos;val&apos; shadows outer variable" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="2196" column="24" info="Shadow variable"/>
            <location file="ggml/examples/sam/sam.cpp" line="2188" column="20" info="Shadowed declaration"/>
            <symbol>val</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;state&apos; can be declared as reference to const" verbose="Parameter &apos;state&apos; can be declared as reference to const" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1135" column="33" info="Parameter &apos;state&apos; can be declared as reference to const"/>
            <symbol>state</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;state&apos; can be declared as reference to const" verbose="Parameter &apos;state&apos; can be declared as reference to const" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1453" column="31" info="Parameter &apos;state&apos; can be declared as reference to const"/>
            <symbol>state</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;data&apos; can be declared as pointer to const" verbose="Variable &apos;data&apos; can be declared as pointer to const" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="337" column="13" info="Variable &apos;data&apos; can be declared as pointer to const"/>
            <symbol>data</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;ggml_sam_sin&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;ggml_sam_sin&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="379" column="110" info="Parameter &apos;userdata&apos; can be declared as pointer to const"/>
            <location file="ggml/examples/sam/sam.cpp" line="1429" column="66" info="You might need to cast the function pointer here"/>
            <symbol>userdata</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;ggml_sam_cos&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;ggml_sam_cos&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="398" column="110" info="Parameter &apos;userdata&apos; can be declared as pointer to const"/>
            <location file="ggml/examples/sam/sam.cpp" line="1430" column="66" info="You might need to cast the function pointer here"/>
            <symbol>userdata</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;iou_data&apos; can be declared as pointer to const" verbose="Variable &apos;iou_data&apos; can be declared as pointer to const" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="1877" column="16" info="Variable &apos;iou_data&apos; can be declared as pointer to const"/>
            <symbol>iou_data</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;coord&apos; can be declared as pointer to const" verbose="Variable &apos;coord&apos; can be declared as pointer to const" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="2170" column="19" info="Variable &apos;coord&apos; can be declared as pointer to const"/>
            <symbol>coord</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;val&apos; can be declared as pointer to const" verbose="Variable &apos;val&apos; can be declared as pointer to const" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="2188" column="20" info="Variable &apos;val&apos; can be declared as pointer to const"/>
            <symbol>val</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;val&apos; can be declared as pointer to const" verbose="Variable &apos;val&apos; can be declared as pointer to const" cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="2196" column="24" info="Variable &apos;val&apos; can be declared as pointer to const"/>
            <symbol>val</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="ggml/examples/sam/sam.cpp">
            <location file="ggml/examples/sam/sam.cpp" line="68" column="9"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="21" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n_threads&apos; can be reduced." verbose="The scope of the variable &apos;n_threads&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/examples/simple/simple-backend.cpp">
            <location file="ggml/examples/simple/simple-backend.cpp" line="130" column="9"/>
            <symbol>n_threads</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="7" column="0"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/examples/simple/simple-backend.cpp">
            <location file="ggml/examples/simple/simple-backend.cpp" line="67" column="9" info="Second condition"/>
            <location file="ggml/examples/simple/simple-backend.cpp" line="53" column="9" info="First condition"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/examples/simple/simple-backend.cpp" line="11" column="0"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/examples/simple/simple-backend.cpp">
            <location file="ggml/examples/simple/simple-backend.cpp" line="67" column="9" info="Second condition"/>
            <location file="ggml/examples/simple/simple-backend.cpp" line="61" column="9" info="First condition"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="11" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;a&apos; can be declared as pointer to const" verbose="Parameter &apos;a&apos; can be declared as pointer to const" cwe="398" file0="ggml/examples/simple/simple-ctx.cpp">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="23" column="47" info="Parameter &apos;a&apos; can be declared as pointer to const"/>
            <symbol>a</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;b&apos; can be declared as pointer to const" verbose="Parameter &apos;b&apos; can be declared as pointer to const" cwe="398" file0="ggml/examples/simple/simple-ctx.cpp">
            <location file="ggml/examples/simple/simple-ctx.cpp" line="23" column="58" info="Parameter &apos;b&apos; can be declared as pointer to const"/>
            <symbol>b</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/test-cmake/test-cmake.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;stb_image.h&quot; not found." verbose="Include file: &quot;stb_image.h&quot; not found.">
            <location file="ggml/examples/yolo/yolo-image.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;stb_image_write.h&quot; not found." verbose="Include file: &quot;stb_image_write.h&quot; not found.">
            <location file="ggml/examples/yolo/yolo-image.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolo-image.h" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolo-image.h" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolo-image.h" line="5" column="0"/>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: data" verbose="If memory allocation fails, then there is a possible null pointer dereference: data" cwe="476" file0="ggml/examples/yolo/yolo-image.cpp">
            <location file="ggml/examples/yolo/yolo-image.cpp" line="54" column="13" info="Null pointer dereference"/>
            <location file="ggml/examples/yolo/yolo-image.cpp" line="51" column="21" info="Assignment &apos;data=(uint8_t*)calloc(im.w*im.h*im.c,sizeof(uint8_t))&apos;, assigned value is 0"/>
            <location file="ggml/examples/yolo/yolo-image.cpp" line="51" column="37" info="Assuming allocation function fails"/>
            <symbol>data</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/examples/yolo/yolo-image.cpp">
            <location file="ggml/examples/yolo/yolo-image.cpp" line="51" column="21"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;new_w&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;new_w&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/yolo/yolo-image.cpp">
            <location file="ggml/examples/yolo/yolo-image.cpp" line="149" column="15" info="new_w is overwritten"/>
            <location file="ggml/examples/yolo/yolo-image.cpp" line="146" column="15" info="new_w is initialized"/>
            <symbol>new_w</symbol>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;new_h&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;new_h&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/examples/yolo/yolo-image.cpp">
            <location file="ggml/examples/yolo/yolo-image.cpp" line="150" column="15" info="new_h is overwritten"/>
            <location file="ggml/examples/yolo/yolo-image.cpp" line="147" column="15" info="new_h is initialized"/>
            <symbol>new_h</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;gguf.h&quot; not found." verbose="Include file: &quot;gguf.h&quot; not found.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ctime&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ctime&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="17" column="0"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;k&apos; shadows outer variable" verbose="Local variable &apos;k&apos; shadows outer variable" cwe="398" file0="ggml/examples/yolo/yolov3-tiny.cpp">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="310" column="14" info="Shadow variable"/>
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="301" column="9" info="Shadowed declaration"/>
            <symbol>k</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="ggml/examples/yolo/yolov3-tiny.cpp">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="536" column="29" info="Shadow variable"/>
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="505" column="14" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;colors&apos; can be declared as const array" verbose="Variable &apos;colors&apos; can be declared as const array" cwe="398" file0="ggml/examples/yolo/yolov3-tiny.cpp">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="331" column="11" info="Variable &apos;colors&apos; can be declared as const array"/>
            <symbol>colors</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: result" verbose="Unused variable: result" cwe="563" file0="ggml/examples/yolo/yolov3-tiny.cpp">
            <location file="ggml/examples/yolo/yolov3-tiny.cpp" line="241" column="28"/>
            <symbol>result</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/src/ggml-alloc.c" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-backend-impl.h" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-alloc.c" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-impl.h" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;gguf.h&quot; not found." verbose="Include file: &quot;gguf.h&quot; not found.">
            <location file="ggml/src/ggml-impl.h" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-impl.h" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-impl.h" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-impl.h" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdbool.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdbool.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-impl.h" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-impl.h" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-impl.h" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-alloc.c" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;limits.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;limits.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-alloc.c" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdarg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdarg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-alloc.c" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-alloc.c" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-alloc.c" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-alloc.c" line="10" column="0"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If GGML_ATTRIBUTE_FORMAT is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If GGML_ATTRIBUTE_FORMAT is a macro then please configure it." file0="ggml/src/ggml-alloc.c">
            <location file="ggml/src/ggml-impl.h" line="109" column="1"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;arm_sve.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;arm_sve.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-impl.h" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;immintrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;immintrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-impl.h" line="28" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-backend-reg.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;initializer_list&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;initializer_list&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-impl.h" line="643" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-impl.h" line="644" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;filesystem&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;filesystem&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;type_traits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;type_traits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cctype&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cctype&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;dlfcn.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;dlfcn.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="24" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-blas.h&quot; not found." verbose="Include file: &quot;ggml-blas.h&quot; not found.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="61" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cann.h&quot; not found." verbose="Include file: &quot;ggml-cann.h&quot; not found.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="69" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="33" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="37" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-opencl.h&quot; not found." verbose="Include file: &quot;ggml-opencl.h&quot; not found.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="57" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-rpc.h&quot; not found." verbose="Include file: &quot;ggml-rpc.h&quot; not found.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="65" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl.h&quot; not found." verbose="Include file: &quot;ggml-sycl.h&quot; not found.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="41" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-vulkan.h&quot; not found." verbose="Include file: &quot;ggml-vulkan.h&quot; not found.">
            <location file="ggml/src/ggml-backend-reg.cpp" line="45" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-backend.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/src/ggml-backend.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;limits.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;limits.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdarg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdarg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend.cpp" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend.cpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend.cpp" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/types.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/types.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend.cpp" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/sysctl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/sysctl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-backend.cpp" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-blas.h&quot; not found." verbose="Include file: &quot;ggml-blas.h&quot; not found.">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;future&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;future&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cblas.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cblas.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="18" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="73" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="74" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="92" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="102" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="135" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="136" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="137" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="140" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="204" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="205" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="206" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="222" column="39"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="228" column="39"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="311" column="39"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="204" column="17"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="205" column="17"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="206" column="17"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="204" column="17"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="205" column="17"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="206" column="17"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="218" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="256" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="320" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="338" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="352" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="371" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="378" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="384" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="441" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="467" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="473" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="487" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="497" column="5"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;src0&apos; shadows outer variable" verbose="Local variable &apos;src0&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="403" column="40" info="Shadow variable"/>
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="389" column="32" info="Shadowed declaration"/>
            <symbol>src0</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;src1&apos; shadows outer variable" verbose="Local variable &apos;src1&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="404" column="40" info="Shadow variable"/>
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="390" column="32" info="Shadowed declaration"/>
            <symbol>src1</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="83" column="30"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;n_threads&apos; is assigned a value that is never used." verbose="Variable &apos;n_threads&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="78" column="37"/>
            <symbol>n_threads</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;n_threads&apos; is assigned a value that is never used." verbose="Variable &apos;n_threads&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-blas/ggml-blas.cpp">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="78" column="27"/>
            <symbol>n_threads</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;Accelerate/Accelerate.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;Accelerate/Accelerate.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;blis.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;blis.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mkl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mkl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;nvpl_blas.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;nvpl_blas.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-blas/ggml-blas.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/acl_tensor.h" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/acl_tensor.h" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnn/aclnn_base.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnn/aclnn_base.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/acl_tensor.h" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;acl/acl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;acl/acl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="28" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="30" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="31" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="32" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="33" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;atomic&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;atomic&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="34" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;condition_variable&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;condition_variable&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="35" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="36" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="37" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="38" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;functional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;functional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="39" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;optional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;optional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="40" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;list&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;list&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/common.h" line="41" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;../include/ggml-cann.h&quot; not found." verbose="Include file: &quot;../include/ggml-cann.h&quot; not found.">
            <location file="ggml/src/ggml-cann/common.h" line="43" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;../include/ggml.h&quot; not found." verbose="Include file: &quot;../include/ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cann/common.h" line="44" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/acl_tensor.cpp" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/acl_tensor.cpp" line="26" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="0" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unordered_set&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unordered_set&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;functional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;functional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_abs.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_abs.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="28" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_neg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_neg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_exp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_exp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="30" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_arange.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_arange.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="31" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_argsort.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_argsort.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="32" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_cat.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_cat.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="33" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_clamp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_clamp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="34" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_gelu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_gelu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="35" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_gelu_v2.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_gelu_v2.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="36" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_sigmoid.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_sigmoid.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="37" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_hardsigmoid.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_hardsigmoid.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="38" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_hardswish.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_hardswish.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="39" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_leaky_relu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_leaky_relu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="40" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_relu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_relu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="41" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_silu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_silu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="42" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_tanh.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_tanh.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="43" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_sqrt.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_sqrt.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="44" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_sin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_sin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="45" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_cos.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_cos.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="46" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_log.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_log.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="47" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_sign.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_sign.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.h" line="48" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_addcdiv.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_addcdiv.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_avgpool2d.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_avgpool2d.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_batch_matmul.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_batch_matmul.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_cast.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_cast.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="28" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_constant_pad_nd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_constant_pad_nd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_copy.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_copy.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="30" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_div.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_div.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="31" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_embedding.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_embedding.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="32" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_exp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_exp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="33" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_fill_scalar.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_fill_scalar.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="34" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_group_norm.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_group_norm.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="35" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_index_fill_tensor.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_index_fill_tensor.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="36" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_layer_norm.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_layer_norm.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="37" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_matmul.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_matmul.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="38" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_max_pool.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_max_pool.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="39" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_mm.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_mm.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="40" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_permute.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_permute.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="41" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_pow_tensor_tensor.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_pow_tensor_tensor.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="42" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_reduce_sum.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_reduce_sum.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="43" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_repeat.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_repeat.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="44" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_repeat_interleave.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_repeat_interleave.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="45" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_roll.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_roll.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="46" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_softmax.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_softmax.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="47" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_tril.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_tril.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="48" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_triu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_triu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="49" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_upsample_nearest_2d.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_upsample_nearest_2d.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="50" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_weight_quant_batch_matmul_v2.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_weight_quant_batch_matmul_v2.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="51" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_argmax.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_argmax.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="52" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_sum.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_sum.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="53" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_rms_norm.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_rms_norm.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="54" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_im2col.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_im2col.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="55" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_add.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_add.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="56" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_sub.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_sub.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="57" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_mul.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_mul.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="58" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_div.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_div.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="59" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_convolution.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_convolution.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="60" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_elu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_elu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="61" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_log.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_log.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="62" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_mean.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_mean.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="63" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_reflection_pad1d.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_reflection_pad1d.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="64" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_eq_tensor.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_eq_tensor.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="65" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_gt_scalar.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_gt_scalar.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="66" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_pow.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_pow.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="67" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_grouped_matmul_v3.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_grouped_matmul_v3.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="68" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_fused_infer_attention_score_v2.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_fused_infer_attention_score_v2.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="69" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_zero.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_zero.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="70" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_index_copy.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_index_copy.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="71" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_index_select.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_index_select.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="72" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_clamp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_clamp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="73" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_threshold.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_threshold.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="74" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="75" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="77" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="78" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;exception&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;exception&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="79" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="80" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="82" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cann/aclnn_ops.cpp" line="83" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="438" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="445" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="459" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cann.h&quot; not found." verbose="Include file: &quot;ggml-cann.h&quot; not found.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;acl/acl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;acl/acl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdarg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdarg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;aclnnop/aclnn_trans_matmul_weight.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;aclnnop/aclnn_trans_matmul_weight.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="30" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="31" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="32" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;queue&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;queue&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="33" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;chrono&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;chrono&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="34" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unordered_set&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unordered_set&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="35" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;optional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;optional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="36" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="38" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="39" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cann/aclnn_ops.h&quot; not found." verbose="Include file: &quot;ggml-cann/aclnn_ops.h&quot; not found.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="40" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cann/common.h&quot; not found." verbose="Include file: &quot;ggml-cann/common.h&quot; not found.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="41" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="42" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="46" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="147" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="716" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="720" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="734" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="760" column="36"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="844" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="860" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="885" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="886" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="890" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="910" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="911" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="936" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="937" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="939" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="942" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="945" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="985" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="986" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="990" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1018" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1020" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1023" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1129" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1245" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1255" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1266" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1290" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1295" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1300" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1324" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1326" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1331" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1332" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1347" column="39"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1348" column="39"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1369" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1416" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1435" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1654" column="36"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1961" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1976" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2002" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2010" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2029" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2037" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2074" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2076" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2088" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2090" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2143" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2351" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2533" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2559" column="36"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2616" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2652" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2712" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2729" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2784" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2789" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2794" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2821" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2841" column="54"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2843" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2850" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2871" column="50"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2942" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2947" column="43"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="886" column="30"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="890" column="13"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="937" column="30"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="945" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="986" column="30"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="990" column="13"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1020" column="9"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1023" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1257" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1513" column="49"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2061" column="35"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1477" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1529" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1535" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1605" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1620" column="5"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2515" column="11"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;initialized&apos; can be reduced." verbose="The scope of the variable &apos;initialized&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2969" column="17"/>
            <symbol>initialized</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;use_cann_graph&apos; can be declared as reference to const" verbose="Parameter &apos;use_cann_graph&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2298" column="12" info="Parameter &apos;use_cann_graph&apos; can be declared as reference to const"/>
            <symbol>use_cann_graph</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;cann_graph_update_required&apos; can be declared as reference to const" verbose="Parameter &apos;cann_graph_update_required&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2298" column="36" info="Parameter &apos;cann_graph_update_required&apos; can be declared as reference to const"/>
            <symbol>cann_graph_update_required</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="859" column="39" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;scale_offset&apos; can be declared as pointer to const" verbose="Variable &apos;scale_offset&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="937" column="15" info="Variable &apos;scale_offset&apos; can be declared as pointer to const"/>
            <symbol>scale_offset</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1244" column="39" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1289" column="39" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;buf_ctx_src&apos; can be declared as pointer to const" verbose="Variable &apos;buf_ctx_src&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2087" column="43" info="Variable &apos;buf_ctx_src&apos; can be declared as pointer to const"/>
            <symbol>buf_ctx_src</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;buf_ctx_dst&apos; can be declared as pointer to const" verbose="Variable &apos;buf_ctx_dst&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2089" column="43" info="Variable &apos;buf_ctx_dst&apos; can be declared as pointer to const"/>
            <symbol>buf_ctx_dst</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;src&apos; can be declared as pointer to const" verbose="Variable &apos;src&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2507" column="26" info="Variable &apos;src&apos; can be declared as pointer to const"/>
            <symbol>src</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2794" column="40" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2821" column="40" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;dev_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;dev_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2841" column="44" info="Variable &apos;dev_ctx&apos; can be declared as pointer to const"/>
            <symbol>dev_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;buft_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;buft_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2842" column="49" info="Variable &apos;buft_ctx&apos; can be declared as pointer to const"/>
            <symbol>buft_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2850" column="40" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1341" column="13"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2087" column="9"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2463" column="21"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2481" column="21"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2630" column="13"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cann_ctx_src&apos; is assigned a value that is never used." verbose="Variable &apos;cann_ctx_src&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2073" column="45"/>
            <symbol>cann_ctx_src</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;node&apos; can be declared as pointer to const" verbose="Parameter &apos;node&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2209" column="67" info="Parameter &apos;node&apos; can be declared as pointer to const"/>
            <symbol>node</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;graph_node_properties&apos; can be declared as pointer to const" verbose="Parameter &apos;graph_node_properties&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cann/ggml-cann.cpp">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="2209" column="102" info="Parameter &apos;graph_node_properties&apos; can be declared as pointer to const"/>
            <symbol>graph_node_properties</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/amx.h" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu-impl.h&quot; not found." verbose="Include file: &quot;ggml-cpu-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/amx.h" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/common.h" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu-impl.h&quot; not found." verbose="Include file: &quot;ggml-cpu-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/common.h" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/common.h" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/common.h" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;type_traits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;type_traits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/common.h" line="8" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;traits.h&quot; not found." verbose="Include file: &quot;traits.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;omp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;omp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/common.h" line="11" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!ggml_amx_init()&apos; is always false" verbose="Condition &apos;!ggml_amx_init()&apos; is always false" cwe="570" file0="ggml/src/ggml-cpu/amx/amx.cpp">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="216" column="9" info="Condition &apos;!ggml_amx_init()&apos; is always false"/>
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="216" column="23" info="Calling function &apos;ggml_amx_init&apos; returns 1"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/amx.cpp">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="54" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/amx.cpp">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="62" column="12"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/amx.cpp">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="73" column="16"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/amx/amx.cpp">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="122" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/amx/amx.cpp">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="138" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/amx/amx.cpp">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="180" column="5"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!ggml_amx_init()&apos; is always true" verbose="Condition &apos;!ggml_amx_init()&apos; is always true" cwe="571" file0="ggml/src/ggml-cpu/amx/amx.cpp">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="216" column="9" info="Condition &apos;!ggml_amx_init()&apos; is always true"/>
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="216" column="23" info="Calling function &apos;ggml_amx_init&apos; returns 0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/syscall.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/syscall.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/amx.cpp" line="12" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu-impl.h&quot; not found." verbose="Include file: &quot;ggml-cpu-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="10" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;quants.h&quot; not found." verbose="Include file: &quot;quants.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="12" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-quants.h&quot; not found." verbose="Include file: &quot;ggml-quants.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;type_traits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;type_traits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="15" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="478" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="489" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="521" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="529" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="538" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="549" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="644" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="652" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="656" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="659" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="663" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="671" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="694" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="695" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="735" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="736" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="769" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="790" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="798" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="815" column="59"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="818" column="37"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="823" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="853" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="884" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="913" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="931" column="50"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="959" column="58"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="971" column="62"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="983" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="998" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1002" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1029" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1033" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1072" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1091" column="81"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1113" column="81"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1114" column="81"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1138" column="81"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1159" column="68"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1180" column="55"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1201" column="68"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1222" column="55"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1243" column="68"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1269" column="66"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1302" column="64"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1353" column="63"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1467" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1532" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1603" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1652" column="77"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1654" column="59"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1703" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1745" column="77"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1747" column="59"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1809" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1849" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1850" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1851" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1852" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1854" column="59"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1967" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1968" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1969" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1970" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1973" column="59"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2016" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2334" column="5"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2392" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2428" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2455" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2488" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1392" column="24"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="499" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="504" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="511" column="30"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="522" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="530" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="539" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="551" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="557" column="41"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="565" column="44"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="578" column="47"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="579" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="598" column="48"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="599" column="48"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="600" column="48"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="629" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="636" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="641" column="41"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="642" column="41"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="644" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="656" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="663" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="683" column="33"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="710" column="33"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="725" column="33"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="750" column="33"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="761" column="33"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="781" column="33"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="815" column="41"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="818" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="959" column="40"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="962" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="963" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="971" column="44"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="974" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="975" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="989" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="990" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1020" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1021" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1047" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1048" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1058" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1059" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1079" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1080" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1091" column="63"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1113" column="63"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1114" column="63"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1138" column="63"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1164" column="63"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1165" column="65"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1187" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1206" column="63"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1207" column="65"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1229" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1246" column="63"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1272" column="63"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1303" column="65"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1314" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1448" column="52"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1455" column="67"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1509" column="52"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1514" column="67"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1515" column="67"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1581" column="44"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1584" column="67"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1586" column="54"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1670" column="56"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1679" column="77"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1682" column="67"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1690" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1693" column="69"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1762" column="52"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1767" column="56"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1785" column="77"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1788" column="67"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1796" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1799" column="69"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1906" column="77"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1909" column="67"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="1919" column="30"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2003" column="77"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2006" column="67"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;Tile23&apos; can be reduced." verbose="The scope of the variable &apos;Tile23&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2046" column="32"/>
            <symbol>Tile23</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;C_pre&apos; can be reduced." verbose="The scope of the variable &apos;C_pre&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2053" column="15"/>
            <symbol>C_pre</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;k&apos; shadows outer argument" verbose="Local variable &apos;k&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="486" column="18" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="428" column="83" info="Shadowed declaration"/>
            <symbol>k</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;B_blk0&apos; shadows outer variable" verbose="Local variable &apos;B_blk0&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2099" column="26" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2062" column="22" info="Shadowed declaration"/>
            <symbol>B_blk0</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;B_blk1&apos; shadows outer variable" verbose="Local variable &apos;B_blk1&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2100" column="26" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2063" column="22" info="Shadowed declaration"/>
            <symbol>B_blk1</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;tile_config_t::reserved_0&apos; is never used." verbose="struct member &apos;tile_config_t::reserved_0&apos; is never used." cwe="563" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="164" column="13"/>
            <symbol>tile_config_t::reserved_0</symbol>
        </error>
        <error id="unassignedVariable" severity="style" msg="Variable &apos;tmp&apos; is not assigned a value." verbose="Variable &apos;tmp&apos; is not assigned a value." cwe="665" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="622" column="12"/>
            <symbol>tmp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;blck_size&apos; is assigned a value that is never used." verbose="Variable &apos;blck_size&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/amx/mmq.cpp">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="2311" column="9"/>
            <symbol>blck_size</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/syscall.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/syscall.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="19" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/cpu-feats.cpp" line="1" column="0"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: af" verbose="Unused variable: af" cwe="563" file0="ggml/src/ggml-cpu/arch/arm/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/arm/cpu-feats.cpp" line="62" column="22"/>
            <symbol>af</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/sysctl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/sysctl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/cpu-feats.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/auxv.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/auxv.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/cpu-feats.cpp" line="6" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-quants.h&quot; not found." verbose="Include file: &quot;ggml-quants.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/quants.h" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/quants.h" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu-impl.h" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu-impl.h" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu-impl.h" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdbool.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdbool.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu-impl.h" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu-impl.h" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu-impl.h" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="16" column="0"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/arm/quants.c">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="41" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="19" column="76"/>
            <symbol>quantize_row_q8_0</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/arm/quants.c">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="85" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="20" column="76"/>
            <symbol>quantize_row_q8_1</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;intrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;intrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu-impl.h" line="330" column="0"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;scale.u16&apos; is assigned a value that is never used." verbose="Variable &apos;scale.u16&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/arm/quants.c">
            <location file="ggml/src/ggml-cpu/arch/arm/quants.c" line="3473" column="19"/>
            <symbol>scale.u16</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/prctl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/prctl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu-impl.h" line="72" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu-impl.h&quot; not found." verbose="Include file: &quot;ggml-cpu-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="8" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;traits.h&quot; not found." verbose="Include file: &quot;traits.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="16" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/repack.h" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/traits.h" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/traits.h" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/traits.h" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/repack.h" line="7" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/arm/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="32" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/arm/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/arm/repack.cpp" line="100" column="38"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;immintrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;immintrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu-impl.h" line="332" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-quants.h&quot; not found." verbose="Include file: &quot;ggml-quants.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="16" column="0"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/loongarch/quants.c">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="448" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="19" column="76"/>
            <symbol>quantize_row_q8_0</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/loongarch/quants.c">
            <location file="ggml/src/ggml-cpu/arch/loongarch/quants.c" line="523" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="20" column="76"/>
            <symbol>quantize_row_q8_1</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;altivec.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;altivec.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu-impl.h" line="326" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/cpu-feats.cpp" line="1" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/cpu-feats.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/auxv.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/auxv.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/cpu-feats.cpp" line="6" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-quants.h&quot; not found." verbose="Include file: &quot;ggml-quants.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="16" column="0"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/powerpc/quants.c">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="41" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="19" column="76"/>
            <symbol>quantize_row_q8_0</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/powerpc/quants.c">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="87" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="20" column="76"/>
            <symbol>quantize_row_q8_1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/powerpc/quants.c">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="146" column="18"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/powerpc/quants.c">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="146" column="15"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/powerpc/quants.c">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="216" column="18"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/powerpc/quants.c">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="216" column="15"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/powerpc/quants.c">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="293" column="18"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/powerpc/quants.c">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="293" column="15"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/powerpc/quants.c">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="349" column="18"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/powerpc/quants.c">
            <location file="ggml/src/ggml-cpu/arch/powerpc/quants.c" line="349" column="15"/>
            <symbol>nb</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-quants.h&quot; not found." verbose="Include file: &quot;ggml-quants.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="16" column="0"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/riscv/quants.c">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="26" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="19" column="76"/>
            <symbol>quantize_row_q8_0</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/riscv/quants.c">
            <location file="ggml/src/ggml-cpu/arch/riscv/quants.c" line="67" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="20" column="76"/>
            <symbol>quantize_row_q8_1</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu-impl.h&quot; not found." verbose="Include file: &quot;ggml-cpu-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="8" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;traits.h&quot; not found." verbose="Include file: &quot;traits.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/riscv/repack.cpp" line="16" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-quants.h&quot; not found." verbose="Include file: &quot;ggml-quants.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="16" column="0"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/s390/quants.c">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="47" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="19" column="76"/>
            <symbol>quantize_row_q8_0</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/s390/quants.c">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="94" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="20" column="76"/>
            <symbol>quantize_row_q8_1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/s390/quants.c">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="275" column="18"/>
            <symbol>nb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nb&apos; is assigned a value that is never used." verbose="Variable &apos;nb&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/s390/quants.c">
            <location file="ggml/src/ggml-cpu/arch/s390/quants.c" line="275" column="15"/>
            <symbol>nb</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-quants.h&quot; not found." verbose="Include file: &quot;ggml-quants.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="16" column="0"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/wasm/quants.c">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="41" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="19" column="76"/>
            <symbol>quantize_row_q8_0</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/wasm/quants.c">
            <location file="ggml/src/ggml-cpu/arch/wasm/quants.c" line="88" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="20" column="76"/>
            <symbol>quantize_row_q8_1</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="1" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;intrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;intrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;bitset&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;bitset&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="13" column="0"/>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::SSE3&apos; can be const." verbose="The member function &apos;cpuid_x86::SSE3&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="17" column="10"/>
            <symbol>cpuid_x86::SSE3</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::PCLMULQDQ&apos; can be const." verbose="The member function &apos;cpuid_x86::PCLMULQDQ&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="18" column="10"/>
            <symbol>cpuid_x86::PCLMULQDQ</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::MONITOR&apos; can be const." verbose="The member function &apos;cpuid_x86::MONITOR&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="19" column="10"/>
            <symbol>cpuid_x86::MONITOR</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::SSSE3&apos; can be const." verbose="The member function &apos;cpuid_x86::SSSE3&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="20" column="10"/>
            <symbol>cpuid_x86::SSSE3</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::FMA&apos; can be const." verbose="The member function &apos;cpuid_x86::FMA&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="21" column="10"/>
            <symbol>cpuid_x86::FMA</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::CMPXCHG16B&apos; can be const." verbose="The member function &apos;cpuid_x86::CMPXCHG16B&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="22" column="10"/>
            <symbol>cpuid_x86::CMPXCHG16B</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::SSE41&apos; can be const." verbose="The member function &apos;cpuid_x86::SSE41&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="23" column="10"/>
            <symbol>cpuid_x86::SSE41</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::SSE42&apos; can be const." verbose="The member function &apos;cpuid_x86::SSE42&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="24" column="10"/>
            <symbol>cpuid_x86::SSE42</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::MOVBE&apos; can be const." verbose="The member function &apos;cpuid_x86::MOVBE&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="25" column="10"/>
            <symbol>cpuid_x86::MOVBE</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::POPCNT&apos; can be const." verbose="The member function &apos;cpuid_x86::POPCNT&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="26" column="10"/>
            <symbol>cpuid_x86::POPCNT</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AES&apos; can be const." verbose="The member function &apos;cpuid_x86::AES&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="27" column="10"/>
            <symbol>cpuid_x86::AES</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::XSAVE&apos; can be const." verbose="The member function &apos;cpuid_x86::XSAVE&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="28" column="10"/>
            <symbol>cpuid_x86::XSAVE</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::OSXSAVE&apos; can be const." verbose="The member function &apos;cpuid_x86::OSXSAVE&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="29" column="10"/>
            <symbol>cpuid_x86::OSXSAVE</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="30" column="10"/>
            <symbol>cpuid_x86::AVX</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::F16C&apos; can be const." verbose="The member function &apos;cpuid_x86::F16C&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="31" column="10"/>
            <symbol>cpuid_x86::F16C</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::RDRAND&apos; can be const." verbose="The member function &apos;cpuid_x86::RDRAND&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="32" column="10"/>
            <symbol>cpuid_x86::RDRAND</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::MSR&apos; can be const." verbose="The member function &apos;cpuid_x86::MSR&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="34" column="10"/>
            <symbol>cpuid_x86::MSR</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::CX8&apos; can be const." verbose="The member function &apos;cpuid_x86::CX8&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="35" column="10"/>
            <symbol>cpuid_x86::CX8</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::SEP&apos; can be const." verbose="The member function &apos;cpuid_x86::SEP&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="36" column="10"/>
            <symbol>cpuid_x86::SEP</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::CMOV&apos; can be const." verbose="The member function &apos;cpuid_x86::CMOV&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="37" column="10"/>
            <symbol>cpuid_x86::CMOV</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::CLFSH&apos; can be const." verbose="The member function &apos;cpuid_x86::CLFSH&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="38" column="10"/>
            <symbol>cpuid_x86::CLFSH</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::MMX&apos; can be const." verbose="The member function &apos;cpuid_x86::MMX&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="39" column="10"/>
            <symbol>cpuid_x86::MMX</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::FXSR&apos; can be const." verbose="The member function &apos;cpuid_x86::FXSR&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="40" column="10"/>
            <symbol>cpuid_x86::FXSR</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::SSE&apos; can be const." verbose="The member function &apos;cpuid_x86::SSE&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="41" column="10"/>
            <symbol>cpuid_x86::SSE</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::SSE2&apos; can be const." verbose="The member function &apos;cpuid_x86::SSE2&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="42" column="10"/>
            <symbol>cpuid_x86::SSE2</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::FSGSBASE&apos; can be const." verbose="The member function &apos;cpuid_x86::FSGSBASE&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="44" column="10"/>
            <symbol>cpuid_x86::FSGSBASE</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::BMI1&apos; can be const." verbose="The member function &apos;cpuid_x86::BMI1&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="45" column="10"/>
            <symbol>cpuid_x86::BMI1</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::HLE&apos; can be const." verbose="The member function &apos;cpuid_x86::HLE&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="46" column="10"/>
            <symbol>cpuid_x86::HLE</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX2&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX2&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="47" column="10"/>
            <symbol>cpuid_x86::AVX2</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::BMI2&apos; can be const." verbose="The member function &apos;cpuid_x86::BMI2&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="48" column="10"/>
            <symbol>cpuid_x86::BMI2</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::ERMS&apos; can be const." verbose="The member function &apos;cpuid_x86::ERMS&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="49" column="10"/>
            <symbol>cpuid_x86::ERMS</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::INVPCID&apos; can be const." verbose="The member function &apos;cpuid_x86::INVPCID&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="50" column="10"/>
            <symbol>cpuid_x86::INVPCID</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::RTM&apos; can be const." verbose="The member function &apos;cpuid_x86::RTM&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="51" column="10"/>
            <symbol>cpuid_x86::RTM</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX512F&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX512F&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="52" column="10"/>
            <symbol>cpuid_x86::AVX512F</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX512DQ&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX512DQ&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="53" column="10"/>
            <symbol>cpuid_x86::AVX512DQ</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::RDSEED&apos; can be const." verbose="The member function &apos;cpuid_x86::RDSEED&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="54" column="10"/>
            <symbol>cpuid_x86::RDSEED</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::ADX&apos; can be const." verbose="The member function &apos;cpuid_x86::ADX&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="55" column="10"/>
            <symbol>cpuid_x86::ADX</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX512PF&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX512PF&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="56" column="10"/>
            <symbol>cpuid_x86::AVX512PF</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX512ER&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX512ER&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="57" column="10"/>
            <symbol>cpuid_x86::AVX512ER</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX512CD&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX512CD&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="58" column="10"/>
            <symbol>cpuid_x86::AVX512CD</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX512BW&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX512BW&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="59" column="10"/>
            <symbol>cpuid_x86::AVX512BW</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX512VL&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX512VL&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="60" column="10"/>
            <symbol>cpuid_x86::AVX512VL</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::SHA&apos; can be const." verbose="The member function &apos;cpuid_x86::SHA&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="62" column="10"/>
            <symbol>cpuid_x86::SHA</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::PREFETCHWT1&apos; can be const." verbose="The member function &apos;cpuid_x86::PREFETCHWT1&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="64" column="10"/>
            <symbol>cpuid_x86::PREFETCHWT1</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::LAHF&apos; can be const." verbose="The member function &apos;cpuid_x86::LAHF&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="66" column="10"/>
            <symbol>cpuid_x86::LAHF</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::LZCNT&apos; can be const." verbose="The member function &apos;cpuid_x86::LZCNT&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="67" column="10"/>
            <symbol>cpuid_x86::LZCNT</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::ABM&apos; can be const." verbose="The member function &apos;cpuid_x86::ABM&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="68" column="10"/>
            <symbol>cpuid_x86::ABM</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::SSE4a&apos; can be const." verbose="The member function &apos;cpuid_x86::SSE4a&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="69" column="10"/>
            <symbol>cpuid_x86::SSE4a</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::XOP&apos; can be const." verbose="The member function &apos;cpuid_x86::XOP&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="70" column="10"/>
            <symbol>cpuid_x86::XOP</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::TBM&apos; can be const." verbose="The member function &apos;cpuid_x86::TBM&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="71" column="10"/>
            <symbol>cpuid_x86::TBM</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::SYSCALL&apos; can be const." verbose="The member function &apos;cpuid_x86::SYSCALL&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="73" column="10"/>
            <symbol>cpuid_x86::SYSCALL</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::MMXEXT&apos; can be const." verbose="The member function &apos;cpuid_x86::MMXEXT&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="74" column="10"/>
            <symbol>cpuid_x86::MMXEXT</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::RDTSCP&apos; can be const." verbose="The member function &apos;cpuid_x86::RDTSCP&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="75" column="10"/>
            <symbol>cpuid_x86::RDTSCP</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::_3DNOWEXT&apos; can be const." verbose="The member function &apos;cpuid_x86::_3DNOWEXT&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="76" column="10"/>
            <symbol>cpuid_x86::_3DNOWEXT</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::_3DNOW&apos; can be const." verbose="The member function &apos;cpuid_x86::_3DNOW&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="77" column="10"/>
            <symbol>cpuid_x86::_3DNOW</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX512_VBMI&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX512_VBMI&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="79" column="10"/>
            <symbol>cpuid_x86::AVX512_VBMI</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX512_VNNI&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX512_VNNI&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="80" column="10"/>
            <symbol>cpuid_x86::AVX512_VNNI</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX512_FP16&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX512_FP16&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="81" column="10"/>
            <symbol>cpuid_x86::AVX512_FP16</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX512_BF16&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX512_BF16&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="82" column="10"/>
            <symbol>cpuid_x86::AVX512_BF16</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AVX_VNNI&apos; can be const." verbose="The member function &apos;cpuid_x86::AVX_VNNI&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="83" column="10"/>
            <symbol>cpuid_x86::AVX_VNNI</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AMX_TILE&apos; can be const." verbose="The member function &apos;cpuid_x86::AMX_TILE&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="85" column="10"/>
            <symbol>cpuid_x86::AMX_TILE</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AMX_INT8&apos; can be const." verbose="The member function &apos;cpuid_x86::AMX_INT8&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="86" column="10"/>
            <symbol>cpuid_x86::AMX_INT8</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AMX_FP16&apos; can be const." verbose="The member function &apos;cpuid_x86::AMX_FP16&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="87" column="10"/>
            <symbol>cpuid_x86::AMX_FP16</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;cpuid_x86::AMX_BF16&apos; can be const." verbose="The member function &apos;cpuid_x86::AMX_BF16&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="88" column="10"/>
            <symbol>cpuid_x86::AMX_BF16</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;vendor&apos; shadows outer variable" verbose="Local variable &apos;vendor&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="127" column="14" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="182" column="17" info="Shadowed declaration"/>
            <symbol>vendor</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;brand&apos; shadows outer variable" verbose="Local variable &apos;brand&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="171" column="14" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="183" column="17" info="Shadowed declaration"/>
            <symbol>brand</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-quants.h&quot; not found." verbose="Include file: &quot;ggml-quants.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="15" column="0"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/quants.c">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="290" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="19" column="76"/>
            <symbol>quantize_row_q8_0</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q8_1&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/quants.c">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="388" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="20" column="76"/>
            <symbol>quantize_row_q8_1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;scale.u16&apos; is assigned a value that is never used." verbose="Variable &apos;scale.u16&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/arch/x86/quants.c">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="3457" column="19"/>
            <symbol>scale.u16</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu-impl.h&quot; not found." verbose="Include file: &quot;ggml-cpu-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="8" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;traits.h&quot; not found." verbose="Include file: &quot;traits.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="16" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="183" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="295" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="256" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="422" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="503" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1429" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1430" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1461" column="59"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1532" column="81"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1533" column="81"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1534" column="81"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1535" column="81"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1617" column="68"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1665" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1666" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1807" column="80"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1808" column="80"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1809" column="80"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1810" column="80"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1811" column="80"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1812" column="80"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1813" column="80"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1814" column="80"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1907" column="54"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1981" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1982" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2360" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2722" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3069" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3398" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3414" column="72"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3447" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3448" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4212" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4940" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5627" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="6297" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="637" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="638" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="759" column="69"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="762" column="69"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="765" column="69"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="768" column="69"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="835" column="88"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="848" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="948" column="65"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="951" column="65"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="954" column="65"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="957" column="65"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1024" column="84"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1036" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1132" column="65"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1135" column="65"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1138" column="65"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1141" column="65"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1208" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1290" column="61"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1293" column="61"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1296" column="61"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1299" column="61"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1368" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="541" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="542" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="589" column="76"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="590" column="76"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1469" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1470" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1471" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1472" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1473" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1474" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1475" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1476" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1701" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1702" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1703" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1704" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1705" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1706" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1707" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1708" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1756" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1757" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1758" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1759" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2034" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2035" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2036" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2037" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2038" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2039" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2040" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2041" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2043" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2044" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2045" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2046" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2047" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2048" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2049" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2050" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2194" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2197" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2200" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2203" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2206" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2209" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2212" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2215" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2238" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2397" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2398" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2399" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2400" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2401" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2402" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2403" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2404" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2406" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2407" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2408" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2409" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2410" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2411" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2412" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2413" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2556" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2559" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2562" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2565" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2568" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2571" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2574" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2577" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2601" column="68"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2771" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2772" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2773" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2774" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2775" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2776" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2777" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2778" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2908" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2911" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2914" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2917" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2920" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2923" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2926" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2929" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2934" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3104" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3105" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3106" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3107" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3108" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3109" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3110" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3111" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3238" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3241" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3244" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3247" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3250" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3253" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3256" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3259" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3264" column="68"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3516" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3517" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3518" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3519" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3520" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3521" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3522" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3523" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3525" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3526" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3527" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3528" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3529" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3530" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3531" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3532" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3707" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3708" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3709" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3710" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3712" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3713" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3714" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3715" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3773" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3776" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3779" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3782" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3785" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3788" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3791" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3794" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3798" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3801" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3804" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3807" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3810" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3813" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3816" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3819" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3865" column="73"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3866" column="73"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3867" column="73"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3868" column="73"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4249" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4250" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4251" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4252" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4253" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4254" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4255" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4256" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4258" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4259" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4260" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4261" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4262" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4263" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4264" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4265" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4439" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4440" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4441" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4442" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4444" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4445" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4446" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4447" column="74"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4502" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4505" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4508" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4511" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4514" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4517" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4520" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4523" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4527" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4530" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4533" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4536" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4539" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4542" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4545" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4548" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4593" column="69"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4594" column="69"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4595" column="69"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4596" column="69"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4990" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4991" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4992" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4993" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4994" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4995" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4996" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4997" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5173" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5174" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5175" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5176" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5231" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5234" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5237" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5240" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5243" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5246" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5249" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5252" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5256" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5259" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5262" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5265" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5268" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5271" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5274" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5277" column="70"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5282" column="73"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5283" column="73"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5284" column="73"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5285" column="73"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5664" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5665" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5666" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5667" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5668" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5669" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5670" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5671" column="75"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5848" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5849" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5850" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5851" column="72"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5903" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5906" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5909" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5912" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5915" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5918" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5921" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5924" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5928" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5931" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5934" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5937" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5940" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5943" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5946" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5949" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5954" column="69"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5955" column="69"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5956" column="69"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5957" column="69"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="680" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="681" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="682" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="683" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="685" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="686" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="687" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="688" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="871" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="872" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="873" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="874" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="876" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="877" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="878" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="879" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1069" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1070" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1071" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1072" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1229" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1230" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1231" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1232" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="561" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="562" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="563" column="71"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="564" column="71"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1389" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1625" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1954" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3423" column="5"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;v0&apos; shadows outer variable" verbose="Local variable &apos;v0&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="338" column="24" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="305" column="20" info="Shadowed declaration"/>
            <symbol>v0</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;v1&apos; shadows outer variable" verbose="Local variable &apos;v1&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="339" column="24" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="306" column="20" info="Shadowed declaration"/>
            <symbol>v1</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;v2&apos; shadows outer variable" verbose="Local variable &apos;v2&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="340" column="24" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="307" column="20" info="Shadowed declaration"/>
            <symbol>v2</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;v3&apos; shadows outer variable" verbose="Local variable &apos;v3&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="341" column="24" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="308" column="20" info="Shadowed declaration"/>
            <symbol>v3</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;abs0&apos; shadows outer variable" verbose="Local variable &apos;abs0&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="344" column="24" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="312" column="20" info="Shadowed declaration"/>
            <symbol>abs0</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;abs1&apos; shadows outer variable" verbose="Local variable &apos;abs1&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="345" column="24" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="313" column="20" info="Shadowed declaration"/>
            <symbol>abs1</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;abs2&apos; shadows outer variable" verbose="Local variable &apos;abs2&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="346" column="24" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="314" column="20" info="Shadowed declaration"/>
            <symbol>abs2</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;abs3&apos; shadows outer variable" verbose="Local variable &apos;abs3&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="347" column="24" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="315" column="20" info="Shadowed declaration"/>
            <symbol>abs3</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;k&apos; shadows outer argument" verbose="Local variable &apos;k&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="434" column="18" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="290" column="97" info="Shadowed declaration"/>
            <symbol>k</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1196" column="50"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1357" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1455" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1456" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1691" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1692" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2026" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2029" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2389" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2392" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2762" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="2765" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3095" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3098" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3507" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="3510" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4240" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4243" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4981" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="4984" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5655" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="5658" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="751" column="37"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="943" column="37"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1125" column="37"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="1285" column="37"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="582" column="37"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="90" column="22"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/arch/x86/repack.cpp">
            <location file="ggml/src/ggml-cpu/arch/x86/repack.cpp" line="90" column="74"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 29 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/binary-ops.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/common.h" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/common.h" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;utility&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;utility&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/common.h" line="11" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/binary-ops.cpp">
            <location file="ggml/src/ggml-cpu/binary-ops.cpp" line="93" column="53"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/binary-ops.cpp">
            <location file="ggml/src/ggml-cpu/binary-ops.cpp" line="94" column="53"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/binary-ops.cpp">
            <location file="ggml/src/ggml-cpu/binary-ops.cpp" line="95" column="53"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/binary-ops.cpp">
            <location file="ggml/src/ggml-cpu/binary-ops.cpp" line="44" column="32"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/binary-ops.cpp">
            <location file="ggml/src/ggml-cpu/binary-ops.cpp" line="44" column="49"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;Accelerate/Accelerate.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;Accelerate/Accelerate.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/binary-ops.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;arm_neon.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;arm_neon.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/simd-mappings.h" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;immintrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;immintrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/simd-mappings.h" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;arm_sve.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;arm_sve.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/simd-mappings.h" line="6" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 80 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="8" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-threading.h&quot; not found." verbose="Include file: &quot;ggml-threading.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/vec.h" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/vec.h" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/vec.h" line="8" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ops.h" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;alloca.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;alloca.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="24" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;errno.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;errno.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;time.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;time.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="28" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="30" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;inttypes.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;inttypes.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="31" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="32" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="33" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;limits.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;limits.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="34" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdarg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdarg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="35" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;signal.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;signal.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="36" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;pthread.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;pthread.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="173" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdatomic.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdatomic.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="174" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sched.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sched.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="175" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/types.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/types.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="182" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/stat.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/stat.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="183" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="184" column="0"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/vec.h" line="521" column="16"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/vec.h" line="521" column="33"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/vec.h" line="522" column="16"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/vec.h" line="522" column="33"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * const and float * which have an incompatible binary data representation." verbose="Casting between signed char * const and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="766" column="42"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * const and float * which have an incompatible binary data representation." verbose="Casting between signed char * const and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="825" column="42"/>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;threadpool&apos; can be declared as pointer to const" verbose="Variable &apos;threadpool&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="2937" column="30" info="Variable &apos;threadpool&apos; can be declared as pointer to const"/>
            <symbol>threadpool</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;tpp&apos; can be declared as pointer to const" verbose="Parameter &apos;tpp&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="3048" column="37" info="Parameter &apos;tpp&apos; can be declared as pointer to const"/>
            <symbol>tpp</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;ggml_numa_node::cpus&apos; is never used." verbose="struct member &apos;ggml_numa_node::cpus&apos; is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="505" column="14"/>
            <symbol>ggml_numa_node::cpus</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;ggml_numa_node::n_cpus&apos; is never used." verbose="struct member &apos;ggml_numa_node::n_cpus&apos; is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="506" column="14"/>
            <symbol>ggml_numa_node::n_cpus</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;ggml_numa_nodes::total_cpus&apos; is never used." verbose="struct member &apos;ggml_numa_nodes::total_cpus&apos; is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="513" column="14"/>
            <symbol>ggml_numa_nodes::total_cpus</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;ggml_numa_nodes::current_node&apos; is never used." verbose="struct member &apos;ggml_numa_nodes::current_node&apos; is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="514" column="14"/>
            <symbol>ggml_numa_nodes::current_node</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;ggml_numa_nodes::cpuset&apos; is never used." verbose="struct member &apos;ggml_numa_nodes::cpuset&apos; is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="518" column="14"/>
            <symbol>ggml_numa_nodes::cpuset</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="union member &apos;Anonymous0::u16&apos; is never used." verbose="union member &apos;Anonymous0::u16&apos; is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="3544" column="30"/>
            <symbol>Anonymous0::u16</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((int8_t*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((int8_t*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="951" column="39"/>
            <symbol>((int8_t*)(data))[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((int16_t*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((int16_t*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="955" column="40"/>
            <symbol>((int16_t*)(data))[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((int32_t*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((int32_t*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="959" column="40"/>
            <symbol>((int32_t*)(data))[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((ggml_fp16_t*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((ggml_fp16_t*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="963" column="44"/>
            <symbol>((ggml_fp16_t*)(data))[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((ggml_bf16_t*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((ggml_bf16_t*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="967" column="44"/>
            <symbol>((ggml_bf16_t*)(data))[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((float*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((float*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="971" column="38"/>
            <symbol>((float*)(data))[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((int8_t*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((int8_t*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="1082" column="39"/>
            <symbol>((int8_t*)(data))[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((int16_t*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((int16_t*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="1086" column="40"/>
            <symbol>((int16_t*)(data))[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((int32_t*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((int32_t*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="1090" column="40"/>
            <symbol>((int32_t*)(data))[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((ggml_fp16_t*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((ggml_fp16_t*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="1094" column="44"/>
            <symbol>((ggml_fp16_t*)(data))[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((ggml_bf16_t*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((ggml_bf16_t*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="1098" column="44"/>
            <symbol>((ggml_bf16_t*)(data))[0]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((float*)(data))[0]&apos; is assigned a value that is never used." verbose="Variable &apos;((float*)(data))[0]&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="1102" column="38"/>
            <symbol>((float*)(data))[0]</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;Accelerate/Accelerate.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;Accelerate/Accelerate.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/vec.h" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.h" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdbool.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdbool.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.h" line="3" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;src1-&gt;type==vec_dot_type&apos; is always false" verbose="Condition &apos;src1-&gt;type==vec_dot_type&apos; is always false" cwe="570" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="1313" column="41" info="Condition &apos;src1-&gt;type==vec_dot_type&apos; is always false"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;omp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;omp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="42" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;syscall.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;syscall.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="38" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;malloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;malloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="91" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdatomic.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdatomic.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="142" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;windows.h&quot; not found." verbose="Include file: &quot;windows.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="2378" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;mask&apos; can be declared as pointer to const" verbose="Parameter &apos;mask&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.c">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="2381" column="47" info="Parameter &apos;mask&apos; can be declared as pointer to const"/>
            <symbol>mask</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 29 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cctype&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cctype&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="32" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="117" column="49"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="129" column="49"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="151" column="47"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="160" column="47"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="168" column="49"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="181" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="249" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="256" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="268" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="346" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="422" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="446" column="31"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="85" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="113" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="164" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="342" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="373" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="392" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="399" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="405" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="464" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="490" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="496" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="621" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="659" column="5"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="ggml/src/ggml-cpu/ggml-cpu.cpp">
            <location file="ggml/src/ggml-cpu/ggml-cpu.cpp" line="89" column="5"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/hbm.h" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/hbm.h" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.h" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.h" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/hbm.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/hbm.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/hbm.cpp" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/hbm.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;hbwmalloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;hbwmalloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/hbm.cpp" line="12" column="0"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/hbm.cpp">
            <location file="ggml/src/ggml-cpu/hbm.cpp" line="17" column="5"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p_qsi4c32p_interface.h&quot; not found." verbose="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p_qsi4c32p_interface.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p1x8_qsi4c32p4x8_1x4x32_neon_dotprod.h&quot; not found." verbose="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p1x8_qsi4c32p4x8_1x4x32_neon_dotprod.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p1x4_qsi4c32p4x4_1x4_neon_dotprod.h&quot; not found." verbose="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p1x4_qsi4c32p4x4_1x4_neon_dotprod.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="8" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p4x4_qsi4c32p4x4_16x4_neon_dotprod.h&quot; not found." verbose="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p4x4_qsi4c32p4x4_16x4_neon_dotprod.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p4x8_qsi4c32p4x8_16x4_neon_i8mm.h&quot; not found." verbose="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p4x8_qsi4c32p4x8_16x4_neon_i8mm.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="10" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p1vlx4_qsi4c32p4vlx4_1vlx4vl_sme2_mopa.h&quot; not found." verbose="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p1vlx4_qsi4c32p4vlx4_1vlx4vl_sme2_mopa.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p1x4_qsi4c32p4vlx4_1x4vl_sme2_sdot.h&quot; not found." verbose="Include file: &quot;kai_matmul_clamp_f32_qsi8d32p1x4_qsi4c32p4vlx4_1x4vl_sme2_sdot.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="12" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_matmul_clamp_f32_bf16p2vlx2_bf16p2vlx2_2vlx2vl_sme2_mopa.h&quot; not found." verbose="Include file: &quot;kai_matmul_clamp_f32_bf16p2vlx2_bf16p2vlx2_2vlx2vl_sme2_mopa.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="13" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_lhs_pack_bf16p2vlx2_f32_sme.h&quot; not found." verbose="Include file: &quot;kai_lhs_pack_bf16p2vlx2_f32_sme.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="15" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_lhs_quant_pack_qsi8d32p_f32.h&quot; not found." verbose="Include file: &quot;kai_lhs_quant_pack_qsi8d32p_f32.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="16" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_lhs_quant_pack_qsi8d32p4x8sb_f32_neon.h&quot; not found." verbose="Include file: &quot;kai_lhs_quant_pack_qsi8d32p4x8sb_f32_neon.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="17" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_lhs_quant_pack_qsi8d32p_f32_neon.h&quot; not found." verbose="Include file: &quot;kai_lhs_quant_pack_qsi8d32p_f32_neon.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="18" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_rhs_pack_kxn_bf16p2vlx2b_f32_x32_sme.h&quot; not found." verbose="Include file: &quot;kai_rhs_pack_kxn_bf16p2vlx2b_f32_x32_sme.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="20" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_rhs_pack_nxk_qsi4c32pscalef16_qsu4c32s16s0.h&quot; not found." verbose="Include file: &quot;kai_rhs_pack_nxk_qsi4c32pscalef16_qsu4c32s16s0.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="21" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_rhs_pack_nxk_qsi4c32ps1s0scalef16_qsu4c32s16s0_neon.h&quot; not found." verbose="Include file: &quot;kai_rhs_pack_nxk_qsi4c32ps1s0scalef16_qsu4c32s16s0_neon.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="22" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_common.h&quot; not found." verbose="Include file: &quot;kai_common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="24" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;functional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;functional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.h" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;variant&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;variant&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.h" line="8" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.h" line="9" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kernels.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="50" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kernels.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="94" column="35"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kernels.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="55" column="32"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kernels.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="95" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kernels.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kernels.cpp" line="96" column="30"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;arm_neon.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;arm_neon.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;atomic&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;atomic&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cfloat&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cfloat&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="10" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="25" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="26" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="27" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-threading.h&quot; not found." verbose="Include file: &quot;ggml-threading.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;traits.h&quot; not found." verbose="Include file: &quot;traits.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="29" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;kai_common.h&quot; not found." verbose="Include file: &quot;kai_common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="33" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="36" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;OK==0&apos; is always true" verbose="Condition &apos;OK==0&apos; is always true" cwe="571" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="511" column="20" info="Condition &apos;OK==0&apos; is always true"/>
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="509" column="47" info="Assignment &apos;OK=tensor_traits-&gt;repack(tensor,data,size)&apos;, assigned value is 0"/>
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="509" column="47" info="Calling function &apos;repack&apos; returns 0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="378" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="419" column="56"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="460" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="463" column="36"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="483" column="89"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="497" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="508" column="26"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between unsigned char * and float * which have an incompatible binary data representation." verbose="Casting between unsigned char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="295" column="41"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between unsigned char * and float * which have an incompatible binary data representation." verbose="Casting between unsigned char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="330" column="44"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const unsigned char * and const float * which have an incompatible binary data representation." verbose="Casting between const unsigned char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="404" column="46"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between unsigned char * and float * which have an incompatible binary data representation." verbose="Casting between unsigned char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="420" column="42"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="486" column="9"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="500" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="518" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="539" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="553" column="5"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;ctx&apos; shadows outer variable" verbose="Local variable &apos;ctx&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="595" column="51" info="Shadow variable"/>
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="41" column="10" info="Shadowed declaration"/>
            <symbol>ctx</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;excpt.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;excpt.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string_view&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string_view&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/sysctl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/sysctl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/types.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/types.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;asm/hwcap.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;asm/hwcap.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/auxv.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/auxv.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/kleidiai/kleidiai.cpp" line="13" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="52" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu-impl.h&quot; not found." verbose="Include file: &quot;ggml-cpu-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="53" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-quants.h&quot; not found." verbose="Include file: &quot;ggml-quants.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="54" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;simd-mappings.h&quot; not found." verbose="Include file: &quot;simd-mappings.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="55" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="57" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;type_traits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;type_traits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="58" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2712" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2713" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2714" column="13"/>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::gemm&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::gemm&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="570" column="19"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="570" column="19"/>
            <symbol>tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::gemm</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::mnpack&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::mnpack&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="512" column="19"/>
            <symbol>tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::mnpack</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_lo&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_lo&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="601" column="22"/>
            <symbol>tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_lo</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_hi&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_hi&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="605" column="22"/>
            <symbol>tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_hi</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_lo&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_lo&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="609" column="22"/>
            <symbol>tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_lo</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_hi&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_hi&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="615" column="22"/>
            <symbol>tinyBLAS_Q0_ARM &lt; block_q8_0 &gt;::load_hi</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_lo&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_lo&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="601" column="22"/>
            <symbol>tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_lo</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_hi&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_hi&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="605" column="22"/>
            <symbol>tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_hi</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_lo&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_lo&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="609" column="22"/>
            <symbol>tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_lo</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_hi&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_hi&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="615" column="22"/>
            <symbol>tinyBLAS_Q0_ARM &lt; block_q4_0 &gt;::load_hi</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2842" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2843" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2844" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2879" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2880" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2881" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2802" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2803" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2804" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2810" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2811" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2812" column="17"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="243" column="22"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="246" column="34"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vecintrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vecintrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.h" line="6" column="0"/>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::gemm&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::gemm&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="916" column="19"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="916" column="19"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::gemm</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="965" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="965" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="977" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="977" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="991" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="991" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1021" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1021" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::updot&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::updot&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1035" column="19"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1035" column="19"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::updot</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::gemm&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::gemm&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="916" column="19"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="916" column="19"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::gemm</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="965" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="965" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="977" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="977" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="991" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="991" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1021" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1021" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::updot&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::updot&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1035" column="19"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1035" column="19"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::updot</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::gemm&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::gemm&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="916" column="19"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="916" column="19"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::gemm</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="965" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="965" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="977" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="977" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="991" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="991" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1021" column="20"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1021" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::updot&apos;" verbose="Unused private function: &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::updot&apos;" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1035" column="19"/>
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1035" column="19"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::updot</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="965" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="969" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="973" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="977" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="981" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="986" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="991" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="995" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1008" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q8_0 , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="965" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="969" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="973" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="977" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="981" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="986" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="991" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="995" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1008" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q4_0 , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="965" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="969" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="973" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="977" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="981" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="986" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="991" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="995" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1008" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_q5_0 , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="965" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="969" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="973" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="977" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="981" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="986" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="991" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load0&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load0&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="995" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load0</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load1&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load1&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1008" column="20"/>
            <symbol>tinyBLAS_Q0_AVX &lt; block_iq4_nl , block_q8_0 , float &gt;::load1</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="259" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2698" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2699" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2700" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2751" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2752" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2753" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2784" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2785" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2786" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2834" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2835" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2836" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2871" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2872" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2873" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2908" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2909" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2910" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2924" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2925" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2926" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="966" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="970" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="974" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="982" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="987" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="996" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1009" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1026" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1031" column="43"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="281" column="65"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="296" column="47"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="300" column="68"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="649" column="34"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="1048" column="37"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2704" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2705" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2706" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2759" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2760" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/llamafile/sgemm.cpp">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="2761" column="17"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/ops.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ops.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ops.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/ops.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ops.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ops.cpp" line="11" column="0"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If GGML_TENSOR_LOCALS is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If GGML_TENSOR_LOCALS is a macro then please configure it." file0="ggml/src/ggml-cpu/ops.cpp">
            <location file="ggml/src/ggml-cpu/ops.cpp" line="1184" column="5"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;riscv_vector.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;riscv_vector.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/ggml-cpu-impl.h" line="336" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;riscv_vector.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;riscv_vector.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/simd-mappings.h" line="22" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 35 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/quants.c" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/quants.c" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-quants.h&quot; not found." verbose="Include file: &quot;ggml-quants.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/quants.c" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/quants.c" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/quants.c" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/quants.c" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/quants.c" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/quants.c" line="15" column="0"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_0_generic&apos; argument 2 names different: declaration &apos;vy&apos; definition &apos;y&apos;." verbose="Function &apos;quantize_row_q8_0_generic&apos; argument 2 names different: declaration &apos;vy&apos; definition &apos;y&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="41" column="84"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="66" column="84"/>
            <symbol>quantize_row_q8_0_generic</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q8_1_generic&apos; argument 2 names different: declaration &apos;vy&apos; definition &apos;y&apos;." verbose="Function &apos;quantize_row_q8_1_generic&apos; argument 2 names different: declaration &apos;vy&apos; definition &apos;y&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="45" column="84"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="67" column="84"/>
            <symbol>quantize_row_q8_1_generic</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q2_K&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q2_K&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="59" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="24" column="76"/>
            <symbol>quantize_row_q2_K</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q3_K&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q3_K&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="65" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="25" column="76"/>
            <symbol>quantize_row_q3_K</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q4_K&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q4_K&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="71" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="26" column="76"/>
            <symbol>quantize_row_q4_K</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q5_K&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q5_K&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="79" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="27" column="76"/>
            <symbol>quantize_row_q5_K</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_q6_K&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_q6_K&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="87" column="76"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="28" column="76"/>
            <symbol>quantize_row_q6_K</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_tq1_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_tq1_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="95" column="77"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="31" column="77"/>
            <symbol>quantize_row_tq1_0</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_row_tq2_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." verbose="Function &apos;quantize_row_tq2_0&apos; argument 2 names different: declaration &apos;y&apos; definition &apos;vy&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="101" column="77"/>
            <location file="ggml/src/ggml-cpu/quants.h" line="32" column="77"/>
            <symbol>quantize_row_tq2_0</symbol>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="514" column="61"/>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="517" column="61"/>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="520" column="61"/>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="523" column="61"/>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="663" column="61"/>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="666" column="61"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;scale.u16&apos; is assigned a value that is never used." verbose="Variable &apos;scale.u16&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/quants.c">
            <location file="ggml/src/ggml-cpu/quants.c" line="1072" column="19"/>
            <symbol>scale.u16</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="17" column="0"/>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1603" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1674" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1603" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1674" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1603" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1674" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1603" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_q4_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat_id&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q4_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat_id&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1674" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_q4_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat_id</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q2_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q2_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1603" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_q2_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q2_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat_id&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_q2_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat_id&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1674" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_q2_K , 8 , 8 , GGML_TYPE_Q8_K &gt;::forward_mul_mat_id</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1603" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1674" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1603" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1674" column="10"/>
            <symbol>ggml::cpu::repack::tensor_traits &lt; block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 &gt;::forward_mul_mat_id</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="56" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="94" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="132" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="226" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="228" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="270" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="272" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="314" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="316" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="365" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="367" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="438" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="440" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="506" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="508" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="544" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="546" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="591" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="593" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="646" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="648" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="700" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="702" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="761" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="763" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="845" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="847" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="935" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="937" column="48"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="980" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="982" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1206" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1207" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1236" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1237" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1267" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1268" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1298" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1299" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1363" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1364" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1420" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1421" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1873" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1884" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1638" column="68"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1638" column="103"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1643" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1643" column="70"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1661" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1662" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1663" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1667" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1668" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1669" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1721" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1722" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1725" column="36"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1731" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1732" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1747" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1767" column="37"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1793" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1796" column="35"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="383" column="37"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="384" column="37"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="402" column="33"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="780" column="41"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="781" column="41"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="801" column="37"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1661" column="21"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1726" column="49"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1661" column="21"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1229" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1259" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1290" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1321" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1389" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1446" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1894" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="1915" column="5"/>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;scales_0&apos; can be declared as pointer to const" verbose="Variable &apos;scales_0&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="383" column="26" info="Variable &apos;scales_0&apos; can be declared as pointer to const"/>
            <symbol>scales_0</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;scales_1&apos; can be declared as pointer to const" verbose="Variable &apos;scales_1&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="384" column="26" info="Variable &apos;scales_1&apos; can be declared as pointer to const"/>
            <symbol>scales_1</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;mins&apos; can be declared as pointer to const" verbose="Variable &apos;mins&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="402" column="26" info="Variable &apos;mins&apos; can be declared as pointer to const"/>
            <symbol>mins</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;scales_0&apos; can be declared as pointer to const" verbose="Variable &apos;scales_0&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="780" column="30" info="Variable &apos;scales_0&apos; can be declared as pointer to const"/>
            <symbol>scales_0</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;scales_1&apos; can be declared as pointer to const" verbose="Variable &apos;scales_1&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="781" column="30" info="Variable &apos;scales_1&apos; can be declared as pointer to const"/>
            <symbol>scales_1</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;mins&apos; can be declared as pointer to const" verbose="Variable &apos;mins&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="801" column="30" info="Variable &apos;mins&apos; can be declared as pointer to const"/>
            <symbol>mins</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi1&apos; is assigned a value that is never used." verbose="Variable &apos;sumi1&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="386" column="27"/>
            <symbol>sumi1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi2&apos; is assigned a value that is never used." verbose="Variable &apos;sumi2&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="387" column="27"/>
            <symbol>sumi2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi1&apos; is assigned a value that is never used." verbose="Variable &apos;sumi1&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="452" column="27"/>
            <symbol>sumi1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi2&apos; is assigned a value that is never used." verbose="Variable &apos;sumi2&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="453" column="27"/>
            <symbol>sumi2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi3&apos; is assigned a value that is never used." verbose="Variable &apos;sumi3&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="454" column="27"/>
            <symbol>sumi3</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi4&apos; is assigned a value that is never used." verbose="Variable &apos;sumi4&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="455" column="27"/>
            <symbol>sumi4</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi1&apos; is assigned a value that is never used." verbose="Variable &apos;sumi1&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="784" column="35"/>
            <symbol>sumi1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi2&apos; is assigned a value that is never used." verbose="Variable &apos;sumi2&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="785" column="35"/>
            <symbol>sumi2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi1&apos; is assigned a value that is never used." verbose="Variable &apos;sumi1&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="863" column="35"/>
            <symbol>sumi1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi2&apos; is assigned a value that is never used." verbose="Variable &apos;sumi2&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="864" column="35"/>
            <symbol>sumi2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi3&apos; is assigned a value that is never used." verbose="Variable &apos;sumi3&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="865" column="35"/>
            <symbol>sumi3</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi4&apos; is assigned a value that is never used." verbose="Variable &apos;sumi4&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/repack.cpp">
            <location file="ggml/src/ggml-cpu/repack.cpp" line="866" column="35"/>
            <symbol>sumi4</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;traits.h&quot; not found." verbose="Include file: &quot;traits.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;riscv_vector.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;riscv_vector.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="25" column="0"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="#error &quot;riscv v extension or v_intrinsic not enabled&quot;" verbose="#error &quot;riscv v extension or v_intrinsic not enabled&quot;" file0="ggml/src/ggml-cpu/spacemit/ime.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="23" column="2"/>
        </error>
        <error id="noValidConfiguration" severity="information" msg="This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details." verbose="This file is not analyzed. Cppcheck failed to extract a valid configuration. The tested configurations have these preprocessor errors:\012&apos;&apos; : [ggml/src/ggml-cpu/spacemit/ime.cpp:39] #error &quot;riscv not enabled in this build&quot;\012RISCV64_SPACEMIT_IME1 : [ggml/src/ggml-cpu/spacemit/ime.cpp:39] #error &quot;riscv not enabled in this build&quot;\012RISCV64_SPACEMIT_IME1;__riscv : [ggml/src/ggml-cpu/spacemit/ime.cpp:23] #error &quot;riscv v extension or v_intrinsic not enabled&quot;\012RISCV64_SPACEMIT_IME1;__riscv;__riscv : [ggml/src/ggml-cpu/spacemit/ime.cpp:23] #error &quot;riscv v extension or v_intrinsic not enabled&quot;\012__GNUC__ : [ggml/src/ggml-cpu/spacemit/ime.cpp:39] #error &quot;riscv not enabled in this build&quot;\012__riscv : [ggml/src/ggml-cpu/spacemit/ime.cpp:23] #error &quot;riscv v extension or v_intrinsic not enabled&quot;\012__riscv;__riscv_v;__riscv_v_intrinsic : [ggml/src/ggml-cpu/spacemit/ime.cpp:29] #error &quot;riscv zfh extension not enabled&quot;\012__riscv;__riscv_zfh : [ggml/src/ggml-cpu/spacemit/ime.cpp:23] #error &quot;riscv v extension or v_intrinsic not enabled&quot;" file0="ggml/src/ggml-cpu/spacemit/ime.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="5" column="0"/>
        </error>
        <error id="incorrectLogicOperator" severity="warning" msg="Logical disjunction always evaluates to true: BlkLen != 32 || BlkLen != 64." verbose="Logical disjunction always evaluates to true: BlkLen != 32 || BlkLen != 64. Are these conditions necessary? Did you intend to use &amp;&amp; instead? Are the numbers correct? Are you comparing the correct variables?" cwe="571" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="375" column="22"/>
        </error>
        <error id="incorrectLogicOperator" severity="warning" msg="Logical disjunction always evaluates to true: BlkLen != 64 || BlkLen != 128." verbose="Logical disjunction always evaluates to true: BlkLen != 64 || BlkLen != 128. Are these conditions necessary? Did you intend to use &amp;&amp; instead? Are the numbers correct? Are you comparing the correct variables?" cwe="571" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="375" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2676" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2916" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2214" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2454" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1846" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2024" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1473" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1655" column="41"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="359" column="10"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="361" column="36"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;CPtr&apos; can be reduced." verbose="The scope of the variable &apos;CPtr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1850" column="21"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bias&apos; can be reduced." verbose="The scope of the variable &apos;bias&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1856" column="31"/>
            <symbol>bias</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;CPtr&apos; can be reduced." verbose="The scope of the variable &apos;CPtr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2027" column="21"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bias&apos; can be reduced." verbose="The scope of the variable &apos;bias&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2033" column="31"/>
            <symbol>bias</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;CPtr&apos; can be reduced." verbose="The scope of the variable &apos;CPtr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1477" column="21"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bias&apos; can be reduced." verbose="The scope of the variable &apos;bias&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1483" column="31"/>
            <symbol>bias</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;CPtr&apos; can be reduced." verbose="The scope of the variable &apos;CPtr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1658" column="21"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bias&apos; can be reduced." verbose="The scope of the variable &apos;bias&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1664" column="31"/>
            <symbol>bias</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_a_4row_i8&apos; argument 1 names different: declaration &apos;blk_len&apos; definition &apos;BlkLen&apos;." verbose="Function &apos;quantize_a_4row_i8&apos; argument 1 names different: declaration &apos;blk_len&apos; definition &apos;BlkLen&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="79" column="32"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="23" column="32"/>
            <symbol>quantize_a_4row_i8</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_a_4row_i8&apos; argument 2 names different: declaration &apos;a_ptr&apos; definition &apos;A&apos;." verbose="Function &apos;quantize_a_4row_i8&apos; argument 2 names different: declaration &apos;a_ptr&apos; definition &apos;A&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="79" column="54"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="23" column="55"/>
            <symbol>quantize_a_4row_i8</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_a_4row_i8&apos; argument 3 names different: declaration &apos;count_k&apos; definition &apos;CountK&apos;." verbose="Function &apos;quantize_a_4row_i8&apos; argument 3 names different: declaration &apos;count_k&apos; definition &apos;CountK&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="79" column="64"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="23" column="69"/>
            <symbol>quantize_a_4row_i8</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_a_4row_i8&apos; argument 4 names different: declaration &apos;quant_a_ptr&apos; definition &apos;QuantA&apos;." verbose="Function &apos;quantize_a_4row_i8&apos; argument 4 names different: declaration &apos;quant_a_ptr&apos; definition &apos;QuantA&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="79" column="84"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="23" column="90"/>
            <symbol>quantize_a_4row_i8</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_a_row_i8&apos; argument 1 names different: declaration &apos;blk_len&apos; definition &apos;BlkLen&apos;." verbose="Function &apos;quantize_a_row_i8&apos; argument 1 names different: declaration &apos;blk_len&apos; definition &apos;BlkLen&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="344" column="31"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="21" column="31"/>
            <symbol>quantize_a_row_i8</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_a_row_i8&apos; argument 2 names different: declaration &apos;a_ptr&apos; definition &apos;A&apos;." verbose="Function &apos;quantize_a_row_i8&apos; argument 2 names different: declaration &apos;a_ptr&apos; definition &apos;A&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="344" column="53"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="21" column="54"/>
            <symbol>quantize_a_row_i8</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_a_row_i8&apos; argument 3 names different: declaration &apos;count_k&apos; definition &apos;CountK&apos;." verbose="Function &apos;quantize_a_row_i8&apos; argument 3 names different: declaration &apos;count_k&apos; definition &apos;CountK&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="344" column="63"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="21" column="68"/>
            <symbol>quantize_a_row_i8</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;quantize_a_row_i8&apos; argument 4 names different: declaration &apos;quant_a_ptr&apos; definition &apos;QuantA&apos;." verbose="Function &apos;quantize_a_row_i8&apos; argument 4 names different: declaration &apos;quant_a_ptr&apos; definition &apos;QuantA&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="344" column="83"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="21" column="89"/>
            <symbol>quantize_a_row_i8</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 1 names different: declaration &apos;blk_len&apos; definition &apos;BlkLen&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 1 names different: declaration &apos;blk_len&apos; definition &apos;BlkLen&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3157" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="7" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 2 names different: declaration &apos;quant_a_ptr&apos; definition &apos;QuantA&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 2 names different: declaration &apos;quant_a_ptr&apos; definition &apos;QuantA&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3158" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="8" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 3 names different: declaration &apos;quant_b_data&apos; definition &apos;QuantBData&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 3 names different: declaration &apos;quant_b_data&apos; definition &apos;QuantBData&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3159" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="9" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 4 names different: declaration &apos;quant_b_scale&apos; definition &apos;QuantBScale&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 4 names different: declaration &apos;quant_b_scale&apos; definition &apos;QuantBScale&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3160" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="10" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 5 names different: declaration &apos;quant_b_zp&apos; definition &apos;QuantBZeroPoint&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 5 names different: declaration &apos;quant_b_zp&apos; definition &apos;QuantBZeroPoint&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3161" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="11" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 6 names different: declaration &apos;c_ptr&apos; definition &apos;C&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 6 names different: declaration &apos;c_ptr&apos; definition &apos;C&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3162" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="12" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 7 names different: declaration &apos;count_m&apos; definition &apos;CountM&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 7 names different: declaration &apos;count_m&apos; definition &apos;CountM&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3163" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="13" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 8 names different: declaration &apos;count_n&apos; definition &apos;CountN&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 8 names different: declaration &apos;count_n&apos; definition &apos;CountN&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3164" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="14" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 9 names different: declaration &apos;count_k&apos; definition &apos;CountK&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 9 names different: declaration &apos;count_k&apos; definition &apos;CountK&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3165" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="15" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 10 names different: declaration &apos;block_count_k&apos; definition &apos;BlockCountK&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 10 names different: declaration &apos;block_count_k&apos; definition &apos;BlockCountK&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3166" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="16" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 12 names different: declaration &apos;bias&apos; definition &apos;Bias&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 12 names different: declaration &apos;bias&apos; definition &apos;Bias&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3168" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="18" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gemm_kernel_i8i4&apos; argument 13 names different: declaration &apos;scale_stride&apos; definition &apos;ScaleStride&apos;." verbose="Function &apos;gemm_kernel_i8i4&apos; argument 13 names different: declaration &apos;scale_stride&apos; definition &apos;ScaleStride&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3169" column="43"/>
            <location file="ggml/src/ggml-cpu/spacemit/ime_kernels.h" line="19" column="43"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;DST&apos; can be declared as pointer to const" verbose="Variable &apos;DST&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="86" column="27" info="Variable &apos;DST&apos; can be declared as pointer to const"/>
            <symbol>DST</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;DST&apos; can be declared as pointer to const" verbose="Variable &apos;DST&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="141" column="27" info="Variable &apos;DST&apos; can be declared as pointer to const"/>
            <symbol>DST</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;DST&apos; can be declared as pointer to const" verbose="Variable &apos;DST&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="211" column="27" info="Variable &apos;DST&apos; can be declared as pointer to const"/>
            <symbol>DST</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;QuantA_offset&apos; can be declared as pointer to const" verbose="Variable &apos;QuantA_offset&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="349" column="21" info="Variable &apos;QuantA_offset&apos; can be declared as pointer to const"/>
            <symbol>QuantA_offset</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" verbose="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1473" column="25" info="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const"/>
            <symbol>QuantBDataPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;CPtr&apos; can be declared as pointer to const" verbose="Variable &apos;CPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1477" column="21" info="Variable &apos;CPtr&apos; can be declared as pointer to const"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" verbose="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1655" column="25" info="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const"/>
            <symbol>QuantBDataPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;CPtr&apos; can be declared as pointer to const" verbose="Variable &apos;CPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1658" column="21" info="Variable &apos;CPtr&apos; can be declared as pointer to const"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;CPtr&apos; can be declared as pointer to const" verbose="Variable &apos;CPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1801" column="22" info="Variable &apos;CPtr&apos; can be declared as pointer to const"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" verbose="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1846" column="25" info="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const"/>
            <symbol>QuantBDataPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;CPtr&apos; can be declared as pointer to const" verbose="Variable &apos;CPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="1850" column="21" info="Variable &apos;CPtr&apos; can be declared as pointer to const"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" verbose="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2024" column="25" info="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const"/>
            <symbol>QuantBDataPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;CPtr&apos; can be declared as pointer to const" verbose="Variable &apos;CPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2027" column="21" info="Variable &apos;CPtr&apos; can be declared as pointer to const"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;CPtr&apos; can be declared as pointer to const" verbose="Variable &apos;CPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2172" column="22" info="Variable &apos;CPtr&apos; can be declared as pointer to const"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" verbose="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2214" column="25" info="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const"/>
            <symbol>QuantBDataPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;CPtr&apos; can be declared as pointer to const" verbose="Variable &apos;CPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2218" column="21" info="Variable &apos;CPtr&apos; can be declared as pointer to const"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" verbose="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2454" column="25" info="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const"/>
            <symbol>QuantBDataPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;CPtr&apos; can be declared as pointer to const" verbose="Variable &apos;CPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2457" column="21" info="Variable &apos;CPtr&apos; can be declared as pointer to const"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" verbose="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2676" column="25" info="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const"/>
            <symbol>QuantBDataPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;CPtr&apos; can be declared as pointer to const" verbose="Variable &apos;CPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2680" column="21" info="Variable &apos;CPtr&apos; can be declared as pointer to const"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" verbose="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2916" column="25" info="Variable &apos;QuantBDataPtr&apos; can be declared as pointer to const"/>
            <symbol>QuantBDataPtr</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;CPtr&apos; can be declared as pointer to const" verbose="Variable &apos;CPtr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="2919" column="21" info="Variable &apos;CPtr&apos; can be declared as pointer to const"/>
            <symbol>CPtr</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/traits.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/traits.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-cpu/traits.cpp" line="4" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/traits.cpp">
            <location file="ggml/src/ggml-cpu/traits.cpp" line="15" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/traits.cpp">
            <location file="ggml/src/ggml-cpu/traits.cpp" line="28" column="34"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/unary-ops.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/unary-ops.cpp">
            <location file="ggml/src/ggml-cpu/unary-ops.cpp" line="95" column="53"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/unary-ops.cpp">
            <location file="ggml/src/ggml-cpu/unary-ops.cpp" line="96" column="53"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="0" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="3" column="0"/>
        </error>
        <error id="invalidFunctionArg" severity="warning" msg="Invalid logf() argument nr 1. The value is 0 but the valid values are &apos;1.4013e-45:&apos;." verbose="Invalid logf() argument nr 1. The value is 0 but the valid values are &apos;1.4013e-45:&apos;." cwe="628" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="488" column="35" info="Invalid argument"/>
            <location file="ggml/src/ggml-cpu/vec.cpp" line="483" column="14" info="Assuming condition is false"/>
            <location file="ggml/src/ggml-cpu/vec.cpp" line="482" column="22" info="Assignment &apos;sum=0&apos;, assigned value is 0"/>
            <symbol>logf</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="118" column="33"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="118" column="16"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="521" column="16"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="521" column="33"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="522" column="16"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="522" column="33"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="876" column="28"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="1348" column="28"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="1398" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="217" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="218" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="219" column="44"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="471" column="44"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="472" column="44"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="474" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="723" column="44"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="725" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="274" column="44"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="275" column="44"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="470" column="5"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sum&apos; is assigned a value that is never used." verbose="Variable &apos;sum&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="409" column="20"/>
            <symbol>sum</symbol>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="290" column="51"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="291" column="51"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="246" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="243" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="493" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="494" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="497" column="17"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="742" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.h" line="745" column="17"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="165" column="42"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="165" column="55"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="166" column="42"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="166" column="60"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="313" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-cpu/vec.cpp">
            <location file="ggml/src/ggml-cpu/vec.cpp" line="314" column="25"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdbool.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdbool.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-metal/ggml-metal-common.h" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-metal/ggml-metal-common.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-metal/ggml-metal-common.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-metal/ggml-metal-common.cpp" line="6" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!ggml_mem_ranges_add_src(mrs,node.node-&gt;src[i])&apos; is always false" verbose="Condition &apos;!ggml_mem_ranges_add_src(mrs,node.node-&gt;src[i])&apos; is always false" cwe="570" file0="ggml/src/ggml-metal/ggml-metal-common.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-common.cpp" line="214" column="21" info="Condition &apos;!ggml_mem_ranges_add_src(mrs,node.node-&gt;src[i])&apos; is always false"/>
            <location file="ggml/src/ggml-metal/ggml-metal-common.cpp" line="214" column="45" info="Calling function &apos;ggml_mem_ranges_add_src&apos; returns 1"/>
            <location file="ggml/src/ggml-metal/ggml-metal-common.cpp" line="99" column="31" info="Calling function &apos;ggml_mem_ranges_add&apos; returns 1"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!ggml_mem_ranges_add_src(mrs,fused-&gt;src[i])&apos; is always false" verbose="Condition &apos;!ggml_mem_ranges_add_src(mrs,fused-&gt;src[i])&apos; is always false" cwe="570" file0="ggml/src/ggml-metal/ggml-metal-common.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-common.cpp" line="224" column="25" info="Condition &apos;!ggml_mem_ranges_add_src(mrs,fused-&gt;src[i])&apos; is always false"/>
            <location file="ggml/src/ggml-metal/ggml-metal-common.cpp" line="224" column="49" info="Calling function &apos;ggml_mem_ranges_add_src&apos; returns 1"/>
            <location file="ggml/src/ggml-metal/ggml-metal-common.cpp" line="99" column="31" info="Calling function &apos;ggml_mem_ranges_add&apos; returns 1"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;mr&apos; should be passed by const reference." verbose="Parameter &apos;mr&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-common.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-common.cpp" line="42" column="71" info="Function parameter &apos;mr&apos; should be passed by const reference."/>
            <symbol>mr</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-metal/ggml-metal-device.h" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-metal/ggml-metal-device.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-metal/ggml-metal-device.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-metal/ggml-metal-device.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-metal/ggml-metal-device.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unordered_map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unordered_map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-metal/ggml-metal-device.cpp" line="10" column="0"/>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;ggml_metal_device_deleter::operator()&apos; can be const." verbose="The member function &apos;ggml_metal_device_deleter::operator()&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal-device.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-device.cpp" line="13" column="10"/>
            <symbol>ggml_metal_device_deleter::operator()</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-device.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-device.cpp" line="1204" column="23"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal-device.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-device.cpp" line="1068" column="5"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="12" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;nqptg%8==0&apos; is always true" verbose="Condition &apos;nqptg%8==0&apos; is always true" cwe="571" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="1958" column="33" info="Condition &apos;nqptg%8==0&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;ncpsg%32==0&apos; is always true" verbose="Condition &apos;ncpsg%32==0&apos; is always true" cwe="571" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="1959" column="33" info="Condition &apos;ncpsg%32==0&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;nqptg%1==0&apos; is always true" verbose="Condition &apos;nqptg%1==0&apos; is always true" cwe="571" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2056" column="33" info="Condition &apos;nqptg%1==0&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;ncpsg%32==0&apos; is always true" verbose="Condition &apos;ncpsg%32==0&apos; is always true" cwe="571" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2057" column="33" info="Condition &apos;ncpsg%32==0&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;nwg==1&apos; is always false" verbose="Condition &apos;nwg==1&apos; is always false" cwe="570" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2164" column="17" info="Condition &apos;nwg==1&apos; is always false"/>
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2098" column="19" info="Assignment &apos;nwg=32&apos;, assigned value is 32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="21" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="455" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="564" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="565" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="566" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="567" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="569" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="667" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="668" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="706" column="19"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="707" column="19"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="1010" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="1011" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="1251" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="1252" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="1253" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="1254" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="1931" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="1932" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="1933" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2438" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2635" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2636" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2639" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2648" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2649" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2650" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2651" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2652" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2653" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2656" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2657" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2658" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2659" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2722" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2723" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2724" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2725" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2726" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2727" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2729" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2794" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2951" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2952" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2981" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2982" column="21"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;nsg&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;nsg&apos; is reassigned a value before the old one has been used." cwe="563" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2096" column="17" info="nsg is overwritten"/>
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2087" column="13" info="nsg is assigned"/>
            <symbol>nsg</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;f0&apos; can be declared as pointer to const" verbose="Variable &apos;f0&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2533" column="27" info="Variable &apos;f0&apos; can be declared as pointer to const"/>
            <symbol>f0</symbol>
        </error>
        <error id="moduloofone" severity="style" msg="Modulo of one is always equal to zero" verbose="Modulo of one is always equal to zero" file0="ggml/src/ggml-metal/ggml-metal-ops.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal-ops.cpp" line="2056" column="28"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="4" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="23" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="31" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="39" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="47" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="55" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="63" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="75" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="97" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="105" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="113" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="121" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="129" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="137" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="149" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="174" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="228" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="279" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="331" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="374" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="385" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="391" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="397" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="412" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="418" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="426" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="460" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="489" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="497" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="505" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="519" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="525" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="552" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="577" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="585" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="593" column="35"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="206" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="214" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="224" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="240" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="265" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="275" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="291" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="316" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="327" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="343" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="370" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="405" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="515" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="533" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="573" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="604" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="625" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="652" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="658" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="666" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="680" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-metal/ggml-metal.cpp">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="690" column="5"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-opencl.h&quot; not found." verbose="Include file: &quot;ggml-opencl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="10" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="12" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="13" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;CL/cl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;CL/cl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;atomic&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;atomic&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;limits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;limits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="24" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="28" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;charconv&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;charconv&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="30" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="31" column="0"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If GGML_BACKEND_DL_IMPL is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If GGML_BACKEND_DL_IMPL is a macro then please configure it." file0="ggml/src/ggml-opencl/ggml-opencl.cpp">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="4043" column="1"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;add.cl.h&quot; not found." verbose="Include file: &quot;add.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="696" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;add_id.cl.h&quot; not found." verbose="Include file: &quot;add_id.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="715" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;clamp.cl.h&quot; not found." verbose="Include file: &quot;clamp.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="731" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;cpy.cl.h&quot; not found." verbose="Include file: &quot;cpy.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="747" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;cvt.cl.h&quot; not found." verbose="Include file: &quot;cvt.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="766" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;diag_mask_inf.cl.h&quot; not found." verbose="Include file: &quot;diag_mask_inf.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="788" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;gelu.cl.h&quot; not found." verbose="Include file: &quot;gelu.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="805" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;glu.cl.h&quot; not found." verbose="Include file: &quot;glu.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="826" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;get_rows.cl.h&quot; not found." verbose="Include file: &quot;get_rows.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="852" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;im2col_f32.cl.h&quot; not found." verbose="Include file: &quot;im2col_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="870" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;im2col_f16.cl.h&quot; not found." verbose="Include file: &quot;im2col_f16.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="886" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_q4_0_f32.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_q4_0_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="902" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_q4_0_f32_v.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_q4_0_f32_v.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="918" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_q4_0_f32_8x_flat.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_q4_0_f32_8x_flat.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="934" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_q4_0_f32_1d_8x_flat.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_q4_0_f32_1d_8x_flat.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="954" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_q4_0_f32_1d_16x_flat.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_q4_0_f32_1d_16x_flat.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="974" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_q6_k.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_q6_k.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="990" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_q8_0_f32.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_q8_0_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1006" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_q8_0_f32_flat.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_q8_0_f32_flat.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1022" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_mxfp4_f32.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_mxfp4_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1038" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_mxfp4_f32_flat.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_mxfp4_f32_flat.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1054" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_f16_f16.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_f16_f16.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1070" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_f16_f32_1row.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_f16_f32_1row.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1086" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_f16_f32_l4.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_f16_f32_l4.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1102" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_f16_f32.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_f16_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1118" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_f32_f32.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_f32_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1134" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mat_f16_f32.cl.h&quot; not found." verbose="Include file: &quot;mul_mat_f16_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1150" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mm_f32_f32_l4_lm.cl.h&quot; not found." verbose="Include file: &quot;mul_mm_f32_f32_l4_lm.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1166" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mm_f16_f32_l4_lm.cl.h&quot; not found." verbose="Include file: &quot;mul_mm_f16_f32_l4_lm.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1182" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul.cl.h&quot; not found." verbose="Include file: &quot;mul.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1198" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;norm.cl.h&quot; not found." verbose="Include file: &quot;norm.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1217" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;relu.cl.h&quot; not found." verbose="Include file: &quot;relu.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1234" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;rms_norm.cl.h&quot; not found." verbose="Include file: &quot;rms_norm.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1250" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;rope.cl.h&quot; not found." verbose="Include file: &quot;rope.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1267" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;scale.cl.h&quot; not found." verbose="Include file: &quot;scale.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1290" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;silu.cl.h&quot; not found." verbose="Include file: &quot;silu.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1306" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;softmax_f32.cl.h&quot; not found." verbose="Include file: &quot;softmax_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1323" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;softmax_f16.cl.h&quot; not found." verbose="Include file: &quot;softmax_f16.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1339" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;softmax_4_f32.cl.h&quot; not found." verbose="Include file: &quot;softmax_4_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1355" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;softmax_4_f16.cl.h&quot; not found." verbose="Include file: &quot;softmax_4_f16.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1371" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;flash_attn_f16.cl.h&quot; not found." verbose="Include file: &quot;flash_attn_f16.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1387" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;flash_attn_f32.cl.h&quot; not found." verbose="Include file: &quot;flash_attn_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1390" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;flash_attn_f32_f16.cl.h&quot; not found." verbose="Include file: &quot;flash_attn_f32_f16.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1393" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;argsort.cl.h&quot; not found." verbose="Include file: &quot;argsort.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1454" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;div.cl.h&quot; not found." verbose="Include file: &quot;div.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1470" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;sub.cl.h&quot; not found." verbose="Include file: &quot;sub.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1492" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;sum_rows.cl.h&quot; not found." verbose="Include file: &quot;sum_rows.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1511" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;sigmoid.cl.h&quot; not found." verbose="Include file: &quot;sigmoid.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1527" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;group_norm.cl.h&quot; not found." verbose="Include file: &quot;group_norm.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1544" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;repeat.cl.h&quot; not found." verbose="Include file: &quot;repeat.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1561" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;pad.cl.h&quot; not found." verbose="Include file: &quot;pad.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1582" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;tanh.cl.h&quot; not found." verbose="Include file: &quot;tanh.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1603" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;upscale.cl.h&quot; not found." verbose="Include file: &quot;upscale.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1626" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;concat.cl.h&quot; not found." verbose="Include file: &quot;concat.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1658" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;tsembd.cl.h&quot; not found." verbose="Include file: &quot;tsembd.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1683" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;set_rows.cl.h&quot; not found." verbose="Include file: &quot;set_rows.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1705" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;conv2d.cl.h&quot; not found." verbose="Include file: &quot;conv2d.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1724" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;conv2d_f16_f32.cl.h&quot; not found." verbose="Include file: &quot;conv2d_f16_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1727" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_id_q4_0_f32_8x_flat.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_id_q4_0_f32_8x_flat.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1765" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_id_q8_0_f32.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_id_q8_0_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1781" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_id_q8_0_f32_flat.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_id_q8_0_f32_flat.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1797" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_id_mxfp4_f32.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_id_mxfp4_f32.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1813" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mv_id_mxfp4_f32_flat.cl.h&quot; not found." verbose="Include file: &quot;mul_mv_id_mxfp4_f32_flat.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1829" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;transpose.cl.h&quot; not found." verbose="Include file: &quot;transpose.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1847" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;gemv_noshuffle_general.cl.h&quot; not found." verbose="Include file: &quot;gemv_noshuffle_general.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1874" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;gemv_noshuffle.cl.h&quot; not found." verbose="Include file: &quot;gemv_noshuffle.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1902" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;mul_mat_Ab_Bi_8x4.cl.h&quot; not found." verbose="Include file: &quot;mul_mat_Ab_Bi_8x4.cl.h&quot; not found.">
            <location file="ggml/src/ggml-opencl/ggml-opencl.cpp" line="1967" column="0"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/add_id.cl">
            <location file="ggml/src/ggml-opencl/kernels/add_id.cl" line="35" column="31"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/argsort.cl">
            <location file="ggml/src/ggml-opencl/kernels/argsort.cl" line="46" column="29"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/clamp.cl">
            <location file="ggml/src/ggml-opencl/kernels/clamp.cl" line="14" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/clamp.cl">
            <location file="ggml/src/ggml-opencl/kernels/clamp.cl" line="15" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/cpy.cl">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="75" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/cpy.cl">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="88" column="49"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/cpy.cl">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="118" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/cpy.cl">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="135" column="53"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/cpy.cl">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="163" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/cpy.cl">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="164" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/cpy.cl">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="177" column="49"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/cpy.cl">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="180" column="53"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/diag_mask_inf.cl">
            <location file="ggml/src/ggml-opencl/kernels/diag_mask_inf.cl" line="15" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/diag_mask_inf.cl">
            <location file="ggml/src/ggml-opencl/kernels/diag_mask_inf.cl" line="16" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/gelu.cl">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="17" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/gelu.cl">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="18" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/gelu.cl">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="45" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/gelu.cl">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="46" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/gelu.cl">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="71" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/gelu.cl">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="72" column="27"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl">
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl" line="259" column="17" info="Second condition"/>
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl" line="258" column="17" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl">
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl" line="260" column="17" info="Second condition"/>
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl" line="259" column="17" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl">
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl" line="263" column="17" info="Second condition"/>
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl" line="260" column="17" info="First condition"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl">
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl" line="264" column="31"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;src0_d&apos; can be declared as pointer to const" verbose="Parameter &apos;src0_d&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl">
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl" line="196" column="25" info="Parameter &apos;src0_d&apos; can be declared as pointer to const"/>
            <symbol>src0_d</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl">
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl" line="265" column="17" info="Second condition"/>
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl" line="264" column="17" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl">
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl" line="266" column="17" info="Second condition"/>
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl" line="265" column="17" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl">
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl" line="269" column="17" info="Second condition"/>
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl" line="266" column="17" info="First condition"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl">
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl" line="270" column="31"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;src0_d&apos; can be declared as pointer to const" verbose="Parameter &apos;src0_d&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl">
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl" line="196" column="25" info="Parameter &apos;src0_d&apos; can be declared as pointer to const"/>
            <symbol>src0_d</symbol>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/get_rows.cl">
            <location file="ggml/src/ggml-opencl/kernels/get_rows.cl" line="80" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/get_rows.cl">
            <location file="ggml/src/ggml-opencl/kernels/get_rows.cl" line="90" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/get_rows.cl">
            <location file="ggml/src/ggml-opencl/kernels/get_rows.cl" line="113" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/get_rows.cl">
            <location file="ggml/src/ggml-opencl/kernels/get_rows.cl" line="123" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/get_rows.cl">
            <location file="ggml/src/ggml-opencl/kernels/get_rows.cl" line="146" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/get_rows.cl">
            <location file="ggml/src/ggml-opencl/kernels/get_rows.cl" line="161" column="32"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/group_norm.cl">
            <location file="ggml/src/ggml-opencl/kernels/group_norm.cl" line="36" column="30"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/group_norm.cl">
            <location file="ggml/src/ggml-opencl/kernels/group_norm.cl" line="37" column="29"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/group_norm.cl">
            <location file="ggml/src/ggml-opencl/kernels/group_norm.cl" line="91" column="29"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/group_norm.cl">
            <location file="ggml/src/ggml-opencl/kernels/group_norm.cl" line="92" column="29"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/group_norm.cl">
            <location file="ggml/src/ggml-opencl/kernels/group_norm.cl" line="93" column="29"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/group_norm.cl">
            <location file="ggml/src/ggml-opencl/kernels/group_norm.cl" line="94" column="29"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/im2col_f16.cl">
            <location file="ggml/src/ggml-opencl/kernels/im2col_f16.cl" line="31" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/im2col_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/im2col_f32.cl" line="31" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/im2col_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/im2col_f32.cl" line="32" column="27"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;m_4&apos; is assigned a value that is never used." verbose="Variable &apos;m_4&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-opencl/kernels/mul_mat_Ab_Bi_8x4.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mat_Ab_Bi_8x4.cl" line="31" column="13"/>
            <symbol>m_4</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;m_4&apos; is assigned a value that is never used." verbose="Variable &apos;m_4&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-opencl/kernels/mul_mat_Ab_Bi_8x4.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mat_Ab_Bi_8x4.cl" line="31" column="9"/>
            <symbol>m_4</symbol>
        </error>
        <error id="identicalInnerCondition" severity="warning" msg="Identical inner &apos;if&apos; condition is always true." verbose="Identical inner &apos;if&apos; condition is always true (outer condition is &apos;k_vec_start_a&lt;K&apos; and inner condition is &apos;k_vec_start_a&lt;K&apos;)." cwe="398" file0="ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl" line="69" column="35" info="identical inner condition: k_vec_start_a&lt;K"/>
            <location file="ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl" line="64" column="47" info="outer condition: k_vec_start_a&lt;K"/>
        </error>
        <error id="identicalInnerCondition" severity="warning" msg="Identical inner &apos;if&apos; condition is always true." verbose="Identical inner &apos;if&apos; condition is always true (outer condition is &apos;k_vec_start_b&lt;K&apos; and inner condition is &apos;k_vec_start_b&lt;K&apos;)." cwe="398" file0="ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl" line="83" column="35" info="identical inner condition: k_vec_start_b&lt;K"/>
            <location file="ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl" line="78" column="47" info="outer condition: k_vec_start_b&lt;K"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mm_f16_f32_l4_lm.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mm_f16_f32_l4_lm.cl" line="39" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mm_f32_f32_l4_lm.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mm_f32_f32_l4_lm.cl" line="39" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_f16_f16.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_f16_f16.cl" line="54" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_f16_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_f16_f32.cl" line="54" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_f16_f32_1row.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_f16_f32_1row.cl" line="52" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_f16_f32_l4.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_f16_f32_l4.cl" line="53" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_f32_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_f32_f32.cl" line="54" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32.cl" line="71" column="31"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32.cl" line="124" column="30"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl" line="262" column="29"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl" line="264" column="29"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl" line="279" column="50"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;dh&apos; can be declared as pointer to const" verbose="Parameter &apos;dh&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl" line="44" column="24" info="Parameter &apos;dh&apos; can be declared as pointer to const"/>
            <symbol>dh</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sumq&apos; can be reduced." verbose="The scope of the variable &apos;sumq&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32_flat.cl" line="137" column="12"/>
            <symbol>sumq</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;block_q8_0::qs&apos; is never used." verbose="struct member &apos;block_q8_0::qs&apos; is never used." cwe="563" file0="ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32_flat.cl" line="24" column="10"/>
            <symbol>block_q8_0::qs</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumq&apos; is assigned a value that is never used." verbose="Variable &apos;sumq&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32_flat.cl" line="137" column="17"/>
            <symbol>sumq</symbol>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/mul_mv_mxfp4_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_mxfp4_f32.cl" line="83" column="31"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/mul_mv_mxfp4_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_mxfp4_f32.cl" line="136" column="30"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl" line="188" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl" line="189" column="27"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;yl&apos; can be declared as pointer to const" verbose="Parameter &apos;yl&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl" line="60" column="25" info="Parameter &apos;yl&apos; can be declared as pointer to const"/>
            <symbol>yl</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;tot&apos; can be declared as const array" verbose="Variable &apos;tot&apos; can be declared as const array" cwe="398" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl" line="155" column="11" info="Variable &apos;tot&apos; can be declared as const array"/>
            <symbol>tot</symbol>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl" line="303" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl" line="304" column="27"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;dh&apos; can be declared as pointer to const" verbose="Parameter &apos;dh&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl" line="52" column="24" info="Parameter &apos;dh&apos; can be declared as pointer to const"/>
            <symbol>dh</symbol>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl" line="261" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl" line="262" column="27"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;dh&apos; can be declared as pointer to const" verbose="Parameter &apos;dh&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl" line="52" column="24" info="Parameter &apos;dh&apos; can be declared as pointer to const"/>
            <symbol>dh</symbol>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_8x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_8x_flat.cl" line="268" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_8x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_8x_flat.cl" line="269" column="27"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;dh&apos; can be declared as pointer to const" verbose="Parameter &apos;dh&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_8x_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_8x_flat.cl" line="55" column="24" info="Parameter &apos;dh&apos; can be declared as pointer to const"/>
            <symbol>dh</symbol>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl" line="250" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl" line="251" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q6_k.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q6_k.cl" line="98" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/mul_mv_q6_k.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q6_k.cl" line="99" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32.cl" line="116" column="30"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl" line="179" column="30"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sumq&apos; can be reduced." verbose="The scope of the variable &apos;sumq&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl" line="117" column="12"/>
            <symbol>sumq</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;block_q8_0::qs&apos; is never used." verbose="struct member &apos;block_q8_0::qs&apos; is never used." cwe="563" file0="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl" line="24" column="10"/>
            <symbol>block_q8_0::qs</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumq&apos; is assigned a value that is never used." verbose="Variable &apos;sumq&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl" line="117" column="17"/>
            <symbol>sumq</symbol>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/norm.cl">
            <location file="ggml/src/ggml-opencl/kernels/norm.cl" line="34" column="26"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/relu.cl">
            <location file="ggml/src/ggml-opencl/kernels/relu.cl" line="12" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/relu.cl">
            <location file="ggml/src/ggml-opencl/kernels/relu.cl" line="13" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rms_norm.cl">
            <location file="ggml/src/ggml-opencl/kernels/rms_norm.cl" line="46" column="27"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;sector&gt;=sections.s0&apos; is always true" verbose="Condition &apos;sector&gt;=sections.s0&apos; is always true" cwe="571" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="425" column="29" info="Condition &apos;sector&gt;=sections.s0&apos; is always true"/>
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="422" column="24" info="Assuming that condition &apos;sector&lt;sections.s0&apos; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;sector&gt;=sections.s0&apos; is always true" verbose="Condition &apos;sector&gt;=sections.s0&apos; is always true" cwe="571" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="523" column="29" info="Condition &apos;sector&gt;=sections.s0&apos; is always true"/>
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="520" column="24" info="Assuming that condition &apos;sector&lt;sections.s0&apos; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;sector&gt;=sections.s0&apos; is always true" verbose="Condition &apos;sector&gt;=sections.s0&apos; is always true" cwe="571" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="620" column="27" info="Condition &apos;sector&gt;=sections.s0&apos; is always true"/>
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="617" column="20" info="Assuming that condition &apos;sector&lt;sections.s0&apos; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;sector&gt;=sections.s0&apos; is always true" verbose="Condition &apos;sector&gt;=sections.s0&apos; is always true" cwe="571" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="703" column="27" info="Condition &apos;sector&gt;=sections.s0&apos; is always true"/>
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="700" column="20" info="Assuming that condition &apos;sector&lt;sections.s0&apos; is not redundant"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="82" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="83" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="107" column="57"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="116" column="56"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="161" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="162" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="186" column="55"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="195" column="54"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="240" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="241" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="265" column="56"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="274" column="57"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="319" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="320" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="344" column="55"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="353" column="55"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="399" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="400" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="442" column="56"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="451" column="57"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="497" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="595" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="596" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="630" column="52"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/rope.cl">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="678" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/sigmoid.cl">
            <location file="ggml/src/ggml-opencl/kernels/sigmoid.cl" line="13" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/sigmoid.cl">
            <location file="ggml/src/ggml-opencl/kernels/sigmoid.cl" line="14" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/silu.cl">
            <location file="ggml/src/ggml-opencl/kernels/silu.cl" line="12" column="28"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/silu.cl">
            <location file="ggml/src/ggml-opencl/kernels/silu.cl" line="13" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/softmax_4_f16.cl">
            <location file="ggml/src/ggml-opencl/kernels/softmax_4_f16.cl" line="66" column="44"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/softmax_4_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/softmax_4_f32.cl" line="66" column="44"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/softmax_f16.cl">
            <location file="ggml/src/ggml-opencl/kernels/softmax_f16.cl" line="66" column="43"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/softmax_f32.cl">
            <location file="ggml/src/ggml-opencl/kernels/softmax_f32.cl" line="66" column="43"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/sum_rows.cl">
            <location file="ggml/src/ggml-opencl/kernels/sum_rows.cl" line="18" column="29"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/sum_rows.cl">
            <location file="ggml/src/ggml-opencl/kernels/sum_rows.cl" line="19" column="29"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/sum_rows.cl">
            <location file="ggml/src/ggml-opencl/kernels/sum_rows.cl" line="29" column="48"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-opencl/kernels/sum_rows.cl">
            <location file="ggml/src/ggml-opencl/kernels/sum_rows.cl" line="30" column="48"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-opencl/kernels/tsembd.cl">
            <location file="ggml/src/ggml-opencl/kernels/tsembd.cl" line="27" column="28"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-opt.h&quot; not found." verbose="Include file: &quot;ggml-opt.h&quot; not found.">
            <location file="ggml/src/ggml-opt.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-opt.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/src/ggml-opt.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml-opt.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opt.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opt.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opt.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opt.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opt.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opt.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-opt.cpp" line="14" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-quants.c" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-quants.h" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-quants.c" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-quants.c" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-quants.c" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-quants.c" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-quants.c" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-quants.c" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-quants.c" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cuda_fp16.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cuda_fp16.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="39" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="41" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;musa_fp16.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;musa_fp16.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="37" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;hip/hip_fp16.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;hip/hip_fp16.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="51" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="52" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;metal_stdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;metal_stdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/half_type.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/half_type.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="62" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-common.h" line="63" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-rpc.h&quot; not found." verbose="Include file: &quot;ggml-rpc.h&quot; not found.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpp.h&quot; not found." verbose="Include file: &quot;ggml-cpp.h&quot; not found.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unordered_map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unordered_map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unordered_set&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unordered_set&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;arpa/inet.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;arpa/inet.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/socket.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/socket.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/types.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/types.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;netinet/in.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;netinet/in.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="24" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;netinet/tcp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;netinet/tcp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;netdb.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;netdb.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="30" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;filesystem&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;filesystem&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="31" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="32" column="0"/>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;rpc_server::hello&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;rpc_server::hello&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="914" column="18"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="885" column="10"/>
            <symbol>rpc_server::hello</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;socket_t&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;socket_t&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="54" column="5"/>
            <symbol>socket_t</symbol>
        </error>
        <error id="memleak" severity="error" msg="Memory leak: buft_ctx" verbose="Memory leak: buft_ctx" cwe="401" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="836" column="5"/>
            <symbol>buft_ctx</symbol>
        </error>
        <error id="memleak" severity="error" msg="Memory leak: ctx" verbose="Memory leak: ctx" cwe="401" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="851" column="5"/>
            <symbol>ctx</symbol>
        </error>
        <error id="memleak" severity="error" msg="Memory leak: ctx" verbose="Memory leak: ctx" cwe="401" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1833" column="5"/>
            <symbol>ctx</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="336" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="351" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="503" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="511" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="529" column="49"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="559" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="576" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="582" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="602" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="614" column="49"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="616" column="49"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="620" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="631" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="650" column="55"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="655" column="55"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="680" column="55"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="692" column="55"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="699" column="59"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="726" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="732" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="780" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="938" column="5"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1082" column="5"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1098" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1104" column="19"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1126" column="14"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1151" column="5"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1186" column="5"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1219" column="5"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1274" column="5"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1671" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1677" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1683" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1711" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1719" column="45"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1737" column="55"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1738" column="49"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="256" column="60"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="262" column="60"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="285" column="31"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="323" column="22"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="773" column="31"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="775" column="32"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1064" column="36"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1344" column="30"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1350" column="34"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1694" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1715" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1723" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1765" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1771" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1790" column="5"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;response&apos; shadows outer variable" verbose="Local variable &apos;response&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1433" column="42" info="Shadow variable"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1409" column="23" info="Shadowed declaration"/>
            <symbol>response</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;response&apos; shadows outer variable" verbose="Local variable &apos;response&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1445" column="44" info="Shadow variable"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1409" column="23" info="Shadowed declaration"/>
            <symbol>response</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;response&apos; shadows outer variable" verbose="Local variable &apos;response&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1458" column="43" info="Shadow variable"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1409" column="23" info="Shadowed declaration"/>
            <symbol>response</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;response&apos; shadows outer variable" verbose="Local variable &apos;response&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1469" column="42" info="Shadow variable"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1409" column="23" info="Shadowed declaration"/>
            <symbol>response</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;response&apos; shadows outer variable" verbose="Local variable &apos;response&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1481" column="45" info="Shadow variable"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1409" column="23" info="Shadowed declaration"/>
            <symbol>response</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;response&apos; shadows outer variable" verbose="Local variable &apos;response&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1531" column="45" info="Shadow variable"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1409" column="23" info="Shadowed declaration"/>
            <symbol>response</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;response&apos; shadows outer variable" verbose="Local variable &apos;response&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1558" column="38" info="Shadow variable"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1409" column="23" info="Shadowed declaration"/>
            <symbol>response</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;response&apos; shadows outer variable" verbose="Local variable &apos;response&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1572" column="41" info="Shadow variable"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1409" column="23" info="Shadowed declaration"/>
            <symbol>response</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;response&apos; shadows outer variable" verbose="Local variable &apos;response&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1586" column="43" info="Shadow variable"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1409" column="23" info="Shadowed declaration"/>
            <symbol>response</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;response&apos; shadows outer variable" verbose="Local variable &apos;response&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1599" column="47" info="Shadow variable"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1409" column="23" info="Shadowed declaration"/>
            <symbol>response</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;server&apos; can be declared as pointer to const" verbose="Variable &apos;server&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="279" column="22" info="Variable &apos;server&apos; can be declared as pointer to const"/>
            <symbol>server</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="529" column="43" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="559" column="39" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;tensor&apos; can be declared as pointer to const. However it seems that &apos;ggml_backend_rpc_buffer_set_tensor&apos; is a callback function, if &apos;tensor&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;tensor&apos; can be declared as pointer to const. However it seems that &apos;ggml_backend_rpc_buffer_set_tensor&apos; is a callback function, if &apos;tensor&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="575" column="92" info="Parameter &apos;tensor&apos; can be declared as pointer to const"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="642" column="30" info="You might need to cast the function pointer here"/>
            <symbol>tensor</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="576" column="39" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="602" column="39" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;dst&apos; can be declared as pointer to const. However it seems that &apos;ggml_backend_rpc_buffer_cpy_tensor&apos; is a callback function, if &apos;dst&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;dst&apos; can be declared as pointer to const. However it seems that &apos;ggml_backend_rpc_buffer_cpy_tensor&apos; is a callback function, if &apos;dst&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="611" column="117" info="Parameter &apos;dst&apos; can be declared as pointer to const"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="644" column="30" info="You might need to cast the function pointer here"/>
            <symbol>dst</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;src_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;src_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="614" column="39" info="Variable &apos;src_ctx&apos; can be declared as pointer to const"/>
            <symbol>src_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;dst_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;dst_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="616" column="39" info="Variable &apos;dst_ctx&apos; can be declared as pointer to const"/>
            <symbol>dst_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="620" column="39" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="631" column="39" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;buft_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;buft_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="655" column="44" info="Variable &apos;buft_ctx&apos; can be declared as pointer to const"/>
            <symbol>buft_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;buft_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;buft_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="680" column="44" info="Variable &apos;buft_ctx&apos; can be declared as pointer to const"/>
            <symbol>buft_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;buft_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;buft_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="692" column="44" info="Variable &apos;buft_ctx&apos; can be declared as pointer to const"/>
            <symbol>buft_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;buft_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;buft_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="699" column="48" info="Variable &apos;buft_ctx&apos; can be declared as pointer to const"/>
            <symbol>buft_ctx</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;cgraph&apos; can be declared as pointer to const. However it seems that &apos;ggml_backend_rpc_graph_compute&apos; is a callback function, if &apos;cgraph&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;cgraph&apos; can be declared as pointer to const. However it seems that &apos;ggml_backend_rpc_graph_compute&apos; is a callback function, if &apos;cgraph&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="779" column="94" info="Parameter &apos;cgraph&apos; can be declared as pointer to const"/>
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="801" column="38" info="You might need to cast the function pointer here"/>
            <symbol>cgraph</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;rpc_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;rpc_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="780" column="32" info="Variable &apos;rpc_ctx&apos; can be declared as pointer to const"/>
            <symbol>rpc_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;buft_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;buft_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1737" column="44" info="Variable &apos;buft_ctx&apos; can be declared as pointer to const"/>
            <symbol>buft_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;dev_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;dev_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-rpc/ggml-rpc.cpp">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="1738" column="39" info="Variable &apos;dev_ctx&apos; can be declared as pointer to const"/>
            <symbol>dev_ctx</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;winsock2.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;winsock2.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="19" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="0" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/common.hpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/common.hpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/common.hpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/common.hpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/half_type.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/half_type.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;syclcompat/math.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;syclcompat/math.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;oneapi/math.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;oneapi/math.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="28" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="31" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;oneapi/mkl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;oneapi/mkl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="39" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="52" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/info/aspects.def&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/info/aspects.def&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2037" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/info/aspects_deprecated.def&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/info/aspects_deprecated.def&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2038" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl.h&quot; not found." verbose="Include file: &quot;ggml-sycl.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/common.hpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/sycl_hw.hpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/sycl_hw.hpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/sycl_hw.hpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/sycl_hw.hpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/sycl_hw.hpp" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/common.hpp" line="37" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/common.hpp" line="39" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="7" column="0"/>
        </error>
        <error id="returnDanglingLifetime" severity="error" msg="Returning object that points to local variable &apos;r&apos; that will be invalid when returning." verbose="Returning object that points to local variable &apos;r&apos; that will be invalid when returning." cwe="562" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1658" column="55"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1658" column="43" info="Variable created here."/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1658" column="55" info="Address of variable taken here."/>
        </error>
        <error id="returnDanglingLifetime" severity="error" msg="Returning pointer to local variable &apos;r&apos; that will be invalid when returning." verbose="Returning pointer to local variable &apos;r&apos; that will be invalid when returning." cwe="562" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1659" column="67"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1659" column="55" info="Variable created here."/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1659" column="67" info="Address of variable taken here."/>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_name&apos; is not initialized." verbose="Member variable &apos;device_info::_name&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="495" column="9"/>
            <symbol>device_info::_name</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_max_work_item_sizes_i&apos; is not initialized." verbose="Member variable &apos;device_info::_max_work_item_sizes_i&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="496" column="9"/>
            <symbol>device_info::_max_work_item_sizes_i</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_major&apos; is not initialized." verbose="Member variable &apos;device_info::_major&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="498" column="9"/>
            <symbol>device_info::_major</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_minor&apos; is not initialized." verbose="Member variable &apos;device_info::_minor&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="499" column="9"/>
            <symbol>device_info::_minor</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_frequency&apos; is not initialized." verbose="Member variable &apos;device_info::_frequency&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="501" column="9"/>
            <symbol>device_info::_frequency</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_global_mem_cache_size&apos; is not initialized." verbose="Member variable &apos;device_info::_global_mem_cache_size&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="506" column="18"/>
            <symbol>device_info::_global_mem_cache_size</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_max_compute_units&apos; is not initialized." verbose="Member variable &apos;device_info::_max_compute_units&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="507" column="9"/>
            <symbol>device_info::_max_compute_units</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_max_work_group_size&apos; is not initialized." verbose="Member variable &apos;device_info::_max_work_group_size&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="508" column="9"/>
            <symbol>device_info::_max_work_group_size</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_max_sub_group_size&apos; is not initialized." verbose="Member variable &apos;device_info::_max_sub_group_size&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="509" column="9"/>
            <symbol>device_info::_max_sub_group_size</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_max_work_items_per_compute_unit&apos; is not initialized." verbose="Member variable &apos;device_info::_max_work_items_per_compute_unit&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="510" column="9"/>
            <symbol>device_info::_max_work_items_per_compute_unit</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_max_register_size_per_work_group&apos; is not initialized." verbose="Member variable &apos;device_info::_max_register_size_per_work_group&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="511" column="9"/>
            <symbol>device_info::_max_register_size_per_work_group</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_global_mem_size&apos; is not initialized." verbose="Member variable &apos;device_info::_global_mem_size&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="512" column="9"/>
            <symbol>device_info::_global_mem_size</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_local_mem_size&apos; is not initialized." verbose="Member variable &apos;device_info::_local_mem_size&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="513" column="9"/>
            <symbol>device_info::_local_mem_size</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_max_mem_alloc_size&apos; is not initialized." verbose="Member variable &apos;device_info::_max_mem_alloc_size&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="514" column="9"/>
            <symbol>device_info::_max_mem_alloc_size</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_max_nd_range_size&apos; is not initialized." verbose="Member variable &apos;device_info::_max_nd_range_size&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="515" column="9"/>
            <symbol>device_info::_max_nd_range_size</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_max_nd_range_size_i&apos; is not initialized." verbose="Member variable &apos;device_info::_max_nd_range_size_i&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="516" column="9"/>
            <symbol>device_info::_max_nd_range_size_i</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_info::_device_id&apos; is not initialized." verbose="Member variable &apos;device_info::_device_id&apos; is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="517" column="9"/>
            <symbol>device_info::_device_id</symbol>
        </error>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;device_memory::_host_ptr&apos; is not initialized in the constructor." verbose="Member variable &apos;device_memory::_host_ptr&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2851" column="13"/>
            <symbol>device_memory::_host_ptr</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;opt_feature&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;opt_feature&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/common.hpp" line="300" column="9"/>
            <symbol>opt_feature</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;dpct::pitched_data::get_pitch&apos; can be const." verbose="The member function &apos;dpct::pitched_data::get_pitch&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="291" column="16"/>
            <symbol>dpct::pitched_data::get_pitch</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;dpct::pitched_data::get_x&apos; can be const." verbose="The member function &apos;dpct::pitched_data::get_x&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="294" column="16"/>
            <symbol>dpct::pitched_data::get_x</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;dpct::pitched_data::get_y&apos; can be const." verbose="The member function &apos;dpct::pitched_data::get_y&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="297" column="16"/>
            <symbol>dpct::pitched_data::get_y</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;dpct::device_info::get_max_nd_range_size&apos; can be const." verbose="The member function &apos;dpct::device_info::get_max_nd_range_size&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="372" column="14"/>
            <symbol>dpct::device_info::get_max_nd_range_size</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Either there is a missing &apos;override&apos;, or the member function &apos;dpct::device_ext::is_native_atomic_supported&apos; can be static." verbose="Unless it overrides a base class member, the member function &apos;dpct::device_ext::is_native_atomic_supported&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="643" column="11"/>
            <symbol>dpct::device_ext::is_native_atomic_supported</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;dpct::dev_mgr::device_count&apos; can be const." verbose="The member function &apos;dpct::dev_mgr::device_count&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="895" column="22"/>
            <symbol>dpct::dev_mgr::device_count</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;dpct::detail::deprecated::usm_allocator::address&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;dpct::detail::deprecated::usm_allocator::address&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1658" column="25"/>
            <symbol>dpct::detail::deprecated::usm_allocator::address</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;dpct::detail::deprecated::usm_allocator::address&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;dpct::detail::deprecated::usm_allocator::address&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1659" column="31"/>
            <symbol>dpct::detail::deprecated::usm_allocator::address</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;dpct::detail::vectorized_binary::operator()&apos; can be const." verbose="The member function &apos;dpct::detail::vectorized_binary::operator()&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1734" column="25"/>
            <symbol>dpct::detail::vectorized_binary::operator()</symbol>
        </error>
        <error id="functionConst" severity="style" msg="Either there is a missing &apos;override&apos;, or the member function &apos;dpct::detail::device_memory::get_size&apos; can be const." verbose="Unless it overrides a base class member, the member function &apos;dpct::detail::device_memory::get_size&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2834" column="20"/>
            <symbol>dpct::detail::device_memory::get_size</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;generic_error_type&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;generic_error_type&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="271" column="13"/>
            <symbol>generic_error_type</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;device_ext&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;device_ext&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="638" column="7"/>
            <symbol>device_ext</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;accessor&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;accessor&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2696" column="9"/>
            <symbol>accessor</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;accessor&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;accessor&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2720" column="9"/>
            <symbol>accessor</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;device_memory&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;device_memory&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2777" column="13"/>
            <symbol>device_memory</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;device_memory&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;device_memory&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2889" column="13"/>
            <symbol>device_memory</symbol>
        </error>
        <error id="returnByReference" severity="performance" msg="Function &apos;get_uuid()&apos; should return member &apos;_uuid&apos; by const reference." verbose="Function &apos;get_uuid()&apos; should return member &apos;_uuid&apos; by const reference." file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="389" column="39"/>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: _host_ptr" verbose="If memory allocation fails, then there is a possible null pointer dereference: _host_ptr" cwe="476" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2754" column="29" info="Null pointer dereference"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2753" column="29" info="Assignment &apos;_host_ptr=(value_t*)std::malloc(_size)&apos;, assigned value is 0"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2753" column="51" info="Assuming allocation function fails"/>
            <symbol>_host_ptr</symbol>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: _host_ptr" verbose="If memory allocation fails, then there is a possible null pointer dereference: _host_ptr" cwe="476" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2755" column="29" info="Null pointer dereference"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2753" column="29" info="Assignment &apos;_host_ptr=(value_t*)std::malloc(_size)&apos;, assigned value is 0"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2753" column="51" info="Assuming allocation function fails"/>
            <symbol>_host_ptr</symbol>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: _host_ptr" verbose="If memory allocation fails, then there is a possible null pointer dereference: _host_ptr" cwe="476" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2766" column="29" info="Null pointer dereference"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2765" column="29" info="Assignment &apos;_host_ptr=(value_t*)std::malloc(_size)&apos;, assigned value is 0"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2765" column="51" info="Assuming allocation function fails"/>
            <symbol>_host_ptr</symbol>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: tmp_data" verbose="If memory allocation fails, then there is a possible null pointer dereference: tmp_data" cwe="476" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2770" column="33" info="Null pointer dereference"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2768" column="38" info="Assuming container is not empty"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2767" column="33" info="Assignment &apos;tmp_data=_host_ptr&apos;, assigned value is 0"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2765" column="29" info="Assignment &apos;_host_ptr=(value_t*)std::malloc(_size)&apos;, assigned value is 0"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2765" column="51" info="Assuming allocation function fails"/>
            <symbol>tmp_data</symbol>
        </error>
        <error id="nullPointer" severity="error" msg="Null pointer dereference: ptr" verbose="Null pointer dereference: ptr" cwe="476" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/common.hpp" line="115" column="4" info="Null pointer dereference"/>
            <location file="ggml/src/ggml-sycl/common.hpp" line="114" column="14" info="Assignment &apos;ptr=NULL&apos;, assigned value is 0"/>
            <symbol>ptr</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1170" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1361" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1492" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1494" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1700" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1700" column="54"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2137" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2139" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2753" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2765" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2858" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2871" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="269" column="14"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="269" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="269" column="70"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="273" column="14"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="273" column="47"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="273" column="80"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="278" column="14"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="278" column="47"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="278" column="75"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="282" column="14"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="282" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="282" column="74"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="286" column="14"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="286" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="286" column="74"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/common.hpp" line="249" column="15"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/common.hpp" line="257" column="15"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2847" column="40"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1437" column="13"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2082" column="9"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.hpp" line="8" column="5"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nr&apos; can be reduced." verbose="The scope of the variable &apos;nr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="104" column="13"/>
            <symbol>nr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cne0&apos; can be reduced." verbose="The scope of the variable &apos;cne0&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="108" column="17"/>
            <symbol>cne0</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;e&apos; shadows outer variable" verbose="Local variable &apos;e&apos; shadows outer variable" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="138" column="43" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="132" column="40" info="Shadowed declaration"/>
            <symbol>e</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;to_ptr&apos; shadows outer argument" verbose="Local variable &apos;to_ptr&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1509" column="36" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1456" column="43" info="Shadowed declaration"/>
            <symbol>to_ptr</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;from_ptr&apos; shadows outer argument" verbose="Local variable &apos;from_ptr&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1510" column="42" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1456" column="63" info="Shadowed declaration"/>
            <symbol>from_ptr</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;to_ptr&apos; shadows outer argument" verbose="Local variable &apos;to_ptr&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2154" column="32" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2101" column="39" info="Shadowed declaration"/>
            <symbol>to_ptr</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;from_ptr&apos; shadows outer argument" verbose="Local variable &apos;from_ptr&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2155" column="38" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2101" column="59" info="Shadowed declaration"/>
            <symbol>from_ptr</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;ne0&apos; shadows outer argument" verbose="Local variable &apos;ne0&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="142" column="21" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="94" column="75" info="Shadowed declaration"/>
            <symbol>ne0</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;ne1&apos; shadows outer argument" verbose="Local variable &apos;ne1&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="143" column="21" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="94" column="94" info="Shadowed declaration"/>
            <symbol>ne1</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;ne2&apos; shadows outer argument" verbose="Local variable &apos;ne2&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="144" column="21" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="94" column="113" info="Shadowed declaration"/>
            <symbol>ne2</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;ne3&apos; shadows outer argument" verbose="Local variable &apos;ne3&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="145" column="21" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="95" column="35" info="Shadowed declaration"/>
            <symbol>ne3</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;ne10&apos; shadows outer argument" verbose="Local variable &apos;ne10&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="147" column="21" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="93" column="95" info="Shadowed declaration"/>
            <symbol>ne10</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;ne11&apos; shadows outer argument" verbose="Local variable &apos;ne11&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="148" column="21" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="93" column="115" info="Shadowed declaration"/>
            <symbol>ne11</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;ne12&apos; shadows outer argument" verbose="Local variable &apos;ne12&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="149" column="21" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="94" column="35" info="Shadowed declaration"/>
            <symbol>ne12</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;ne13&apos; shadows outer argument" verbose="Local variable &apos;ne13&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="150" column="21" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="94" column="55" info="Shadowed declaration"/>
            <symbol>ne13</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb0&apos; shadows outer argument" verbose="Local variable &apos;nb0&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="152" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="96" column="110" info="Shadowed declaration"/>
            <symbol>nb0</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb1&apos; shadows outer argument" verbose="Local variable &apos;nb1&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="153" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="97" column="34" info="Shadowed declaration"/>
            <symbol>nb1</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb2&apos; shadows outer argument" verbose="Local variable &apos;nb2&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="154" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="97" column="52" info="Shadowed declaration"/>
            <symbol>nb2</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb3&apos; shadows outer argument" verbose="Local variable &apos;nb3&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="155" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="97" column="70" info="Shadowed declaration"/>
            <symbol>nb3</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb00&apos; shadows outer argument" verbose="Local variable &apos;nb00&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="157" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="95" column="53" info="Shadowed declaration"/>
            <symbol>nb00</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb01&apos; shadows outer argument" verbose="Local variable &apos;nb01&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="158" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="95" column="72" info="Shadowed declaration"/>
            <symbol>nb01</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb02&apos; shadows outer argument" verbose="Local variable &apos;nb02&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="159" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="95" column="91" info="Shadowed declaration"/>
            <symbol>nb02</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb03&apos; shadows outer argument" verbose="Local variable &apos;nb03&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="160" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="95" column="110" info="Shadowed declaration"/>
            <symbol>nb03</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb10&apos; shadows outer argument" verbose="Local variable &apos;nb10&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="162" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="96" column="34" info="Shadowed declaration"/>
            <symbol>nb10</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb11&apos; shadows outer argument" verbose="Local variable &apos;nb11&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="163" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="96" column="53" info="Shadowed declaration"/>
            <symbol>nb11</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb12&apos; shadows outer argument" verbose="Local variable &apos;nb12&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="164" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="96" column="72" info="Shadowed declaration"/>
            <symbol>nb12</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;nb13&apos; shadows outer argument" verbose="Local variable &apos;nb13&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="165" column="20" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/binbcast.cpp" line="96" column="91" info="Shadowed declaration"/>
            <symbol>nb13</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;r&apos; should be passed by const reference." verbose="Parameter &apos;r&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1658" column="43" info="Function parameter &apos;r&apos; should be passed by const reference."/>
            <symbol>r</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;r&apos; should be passed by const reference." verbose="Parameter &apos;r&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1659" column="55" info="Function parameter &apos;r&apos; should be passed by const reference."/>
            <symbol>r</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;queue&apos; can be declared as reference to const" verbose="Parameter &apos;queue&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="102" column="46" info="Parameter &apos;queue&apos; can be declared as reference to const"/>
            <symbol>queue</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;dev_item&apos; can be declared as reference to const" verbose="Variable &apos;dev_item&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="900" column="24" info="Variable &apos;dev_item&apos; can be declared as reference to const"/>
            <symbol>dev_item</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;backend&apos; can be declared as reference to const" verbose="Parameter &apos;backend&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1020" column="56" info="Parameter &apos;backend&apos; can be declared as reference to const"/>
            <symbol>backend</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;key&apos; can be declared as reference to const" verbose="Variable &apos;key&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1070" column="24" info="Variable &apos;key&apos; can be declared as reference to const"/>
            <symbol>key</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;q&apos; can be declared as reference to const" verbose="Parameter &apos;q&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2681" column="58" info="Parameter &apos;q&apos; can be declared as reference to const"/>
            <symbol>q</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;max_nd_range_size&apos; can be declared as const array" verbose="Parameter &apos;max_nd_range_size&apos; can be declared as const array" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="460" column="40" info="Parameter &apos;max_nd_range_size&apos; can be declared as const array"/>
            <symbol>max_nd_range_size</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;to_ptr&apos; can be declared as pointer to const" verbose="Parameter &apos;to_ptr&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1395" column="79" info="Parameter &apos;to_ptr&apos; can be declared as pointer to const"/>
            <symbol>to_ptr</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;c&apos; can be declared as pointer to const" verbose="Parameter &apos;c&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1720" column="53" info="Parameter &apos;c&apos; can be declared as pointer to const"/>
            <symbol>c</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;c&apos; can be declared as pointer to const" verbose="Parameter &apos;c&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1790" column="63" info="Parameter &apos;c&apos; can be declared as pointer to const"/>
            <symbol>c</symbol>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;i&lt;ver.size()&apos; is redundant or &apos;i&apos; can have the value greater or equal to ver.size(). Expression &apos;ver[i]&apos; causes access out of bounds." verbose="Either the condition &apos;i&lt;ver.size()&apos; is redundant or &apos;i&apos; can have the value greater or equal to ver.size(). Expression &apos;ver[i]&apos; causes access out of bounds." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="250" column="36" info="Access out of bounds"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="245" column="22" info="Assuming that condition &apos;i&lt;ver.size()&apos; is not redundant"/>
            <symbol>ver</symbol>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;i&lt;ver.size()&apos; is redundant or &apos;i&apos; can have the value ver.size(). Expression &apos;ver[i]&apos; causes access out of bounds." verbose="Either the condition &apos;i&lt;ver.size()&apos; is redundant or &apos;i&apos; can have the value ver.size(). Expression &apos;ver[i]&apos; causes access out of bounds." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="259" column="38" info="Access out of bounds"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="258" column="15" info="i is incremented&apos;, new value is symbolic=ver.size()"/>
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="256" column="19" info="Assuming that condition &apos;i&lt;ver.size()&apos; is not redundant"/>
            <symbol>ver</symbol>
        </error>
        <error id="stlcstrStream" severity="performance" msg="Passing the result of c_str() to a stream is slow and redundant." verbose="Passing a const char* to a stream requires a call to strlen(). Solve that by directly passing the string." cwe="704" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/common.hpp" line="513" column="8"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::min_element algorithm instead of a raw loop." verbose="Consider using std::min_element algorithm instead of a raw loop." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="609" column="36"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy algorithm instead of a raw loop." verbose="Consider using std::copy algorithm instead of a raw loop." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1074" column="35"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/mman.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/mman.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="34" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="45" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/syscall.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/syscall.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="46" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/binbcast.cpp">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1167" column="21"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/common.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/common.cpp" line="15" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/common.cpp" line="16" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/common.cpp">
            <location file="ggml/src/ggml-sycl/common.cpp" line="29" column="20"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="163" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="166" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="167" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="169" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="185" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="185" column="69"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="185" column="96"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="144" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="146" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="150" column="22"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="144" column="19"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="146" column="19"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/concat.cpp">
            <location file="ggml/src/ggml-sycl/concat.cpp" line="150" column="22"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/conv.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/conv.cpp">
            <location file="ggml/src/ggml-sycl/conv.cpp" line="78" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/conv.cpp">
            <location file="ggml/src/ggml-sycl/conv.cpp" line="79" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/conv.cpp">
            <location file="ggml/src/ggml-sycl/conv.cpp" line="81" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/conv.cpp">
            <location file="ggml/src/ggml-sycl/conv.cpp" line="90" column="28"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/convert.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="24" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="49" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="51" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="70" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="94" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="121" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="148" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="182" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="211" column="15"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="212" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="242" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="262" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="298" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="385" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="450" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="498" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="559" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="581" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="609" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="633" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="661" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="692" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="722" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="752" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="785" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="807" column="30"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="212" column="18"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="580" column="21"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="581" column="29"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="583" column="23"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="580" column="19"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="581" column="27"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="583" column="19"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="608" column="21"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="609" column="28"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="611" column="23"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="608" column="19"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="609" column="26"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="611" column="19"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="632" column="21"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="633" column="27"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="635" column="23"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="632" column="19"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="633" column="25"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="635" column="19"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="660" column="21"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="661" column="29"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="663" column="23"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="660" column="19"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="661" column="27"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="663" column="19"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="691" column="21"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="692" column="27"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="694" column="23"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="691" column="19"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="692" column="25"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="694" column="19"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="721" column="21"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="722" column="27"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="724" column="23"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="721" column="19"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="722" column="25"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="724" column="19"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="751" column="21"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="752" column="27"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="754" column="23"/>
            <symbol>tid</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="751" column="19"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;x&apos; is assigned a value that is never used." verbose="Variable &apos;x&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="752" column="25"/>
            <symbol>x</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tid&apos; is assigned a value that is never used." verbose="Variable &apos;tid&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/convert.cpp">
            <location file="ggml/src/ggml-sycl/dequantize.hpp" line="754" column="19"/>
            <symbol>tid</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="0" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/common.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/common.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/presets.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/presets.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="8" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="526" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="527" column="23"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="29" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="30" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="52" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="53" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="84" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="85" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="116" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="117" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="151" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="152" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="185" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="186" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="12" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="13" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="19" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="20" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="26" column="31"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="27" column="31"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="33" column="31"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="34" column="31"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="40" column="28"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="41" column="28"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="47" column="28"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="48" column="28"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="92" column="21"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="105" column="21"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="85" column="20"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="86" column="16"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="29" column="26"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="52" column="26"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="84" column="26"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="116" column="26"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="151" column="26"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.hpp" line="185" column="27"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="12" column="26"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="13" column="26"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="19" column="26"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="34" column="31"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="92" column="21"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/cpy.cpp">
            <location file="ggml/src/ggml-sycl/cpy.cpp" line="105" column="21"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="7" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="15" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="242" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="312" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="366" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="484" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="589" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="635" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="764" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="1103" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="1108" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="1109" column="18"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="1134" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="1135" column="18"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="120" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="136" column="39"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="136" column="64"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="167" column="39"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="167" column="64"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="305" column="25"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/dmmv.cpp">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="582" column="25"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/element_wise.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/presets.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/presets.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/element_wise.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/element_wise.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/element_wise.hpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;limits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;limits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/element_wise.hpp" line="6" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/element_wise.cpp">
            <location file="ggml/src/ggml-sycl/element_wise.cpp" line="496" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/element_wise.cpp">
            <location file="ggml/src/ggml-sycl/element_wise.cpp" line="533" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/element_wise.cpp">
            <location file="ggml/src/ggml-sycl/element_wise.cpp" line="534" column="34"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/element_wise.cpp">
            <location file="ggml/src/ggml-sycl/element_wise.cpp" line="543" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/element_wise.cpp">
            <location file="ggml/src/ggml-sycl/element_wise.cpp" line="934" column="22"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/element_wise.cpp">
            <location file="ggml/src/ggml-sycl/element_wise.cpp" line="328" column="19"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/element_wise.cpp">
            <location file="ggml/src/ggml-sycl/element_wise.cpp" line="328" column="31"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="13" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="179" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="183" column="69"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="184" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="187" column="69"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="188" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="191" column="94"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="192" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="195" column="94"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="196" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="199" column="94"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="200" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="203" column="94"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="204" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="207" column="94"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="208" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="48" column="29"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="91" column="31"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/getrows.cpp">
            <location file="ggml/src/ggml-sycl/getrows.cpp" line="91" column="48"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;atomic&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;atomic&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;limits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;limits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="24" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="28" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="30" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="32" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/half_type.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/half_type.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="33" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl.h&quot; not found." verbose="Include file: &quot;ggml-sycl.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="35" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="36" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="37" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/backend.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/backend.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="39" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/common.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/common.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="40" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/element_wise.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/element_wise.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="41" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/presets.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/presets.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="42" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/gemm.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/gemm.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="43" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/set_rows.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/set_rows.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="44" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/sycl_hw.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/sycl_hw.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="45" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/getrows.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/getrows.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="46" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/quantize.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/quantize.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="47" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="48" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;use_fp16&apos; is always false" verbose="Condition &apos;use_fp16&apos; is always false" cwe="570" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1960" column="75" info="Condition &apos;use_fp16&apos; is always false"/>
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1958" column="21" info="Assignment &apos;use_fp16=false&apos;, assigned value is 0"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="portability" msg="%lu in format string (no. 2) requires &apos;unsigned long&apos; but the argument type is &apos;size_t {aka unsigned long}&apos;." verbose="%lu in format string (no. 2) requires &apos;unsigned long&apos; but the argument type is &apos;size_t {aka unsigned long}&apos;." cwe="686" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="852" column="13"/>
        </error>
        <error id="leakReturnValNotUsed" severity="error" msg="Return value of allocation function &apos;new&apos; is not stored." verbose="Return value of allocation function &apos;new&apos; is not stored." cwe="771" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1120" column="26"/>
            <symbol>new</symbol>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: host_buf" verbose="If memory allocation fails, then there is a possible null pointer dereference: host_buf" cwe="476" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="398" column="12" info="Null pointer dereference"/>
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="397" column="23" info="Assignment &apos;host_buf=(char*)malloc(size)&apos;, assigned value is 0"/>
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="397" column="38" info="Assuming allocation function fails"/>
            <symbol>host_buf</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="330" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="342" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="351" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="371" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="390" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="397" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="399" column="49"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="418" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="424" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="435" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="436" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="437" column="18"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="451" column="54"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="452" column="54"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="508" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="530" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="550" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="582" column="51"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="590" column="56"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="596" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="793" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="811" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="812" column="62"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="848" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="900" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="901" column="62"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="905" column="37"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="925" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="956" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="957" column="62"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="961" column="37"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="981" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1046" column="57"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1242" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1320" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1382" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1439" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1859" column="19"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1865" column="19"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1873" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1878" column="19"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1883" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1905" column="47"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1906" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1987" column="19"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2035" column="67"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2072" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2144" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2174" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2189" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2190" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2597" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2598" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2634" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2635" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2911" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2912" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2913" column="17"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2994" column="18"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2999" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3023" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3026" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3055" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3060" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3088" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3167" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3324" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3334" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3335" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3336" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3356" column="38"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3383" column="47"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3828" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3834" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3847" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3853" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3868" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3874" column="15"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3885" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3914" column="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4031" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4102" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4107" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4112" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4146" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4151" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4434" column="56"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4435" column="51"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4536" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4541" column="43"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2272" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2273" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2289" column="66"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2355" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2361" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2383" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2450" column="57"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2499" column="56"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2508" column="56"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1973" column="44"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2034" column="66"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3257" column="31"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3279" column="39"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3280" column="35"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3298" column="40"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3299" column="32"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2499" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2508" column="45"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1524" column="20"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2034" column="66"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3279" column="39"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3280" column="35"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and const float * which have an incompatible binary data representation." verbose="Casting between const signed char * and const float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3298" column="40"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3299" column="32"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2499" column="45"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2508" column="45"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &apos;user_number&apos;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &apos;user_number&apos;. The initialized value is overwritten before it is read." cwe="563" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="186" column="21" info="user_number is overwritten"/>
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="181" column="21" info="user_number is initialized"/>
            <symbol>user_number</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;user_number&apos; is assigned an expression that holds the same value." verbose="Variable &apos;user_number&apos; is assigned an expression that holds the same value." cwe="563" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="188" column="9"/>
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="181" column="21" info="user_number is assigned &apos;default_val&apos; here."/>
            <symbol>user_number</symbol>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="499" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="613" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="619" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="634" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="801" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1023" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1042" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1075" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1132" column="5"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4276" column="13"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4456" column="5"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;initialized&apos; can be reduced." verbose="The scope of the variable &apos;initialized&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4572" column="17"/>
            <symbol>initialized</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;size&apos; shadows outer argument" verbose="Local variable &apos;size&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="917" column="16" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="892" column="65" info="Shadowed declaration"/>
            <symbol>size</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;size&apos; shadows outer argument" verbose="Local variable &apos;size&apos; shadows outer argument" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="973" column="16" info="Shadow variable"/>
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="948" column="65" info="Shadowed declaration"/>
            <symbol>size</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;ctx&apos; can be declared as reference to const" verbose="Parameter &apos;ctx&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3109" column="62" info="Parameter &apos;ctx&apos; can be declared as reference to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;tensor_split&apos; can be declared as reference to const" verbose="Variable &apos;tensor_split&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3168" column="16" info="Variable &apos;tensor_split&apos; can be declared as reference to const"/>
            <symbol>tensor_split</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;user_device_string&apos; can be declared as pointer to const" verbose="Variable &apos;user_device_string&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="180" column="11" info="Variable &apos;user_device_string&apos; can be declared as pointer to const"/>
            <symbol>user_device_string</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="342" column="40" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;buft_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;buft_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2289" column="55" info="Variable &apos;buft_ctx&apos; can be declared as pointer to const"/>
            <symbol>buft_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;src0_ddq&apos; can be declared as pointer to const" verbose="Variable &apos;src0_ddq&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2596" column="13" info="Variable &apos;src0_ddq&apos; can be declared as pointer to const"/>
            <symbol>src0_ddq</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;src1_ddf&apos; can be declared as pointer to const" verbose="Variable &apos;src1_ddf&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2597" column="13" info="Variable &apos;src1_ddf&apos; can be declared as pointer to const"/>
            <symbol>src1_ddf</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;src0_ddq&apos; can be declared as pointer to const" verbose="Variable &apos;src0_ddq&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2633" column="13" info="Variable &apos;src0_ddq&apos; can be declared as pointer to const"/>
            <symbol>src0_ddq</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;src1_ddf&apos; can be declared as pointer to const" verbose="Variable &apos;src1_ddf&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="2634" column="13" info="Variable &apos;src1_ddf&apos; can be declared as pointer to const"/>
            <symbol>src1_ddf</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;dst&apos; can be declared as pointer to const" verbose="Parameter &apos;dst&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3117" column="43" info="Parameter &apos;dst&apos; can be declared as pointer to const"/>
            <symbol>dst</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;dst&apos; can be declared as pointer to const" verbose="Parameter &apos;dst&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3150" column="110" info="Parameter &apos;dst&apos; can be declared as pointer to const"/>
            <symbol>dst</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;dst&apos; can be declared as pointer to const" verbose="Parameter &apos;dst&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3155" column="101" info="Parameter &apos;dst&apos; can be declared as pointer to const"/>
            <symbol>dst</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;extra&apos; can be declared as pointer to const" verbose="Variable &apos;extra&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3229" column="33" info="Variable &apos;extra&apos; can be declared as pointer to const"/>
            <symbol>extra</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4146" column="40" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4151" column="40" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;buft_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;buft_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4434" column="45" info="Variable &apos;buft_ctx&apos; can be declared as pointer to const"/>
            <symbol>buft_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;sycl_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;sycl_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="4435" column="40" info="Variable &apos;sycl_ctx&apos; can be declared as pointer to const"/>
            <symbol>sycl_ctx</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;min_compute_capability&apos; is assigned a value that is never used." verbose="Variable &apos;min_compute_capability&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3180" column="32"/>
            <symbol>min_compute_capability</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;use_fp16&apos; is always true" verbose="Condition &apos;use_fp16&apos; is always true" cwe="571" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1960" column="75" info="Condition &apos;use_fp16&apos; is always true"/>
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="1956" column="21" info="Assignment &apos;use_fp16=true&apos;, assigned value is 1"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/ggml-sycl.cpp">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="402" column="49"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/gla.cpp" line="0" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/gla.cpp" line="1" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/gla.cpp">
            <location file="ggml/src/ggml-sycl/gla.cpp" line="99" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style reference casting" verbose="C-style reference casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/gla.cpp">
            <location file="ggml/src/ggml-sycl/gla.cpp" line="47" column="47"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style reference casting" verbose="C-style reference casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/gla.cpp">
            <location file="ggml/src/ggml-sycl/gla.cpp" line="48" column="47"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style reference casting" verbose="C-style reference casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/gla.cpp">
            <location file="ggml/src/ggml-sycl/gla.cpp" line="49" column="47"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/gla.cpp">
            <location file="ggml/src/ggml-sycl/gla.cpp" line="50" column="47"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="0" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;type_traits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;type_traits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="16" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="18" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/im2col.cpp">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="104" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/im2col.cpp">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="105" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/im2col.cpp">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="106" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/im2col.cpp">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="107" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/im2col.cpp">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="108" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/im2col.cpp">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="109" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/im2col.cpp">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="111" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/im2col.cpp">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="130" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/im2col.cpp">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="130" column="53"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/im2col.cpp">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="133" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/im2col.cpp">
            <location file="ggml/src/ggml-sycl/im2col.cpp" line="133" column="53"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;utility&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;utility&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/quants.hpp" line="17" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-common.h&quot; not found." verbose="Include file: &quot;ggml-common.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/quants.hpp" line="19" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/quants.hpp" line="20" column="0"/>
        </error>
        <error id="functionConst" severity="style" msg="Technically the member function &apos;reorder_vec_dot_q_sycl &lt; GGML_TYPE_Q4_K &gt;::operator()&apos; can be const." verbose="The member function &apos;reorder_vec_dot_q_sycl &lt; GGML_TYPE_Q4_K &gt;::operator()&apos; can be made a const function. Making this function &apos;const&apos; should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?" cwe="398" inconclusive="true" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="350" column="27"/>
            <symbol>reorder_vec_dot_q_sycl &lt; GGML_TYPE_Q4_K &gt;::operator()</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="336" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="432" column="36"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="654" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="673" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="692" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="713" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="734" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="753" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="777" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="805" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="808" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="809" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="865" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="873" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="874" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="882" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="900" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="954" column="32"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="1255" column="31"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="1257" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="1258" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="1260" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="68" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="153" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="233" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="337" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="435" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="510" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="646" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="753" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="801" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="846" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="936" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="992" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="1080" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="1211" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="1212" column="28"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="25" column="7"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="39" column="7"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="53" column="7"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="60" column="7"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="67" column="42"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="327" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="359" column="39"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="360" column="39"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="379" column="30"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="388" column="30"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="892" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="70" column="21"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="111" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="271" column="21"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="296" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="297" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="433" column="21"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="474" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="475" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="601" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="613" column="31"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="663" column="21"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="750" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="751" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="901" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="1045" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="1114" column="21"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="1184" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="1185" column="27"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="1187" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="1273" column="39"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="415" column="13"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="214" column="13"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="50" column="13"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;aux32&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;aux32&apos; is reassigned a value before the old one has been used." cwe="563" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="72" column="11" info="aux32 is overwritten"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="68" column="11" info="aux32 is assigned"/>
            <symbol>aux32</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;ctx&apos; can be declared as reference to const" verbose="Parameter &apos;ctx&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="2963" column="33" info="Parameter &apos;ctx&apos; can be declared as reference to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: v" verbose="Uninitialized variable: v" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="303" column="39"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="297" column="30" info="Assuming condition is false"/>
            <symbol>v</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: u" verbose="Uninitialized variable: u" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="303" column="42"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="297" column="30" info="Assuming condition is false"/>
            <symbol>u</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: u" verbose="Uninitialized variable: u" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="341" column="43"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="332" column="23" info="Assuming condition is false"/>
            <symbol>u</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: d8" verbose="Uninitialized variable: d8" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="341" column="57"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="332" column="23" info="Assuming condition is false"/>
            <symbol>d8</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: u" verbose="Uninitialized variable: u" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="393" column="47"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="382" column="27" info="Assuming condition is false"/>
            <symbol>u</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: d8" verbose="Uninitialized variable: d8" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="393" column="63"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="382" column="27" info="Assuming condition is false"/>
            <symbol>d8</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: u" verbose="Uninitialized variable: u" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="452" column="52"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="447" column="27" info="Assuming condition is false"/>
            <symbol>u</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: d8" verbose="Uninitialized variable: d8" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="452" column="64"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="447" column="27" info="Assuming condition is false"/>
            <symbol>d8</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: u" verbose="Uninitialized variable: u" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="770" column="43"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="765" column="23" info="Assuming condition is false"/>
            <symbol>u</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: d8" verbose="Uninitialized variable: d8" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="770" column="65"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="765" column="23" info="Assuming condition is false"/>
            <symbol>d8</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: u" verbose="Uninitialized variable: u" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="798" column="48"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="793" column="23" info="Assuming condition is false"/>
            <symbol>u</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: d8" verbose="Uninitialized variable: d8" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="798" column="83"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="793" column="23" info="Assuming condition is false"/>
            <symbol>d8</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: u" verbose="Uninitialized variable: u" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="905" column="48"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="896" column="23" info="Assuming condition is false"/>
            <symbol>u</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: d8" verbose="Uninitialized variable: d8" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="905" column="69"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="896" column="23" info="Assuming condition is false"/>
            <symbol>d8</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: u" verbose="Uninitialized variable: u" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="974" column="48"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="969" column="23" info="Assuming condition is false"/>
            <symbol>u</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: d8" verbose="Uninitialized variable: d8" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="974" column="69"/>
            <location file="ggml/src/ggml-sycl/vecdotq.hpp" line="969" column="23" info="Assuming condition is false"/>
            <symbol>d8</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: v" verbose="Uninitialized variable: v" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="616" column="39"/>
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="609" column="23" info="Assuming condition is false"/>
            <symbol>v</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: v" verbose="Uninitialized variable: v" cwe="457" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="770" column="39"/>
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="758" column="23" info="Assuming condition is false"/>
            <symbol>v</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bxi&apos; is assigned a value that is never used." verbose="Variable &apos;bxi&apos; is assigned a value that is never used." cwe="563" file0="ggml/src/ggml-sycl/mmq.cpp">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="975" column="32"/>
            <symbol>bxi</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="3" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="1049" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="1050" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="1077" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="1078" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="1090" column="21"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="1091" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="508" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="509" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="459" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="460" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="411" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="412" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="363" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="364" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="315" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="316" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="267" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="268" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="219" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="220" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="171" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="172" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="123" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="124" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="76" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="77" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="40" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="41" column="63"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="41" column="42"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ggml_sycl_op_mul_mat_vec_q&apos; argument 12 names different: declaration &apos;src1_padded_row_size&apos; definition &apos;src1_padded_col_size&apos;." verbose="Function &apos;ggml_sycl_op_mul_mat_vec_q&apos; argument 12 names different: declaration &apos;src1_padded_row_size&apos; definition &apos;src1_padded_col_size&apos;." cwe="628" inconclusive="true" file0="ggml/src/ggml-sycl/mmvq.cpp">
            <location file="ggml/src/ggml-sycl/mmvq.cpp" line="1028" column="97"/>
            <location file="ggml/src/ggml-sycl/mmvq.hpp" line="24" column="45"/>
            <symbol>ggml_sycl_op_mul_mat_vec_q</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/norm.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/common.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/common.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/norm.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/presets.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/presets.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/norm.cpp" line="3" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/outprod.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/outprod.cpp">
            <location file="ggml/src/ggml-sycl/outprod.cpp" line="25" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/outprod.cpp">
            <location file="ggml/src/ggml-sycl/outprod.cpp" line="26" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/outprod.cpp">
            <location file="ggml/src/ggml-sycl/outprod.cpp" line="27" column="20"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-sycl/common.hpp&quot; not found." verbose="Include file: &quot;ggml-sycl/common.hpp&quot; not found.">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="3" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;sector&gt;=sections.v[0]&apos; is always true" verbose="Condition &apos;sector&gt;=sections.v[0]&apos; is always true" cwe="571" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="149" column="21" info="Condition &apos;sector&gt;=sections.v[0]&apos; is always true"/>
            <location file="ggml/src/ggml-sycl/rope.cpp" line="146" column="16" info="Assuming that condition &apos;sector&lt;sections.v[0]&apos; is not redundant"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="360" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="361" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="363" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="374" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="375" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="376" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="377" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="378" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="379" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="380" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="394" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="398" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="411" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="411" column="63"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="414" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="414" column="68"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="423" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="423" column="68"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="427" column="29"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="427" column="64"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="436" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="436" column="70"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="440" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="440" column="65"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="449" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="449" column="63"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="452" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/rope.cpp">
            <location file="ggml/src/ggml-sycl/rope.cpp" line="452" column="68"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="152" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="153" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="161" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="174" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="186" column="33"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="197" column="89"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="200" column="89"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="203" column="89"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="206" column="89"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="209" column="89"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="212" column="94"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="107" column="30"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/set_rows.cpp">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="107" column="45"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/softmax.cpp" line="0" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/tsembd.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/tsembd.cpp">
            <location file="ggml/src/ggml-sycl/tsembd.cpp" line="62" column="28"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/tsembd.cpp">
            <location file="ggml/src/ggml-sycl/tsembd.cpp" line="63" column="21"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/tsembd.cpp">
            <location file="ggml/src/ggml-sycl/tsembd.cpp" line="22" column="26"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-sycl/tsembd.cpp">
            <location file="ggml/src/ggml-sycl/tsembd.cpp" line="22" column="36"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/src/ggml-sycl/tsembd.cpp">
            <location file="ggml/src/ggml-sycl/tsembd.cpp" line="22" column="26"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to signed char * is not portable due to different binary data representations on different platforms." cwe="704" inconclusive="true" file0="ggml/src/ggml-sycl/tsembd.cpp">
            <location file="ggml/src/ggml-sycl/tsembd.cpp" line="22" column="36"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="0" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sycl/sycl.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="1" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="184" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="185" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="186" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="187" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="188" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="189" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="190" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="218" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="231" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="240" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="241" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="242" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="243" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="244" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="245" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="246" column="24"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="247" column="20"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="275" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-sycl/wkv.cpp">
            <location file="ggml/src/ggml-sycl/wkv.cpp" line="288" column="35"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-threading.h" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-threading.cpp" line="2" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 27 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-vulkan.h&quot; not found." verbose="Include file: &quot;ggml-vulkan.h&quot; not found.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="1" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vulkan/vulkan_core.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vulkan/vulkan_core.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vulkan/vulkan.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vulkan/vulkan.hpp&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iomanip&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iomanip&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;tuple&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;tuple&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="24" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;utility&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;utility&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;limits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;limits&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="28" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unordered_map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unordered_map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="30" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="31" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;future&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;future&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="32" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="33" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="57" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="58" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-vulkan-shaders.hpp&quot; not found." verbose="Include file: &quot;ggml-vulkan-shaders.hpp&quot; not found.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="60" column="0"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If GGML_TENSOR_LOCALS is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If GGML_TENSOR_LOCALS is a macro then please configure it." file0="ggml/src/ggml-vulkan/ggml-vulkan.cpp">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="7335" column="5"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;chrono&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;chrono&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml-vulkan/ggml-vulkan.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;future&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;future&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;queue&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;queue&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;condition_variable&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;condition_variable&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/stat.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/stat.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/types.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/types.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="22" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="28" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;sys/wait.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;sys/wait.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fcntl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fcntl.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="30" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;tname==&quot;bf16&quot;&apos; is always false" verbose="Condition &apos;tname==&quot;bf16&quot;&apos; is always false" cwe="570" file0="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="457" column="99" info="Condition &apos;tname==&quot;bf16&quot;&apos; is always false"/>
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="451" column="19" info="Assuming condition &apos;tname==&quot;bf16&quot;&apos; is false"/>
        </error>
        <error id="nullPointerOutOfResources" severity="warning" msg="If resource allocation fails, then there is a possible null pointer dereference: hdr" verbose="If resource allocation fails, then there is a possible null pointer dereference: hdr" cwe="476" file0="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="843" column="13" info="Null pointer dereference"/>
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="840" column="22" info="Assignment &apos;hdr=fopen(target_hpp.c_str(),&quot;w&quot;)&apos;, assigned value is 0"/>
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="840" column="22" info="Assuming allocation function fails"/>
            <symbol>hdr</symbol>
        </error>
        <error id="nullPointerOutOfResources" severity="warning" msg="If resource allocation fails, then there is a possible null pointer dereference: src" verbose="If resource allocation fails, then there is a possible null pointer dereference: src" cwe="476" file0="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="844" column="13" info="Null pointer dereference"/>
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="841" column="22" info="Assignment &apos;src=fopen(target_cpp.c_str(),&quot;w&quot;)&apos;, assigned value is 0"/>
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="841" column="22" info="Assuming allocation function fails"/>
            <symbol>src</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;stdout_str&apos; can be reduced." verbose="The scope of the variable &apos;stdout_str&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="270" column="17"/>
            <symbol>stdout_str</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;stderr_str&apos; can be reduced." verbose="The scope of the variable &apos;stderr_str&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="270" column="29"/>
            <symbol>stderr_str</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;suffixes&apos; can be declared as const array" verbose="Variable &apos;suffixes&apos; can be declared as const array" cwe="398" file0="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="889" column="17" info="Variable &apos;suffixes&apos; can be declared as const array"/>
            <symbol>suffixes</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="190" column="11"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="262" column="13"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;direct.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;direct.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="26" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-webgpu.h&quot; not found." verbose="Include file: &quot;ggml-webgpu.h&quot; not found.">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="8" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-wgsl-shaders.hpp&quot; not found." verbose="Include file: &quot;ggml-wgsl-shaders.hpp&quot; not found.">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;webgpu/webgpu_cpp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;webgpu/webgpu_cpp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;condition_variable&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;condition_variable&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;mutex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="19" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="46" column="53"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="48" column="39"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="307" column="51"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="366" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="439" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="444" column="41"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="456" column="48"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="858" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="874" column="55"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="889" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="908" column="55"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="951" column="52"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="1044" column="42"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="889" column="14"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;params&apos; should be passed by const reference." verbose="Parameter &apos;params&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="358" column="85" info="Function parameter &apos;params&apos; should be passed by const reference."/>
            <symbol>params</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;ctx&apos; can be declared as reference to const" verbose="Parameter &apos;ctx&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="319" column="61" info="Parameter &apos;ctx&apos; can be declared as reference to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;ctx&apos; can be declared as reference to const" verbose="Parameter &apos;ctx&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="460" column="64" info="Parameter &apos;ctx&apos; can be declared as reference to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;ctx&apos; can be declared as reference to const" verbose="Parameter &apos;ctx&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="465" column="64" info="Parameter &apos;ctx&apos; can be declared as reference to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;webgpu_ctx&apos; can be declared as reference to const" verbose="Parameter &apos;webgpu_ctx&apos; can be declared as reference to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="1048" column="88" info="Parameter &apos;webgpu_ctx&apos; can be declared as reference to const"/>
            <symbol>webgpu_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="456" column="42" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;t&apos; can be declared as pointer to const" verbose="Parameter &apos;t&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="460" column="83" info="Parameter &apos;t&apos; can be declared as pointer to const"/>
            <symbol>t</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;t&apos; can be declared as pointer to const" verbose="Parameter &apos;t&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="465" column="83" info="Parameter &apos;t&apos; can be declared as pointer to const"/>
            <symbol>t</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;a&apos; can be declared as pointer to const" verbose="Parameter &apos;a&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="476" column="52" info="Parameter &apos;a&apos; can be declared as pointer to const"/>
            <symbol>a</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;b&apos; can be declared as pointer to const" verbose="Parameter &apos;b&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="476" column="69" info="Parameter &apos;b&apos; can be declared as pointer to const"/>
            <symbol>b</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;backend_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;backend_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="799" column="35" info="Variable &apos;backend_ctx&apos; can be declared as pointer to const"/>
            <symbol>backend_ctx</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;tensor&apos; can be declared as pointer to const. However it seems that &apos;ggml_backend_webgpu_buffer_memset_tensor&apos; is a callback function, if &apos;tensor&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;tensor&apos; can be declared as pointer to const. However it seems that &apos;ggml_backend_webgpu_buffer_memset_tensor&apos; is a callback function, if &apos;tensor&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="846" column="76" info="Parameter &apos;tensor&apos; can be declared as pointer to const"/>
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="959" column="30" info="You might need to cast the function pointer here"/>
            <symbol>tensor</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;tensor&apos; can be declared as pointer to const. However it seems that &apos;ggml_backend_webgpu_buffer_set_tensor&apos; is a callback function, if &apos;tensor&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;tensor&apos; can be declared as pointer to const. However it seems that &apos;ggml_backend_webgpu_buffer_set_tensor&apos; is a callback function, if &apos;tensor&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="868" column="73" info="Parameter &apos;tensor&apos; can be declared as pointer to const"/>
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="960" column="30" info="You might need to cast the function pointer here"/>
            <symbol>tensor</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;dev_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;dev_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="1214" column="42" info="Variable &apos;dev_ctx&apos; can be declared as pointer to const"/>
            <symbol>dev_ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="1284" column="42" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="1399" column="39" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="1404" column="39" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;reg_ctx&apos; can be declared as pointer to const" verbose="Variable &apos;reg_ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="1414" column="39" info="Variable &apos;reg_ctx&apos; can be declared as pointer to const"/>
            <symbol>reg_ctx</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-webgpu/ggml-webgpu.cpp">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="346" column="35"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-zdnn.h&quot; not found." verbose="Include file: &quot;ggml-zdnn.h&quot; not found.">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend-impl.h&quot; not found." verbose="Include file: &quot;ggml-backend-impl.h&quot; not found.">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-zdnn/common.hpp&quot; not found." verbose="Include file: &quot;ggml-zdnn/common.hpp&quot; not found.">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-zdnn/mmf.hpp&quot; not found." verbose="Include file: &quot;ggml-zdnn/mmf.hpp&quot; not found.">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-zdnn/utils.hpp&quot; not found." verbose="Include file: &quot;ggml-zdnn/utils.hpp&quot; not found.">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;csignal&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;csignal&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;unistd.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="13" column="0"/>
        </error>
        <error id="invalidLifetime" severity="error" msg="Using object that points to local variable &apos;zdnn_bias_buffer&apos; that is out of scope." verbose="Using object that points to local variable &apos;zdnn_bias_buffer&apos; that is out of scope." cwe="562" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="263" column="37"/>
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="241" column="59" info="Variable created here."/>
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="263" column="38" info="Passed to &apos;move&apos;."/>
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="254" column="58" info="Raw pointer to smart pointer created here."/>
        </error>
        <error id="invalidLifetime" severity="error" msg="Using object that points to local variable &apos;zdnn_bias_buffer&apos; that is out of scope." verbose="Using object that points to local variable &apos;zdnn_bias_buffer&apos; that is out of scope." cwe="562" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="263" column="38"/>
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="241" column="59" info="Variable created here."/>
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="254" column="58" info="Raw pointer to smart pointer created here."/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="45" column="50"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="46" column="50"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="175" column="50"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="200" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="214" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="224" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="242" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="275" column="12"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="281" column="12"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="283" column="40"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="294" column="18"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="300" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="337" column="50"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="404" column="39"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="433" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="492" column="30"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="512" column="50"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="72" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="271" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="324" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="367" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="373" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="400" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="440" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="450" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="456" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="469" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="502" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="508" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="521" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="549" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="558" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="566" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="580" column="5"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="590" column="5"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;ctx&apos; can be declared as pointer to const" verbose="Parameter &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="28" column="33" info="Parameter &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx&apos; can be declared as pointer to const" verbose="Variable &apos;ctx&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="214" column="40" info="Variable &apos;ctx&apos; can be declared as pointer to const"/>
            <symbol>ctx</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx_dev&apos; can be declared as pointer to const" verbose="Variable &apos;ctx_dev&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="337" column="40" info="Variable &apos;ctx_dev&apos; can be declared as pointer to const"/>
            <symbol>ctx_dev</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;ctx_dev&apos; can be declared as pointer to const" verbose="Variable &apos;ctx_dev&apos; can be declared as pointer to const" cwe="398" file0="ggml/src/ggml-zdnn/ggml-zdnn.cpp">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="512" column="40" info="Variable &apos;ctx_dev&apos; can be declared as pointer to const"/>
            <symbol>ctx_dev</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-zdnn/mmf.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-zdnn/common.hpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-impl.h&quot; not found." verbose="Include file: &quot;ggml-impl.h&quot; not found.">
            <location file="ggml/src/ggml-zdnn/common.hpp" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;zdnn.h&quot; not found." verbose="Include file: &quot;zdnn.h&quot; not found.">
            <location file="ggml/src/ggml-zdnn/common.hpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-zdnn/common.hpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml-zdnn/common.hpp" line="10" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/mmf.cpp">
            <location file="ggml/src/ggml-zdnn/mmf.cpp" line="32" column="48"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/mmf.cpp">
            <location file="ggml/src/ggml-zdnn/mmf.cpp" line="33" column="48"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/mmf.cpp">
            <location file="ggml/src/ggml-zdnn/mmf.cpp" line="34" column="48"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/src/ggml-zdnn/mmf.cpp">
            <location file="ggml/src/ggml-zdnn/mmf.cpp" line="35" column="48"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml-zdnn/utils.cpp" line="1" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 34 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="ggml/src/ggml.c" line="0" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/ggml.c" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/src/ggml.c" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/ggml.c" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;alloca.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;alloca.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;errno.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;errno.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="24" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;time.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;time.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="28" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdint.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;inttypes.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;inttypes.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="30" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="31" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;float.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="32" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;limits.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;limits.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="33" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdarg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdarg.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="34" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;signal.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;signal.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.c" line="35" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.cpp" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;exception&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;exception&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/ggml.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/src/gguf.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/src/gguf.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;gguf.h&quot; not found." verbose="Include file: &quot;gguf.h&quot; not found.">
            <location file="ggml/src/gguf.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/gguf.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstddef&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/gguf.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/gguf.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/gguf.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/gguf.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/gguf.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/gguf.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;new&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;new&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/gguf.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdexcept&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/gguf.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/gguf.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/src/gguf.cpp" line="16" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-arange.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-arange.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/tests/test-arange.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/tests/test-arange.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-arange.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-arange.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-arange.cpp" line="16" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!backend&apos; is always true" verbose="Condition &apos;!backend&apos; is always true" cwe="571" file0="ggml/tests/test-arange.cpp">
            <location file="ggml/tests/test-arange.cpp" line="54" column="13" info="Condition &apos;!backend&apos; is always true"/>
            <location file="ggml/tests/test-arange.cpp" line="23" column="34" info="Assignment &apos;backend=NULL&apos;, assigned value is 0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n_threads&apos; can be reduced." verbose="The scope of the variable &apos;n_threads&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-arange.cpp">
            <location file="ggml/tests/test-arange.cpp" line="73" column="13"/>
            <symbol>n_threads</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/tests/test-arange.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/tests/test-arange.cpp" line="11" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!backend&apos; is always true" verbose="Condition &apos;!backend&apos; is always true" cwe="571" file0="ggml/tests/test-arange.cpp">
            <location file="ggml/tests/test-arange.cpp" line="37" column="13" info="Condition &apos;!backend&apos; is always true"/>
            <location file="ggml/tests/test-arange.cpp" line="23" column="34" info="Assignment &apos;backend=NULL&apos;, assigned value is 0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-alloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-alloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-backend.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-backend.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-cpp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-cpp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="21" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="23" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="24" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cfloat&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cfloat&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="25" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="26" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdarg&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdarg&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="27" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdint&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="28" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="29" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdlib&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="30" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="31" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ctime&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ctime&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="32" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;future&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;future&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="33" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="34" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="35" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;regex&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="36" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;set&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;set&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="37" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="38" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string_view&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string_view&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="39" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="40" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-backend-ops.cpp" line="41" column="0"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;test_summary_info::tests_passed&apos; is not initialized in the constructor." verbose="Member variable &apos;test_summary_info::tests_passed&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="557" column="5"/>
            <symbol>test_summary_info::tests_passed</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;test_summary_info::tests_total&apos; is not initialized in the constructor." verbose="Member variable &apos;test_summary_info::tests_total&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="557" column="5"/>
            <symbol>test_summary_info::tests_total</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;testing_start_info::device_count&apos; is not initialized in the constructor." verbose="Member variable &apos;testing_start_info::device_count&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="568" column="5"/>
            <symbol>testing_start_info::device_count</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;backend_init_info::device_index&apos; is not initialized in the constructor." verbose="Member variable &apos;backend_init_info::device_index&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="584" column="5"/>
            <symbol>backend_init_info::device_index</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;backend_init_info::total_devices&apos; is not initialized in the constructor." verbose="Member variable &apos;backend_init_info::total_devices&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="584" column="5"/>
            <symbol>backend_init_info::total_devices</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;backend_status_info::status&apos; is not initialized in the constructor." verbose="Member variable &apos;backend_status_info::status&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="604" column="5"/>
            <symbol>backend_status_info::status</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;overall_summary_info::backends_passed&apos; is not initialized in the constructor." verbose="Member variable &apos;overall_summary_info::backends_passed&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="616" column="5"/>
            <symbol>overall_summary_info::backends_passed</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;overall_summary_info::backends_total&apos; is not initialized in the constructor." verbose="Member variable &apos;overall_summary_info::backends_total&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="616" column="5"/>
            <symbol>overall_summary_info::backends_total</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;overall_summary_info::all_passed&apos; is not initialized in the constructor." verbose="Member variable &apos;overall_summary_info::all_passed&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="616" column="5"/>
            <symbol>overall_summary_info::all_passed</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1691" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1728" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1801" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1846" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1905" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1968" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2024" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2077" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2175" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2223" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2285" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2320" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2371" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2409" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2485" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2534" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2575" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2652" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2706" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2741" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2776" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2804" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2838" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2878" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2914" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2961" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3005" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3060" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3088" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3145" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3175" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3204" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3255" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3367" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3451" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3487" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3516" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3556" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3592" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3635" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3680" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3714" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3752" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3802" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3841" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3966" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3999" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4032" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4074" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4125" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4211" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4261" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4328" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4371" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4422" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4470" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4518" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4549" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4584" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4616" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4648" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4676" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4711" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4741" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4767" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4799" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4832" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4866" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4893" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4919" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4942" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4968" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5018" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5100" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5148" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5182" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5226" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="uninitDerivedMemberVar" severity="warning" msg="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?" verbose="Member variable &apos;test_case::mode&apos; is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5298" column="5"/>
            <symbol>test_case::mode</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;console_printer::print_test_console&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;console_printer::print_test_console&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="764" column="10"/>
            <symbol>console_printer::print_test_console</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;console_printer::print_perf_console&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;console_printer::print_perf_console&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="781" column="10"/>
            <symbol>console_printer::print_perf_console</symbol>
        </error>
        <error id="functionStatic" severity="performance" msg="Technically the member function &apos;console_printer::print_support_console&apos; can be static (but you may consider moving to unnamed namespace)." verbose="The member function &apos;console_printer::print_support_console&apos; can be made a static function. Making a function static can bring a performance benefit since no &apos;this&apos; instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace." cwe="398" inconclusive="true" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="823" column="10"/>
            <symbol>console_printer::print_support_console</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The struct &apos;test_rope&apos; defines member variable with name &apos;mode&apos; also defined in its parent struct &apos;test_case&apos;." verbose="The struct &apos;test_rope&apos; defines member variable with name &apos;mode&apos; also defined in its parent struct &apos;test_case&apos;." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3827" column="9" info="Derived variable &apos;test_rope::mode&apos;"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="1011" column="15" info="Parent variable &apos;test_case::mode&apos;"/>
            <symbol>test_rope</symbol>
            <symbol>mode</symbol>
            <symbol>test_case</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The struct &apos;test_upscale&apos; defines member variable with name &apos;mode&apos; also defined in its parent struct &apos;test_case&apos;." verbose="The struct &apos;test_upscale&apos; defines member variable with name &apos;mode&apos; also defined in its parent struct &apos;test_case&apos;." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4610" column="27" info="Derived variable &apos;test_upscale::mode&apos;"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="1011" column="15" info="Parent variable &apos;test_case::mode&apos;"/>
            <symbol>test_upscale</symbol>
            <symbol>mode</symbol>
            <symbol>test_case</symbol>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The struct &apos;test_interpolate&apos; defines member variable with name &apos;mode&apos; also defined in its parent struct &apos;test_case&apos;." verbose="The struct &apos;test_interpolate&apos; defines member variable with name &apos;mode&apos; also defined in its parent struct &apos;test_case&apos;." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4642" column="20" info="Derived variable &apos;test_interpolate::mode&apos;"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="1011" column="15" info="Parent variable &apos;test_case::mode&apos;"/>
            <symbol>test_interpolate</symbol>
            <symbol>mode</symbol>
            <symbol>test_case</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;testing_start_info&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;testing_start_info&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="570" column="5"/>
            <symbol>testing_start_info</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_example&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_example&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1691" column="5"/>
            <symbol>test_example</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_unary&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_unary&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1728" column="5"/>
            <symbol>test_unary</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_glu&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_glu&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1801" column="5"/>
            <symbol>test_glu</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_glu_split&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_glu_split&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1846" column="5"/>
            <symbol>test_glu_split</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_swiglu_oai&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_swiglu_oai&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1905" column="5"/>
            <symbol>test_swiglu_oai</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_get_rows&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_get_rows&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1968" column="5"/>
            <symbol>test_get_rows</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_get_rows_back&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_get_rows_back&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2024" column="5"/>
            <symbol>test_get_rows_back</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_argmax&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_argmax&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2175" column="5"/>
            <symbol>test_argmax</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_count_equal&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_count_equal&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2223" column="5"/>
            <symbol>test_count_equal</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_repeat&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_repeat&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2285" column="5"/>
            <symbol>test_repeat</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_repeat_back&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_repeat_back&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2320" column="5"/>
            <symbol>test_repeat_back</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_dup&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_dup&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2371" column="5"/>
            <symbol>test_dup</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_set&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_set&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2409" column="5"/>
            <symbol>test_set</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_cpy&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_cpy&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2485" column="5"/>
            <symbol>test_cpy</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_cont&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_cont&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2534" column="5"/>
            <symbol>test_cont</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_bin_bcast&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_bin_bcast&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2575" column="5"/>
            <symbol>test_bin_bcast</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_add_id&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_add_id&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2652" column="5"/>
            <symbol>test_add_id</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_add1&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_add1&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2706" column="5"/>
            <symbol>test_add1</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_scale&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_scale&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2741" column="5"/>
            <symbol>test_scale</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_softcap&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_softcap&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2776" column="5"/>
            <symbol>test_softcap</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_silu_back&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_silu_back&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2804" column="5"/>
            <symbol>test_silu_back</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_norm&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_norm&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2838" column="5"/>
            <symbol>test_norm</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_norm_mul_add&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_norm_mul_add&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2878" column="5"/>
            <symbol>test_norm_mul_add</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_rms_norm&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_rms_norm&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2914" column="5"/>
            <symbol>test_rms_norm</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_rms_norm_back&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_rms_norm_back&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2961" column="5"/>
            <symbol>test_rms_norm_back</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_rms_norm_mul_add&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_rms_norm_mul_add&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3005" column="5"/>
            <symbol>test_rms_norm_mul_add</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_ssm_conv&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_ssm_conv&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3060" column="5"/>
            <symbol>test_ssm_conv</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_ssm_scan&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_ssm_scan&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3088" column="5"/>
            <symbol>test_ssm_scan</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_rwkv_wkv6&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_rwkv_wkv6&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3145" column="5"/>
            <symbol>test_rwkv_wkv6</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_gla&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_gla&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3175" column="5"/>
            <symbol>test_gla</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_rwkv_wkv7&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_rwkv_wkv7&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3204" column="5"/>
            <symbol>test_rwkv_wkv7</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_mul_mat&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_mul_mat&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3255" column="5"/>
            <symbol>test_mul_mat</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_mul_mat_id&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_mul_mat_id&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3367" column="5"/>
            <symbol>test_mul_mat_id</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_out_prod&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_out_prod&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3451" column="5"/>
            <symbol>test_out_prod</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_sqr&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_sqr&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3487" column="5"/>
            <symbol>test_sqr</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_sqrt&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_sqrt&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3516" column="5"/>
            <symbol>test_sqrt</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_log&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_log&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3556" column="5"/>
            <symbol>test_log</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_sin&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_sin&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3592" column="5"/>
            <symbol>test_sin</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_cos&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_cos&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3635" column="5"/>
            <symbol>test_cos</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_clamp&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_clamp&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3680" column="5"/>
            <symbol>test_clamp</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_diag_mask_inf&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_diag_mask_inf&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3714" column="5"/>
            <symbol>test_diag_mask_inf</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_soft_max&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_soft_max&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3752" column="5"/>
            <symbol>test_soft_max</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_soft_max_back&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_soft_max_back&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3802" column="5"/>
            <symbol>test_soft_max_back</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_rope&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_rope&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3841" column="5"/>
            <symbol>test_rope</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_pool2d&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_pool2d&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3966" column="5"/>
            <symbol>test_pool2d</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_conv_transpose_1d&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_conv_transpose_1d&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3999" column="5"/>
            <symbol>test_conv_transpose_1d</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_conv_transpose_2d&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_conv_transpose_2d&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4032" column="5"/>
            <symbol>test_conv_transpose_2d</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_im2col&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_im2col&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4074" column="5"/>
            <symbol>test_im2col</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_im2col_3d&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_im2col_3d&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4125" column="5"/>
            <symbol>test_im2col_3d</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_conv_2d&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_conv_2d&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4211" column="5"/>
            <symbol>test_conv_2d</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_conv_2d_dw&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_conv_2d_dw&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4261" column="5"/>
            <symbol>test_conv_2d_dw</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_concat&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_concat&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4371" column="5"/>
            <symbol>test_concat</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_argsort&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_argsort&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4422" column="5"/>
            <symbol>test_argsort</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_topk_moe&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_topk_moe&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4470" column="5"/>
            <symbol>test_topk_moe</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_sum&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_sum&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4518" column="5"/>
            <symbol>test_sum</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_sum_rows&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_sum_rows&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4549" column="5"/>
            <symbol>test_sum_rows</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_mean&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_mean&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4584" column="5"/>
            <symbol>test_mean</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_upscale&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_upscale&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4616" column="5"/>
            <symbol>test_upscale</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_interpolate&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_interpolate&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4648" column="5"/>
            <symbol>test_interpolate</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_group_norm&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_group_norm&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4676" column="5"/>
            <symbol>test_group_norm</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_group_norm_mul_add&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_group_norm_mul_add&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4711" column="5"/>
            <symbol>test_group_norm_mul_add</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_l2_norm&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_l2_norm&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4741" column="5"/>
            <symbol>test_l2_norm</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_acc&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_acc&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4767" column="5"/>
            <symbol>test_acc</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_pad&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_pad&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4799" column="5"/>
            <symbol>test_pad</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_pad_ext&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_pad_ext&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4832" column="5"/>
            <symbol>test_pad_ext</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_pad_reflect_1d&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_pad_reflect_1d&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4866" column="5"/>
            <symbol>test_pad_reflect_1d</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_roll&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_roll&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4893" column="5"/>
            <symbol>test_roll</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_arange&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_arange&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4919" column="5"/>
            <symbol>test_arange</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_timestep_embedding&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_timestep_embedding&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4942" column="5"/>
            <symbol>test_timestep_embedding</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_leaky_relu&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_leaky_relu&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4968" column="5"/>
            <symbol>test_leaky_relu</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_flash_attn_ext&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_flash_attn_ext&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5018" column="5"/>
            <symbol>test_flash_attn_ext</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_cross_entropy_loss&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_cross_entropy_loss&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5100" column="5"/>
            <symbol>test_cross_entropy_loss</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_cross_entropy_loss_back&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_cross_entropy_loss_back&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5148" column="5"/>
            <symbol>test_cross_entropy_loss_back</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_opt_step_adamw&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_opt_step_adamw&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5182" column="5"/>
            <symbol>test_opt_step_adamw</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_opt_step_sgd&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_opt_step_sgd&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5226" column="5"/>
            <symbol>test_opt_step_sgd</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_llm&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_llm&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5298" column="5"/>
            <symbol>test_llm</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_llama&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_llama&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5423" column="5"/>
            <symbol>test_llama</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;test_falcon&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;test_falcon&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5547" column="5"/>
            <symbol>test_falcon</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="6570" column="37" info="Second condition"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="6564" column="37" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="6584" column="37" info="Second condition"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="6570" column="37" info="First condition"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;output_printer&apos; is always true" verbose="Condition &apos;output_printer&apos; is always true" cwe="571" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="7127" column="9" info="Condition &apos;output_printer&apos; is always true"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;output_printer&apos; is redundant or there is possible null pointer dereference: output_printer." verbose="Either the condition &apos;output_printer&apos; is redundant or there is possible null pointer dereference: output_printer." cwe="476" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="7185" column="5" info="Null pointer dereference"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="7181" column="9" info="Assuming that condition &apos;output_printer&apos; is not redundant"/>
            <symbol>output_printer</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="165" column="46"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1173" column="38"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="153" column="57"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="155" column="57"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="157" column="39"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="159" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="161" column="46"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="163" column="46"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between unsigned char * and float * which have an incompatible binary data representation." verbose="Casting between unsigned char * and float * which have an incompatible binary data representation." cwe="704" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="157" column="39"/>
        </error>
        <error id="unreachableCode" severity="style" msg="Statements following &apos;return&apos; will never be executed." verbose="Statements following &apos;return&apos; will never be executed." cwe="561" inconclusive="true" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1229" column="13"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;gf&apos; shadows outer variable" verbose="Local variable &apos;gf&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1293" column="23" info="Shadow variable"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="1006" column="19" info="Shadowed declaration"/>
            <symbol>gf</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;status&apos; shadows outer variable" verbose="Local variable &apos;status&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1352" column="25" info="Shadow variable"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="1297" column="21" info="Shadowed declaration"/>
            <symbol>status</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;b&apos; shadows outer variable" verbose="Local variable &apos;b&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3387" column="23" info="Shadow variable"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="3348" column="16" info="Shadowed declaration"/>
            <symbol>b</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;mask&apos; shadows outer variable" verbose="Local variable &apos;mask&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3767" column="23" info="Shadow variable"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="3735" column="16" info="Shadowed declaration"/>
            <symbol>mask</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;sinks&apos; shadows outer variable" verbose="Local variable &apos;sinks&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3773" column="23" info="Shadow variable"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="3736" column="16" info="Shadowed declaration"/>
            <symbol>sinks</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;s1&apos; shadows outer variable" verbose="Local variable &apos;s1&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5988" column="37" info="Shadow variable"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="5932" column="14" info="Shadowed declaration"/>
            <symbol>s1</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;p0&apos; shadows outer variable" verbose="Local variable &apos;p0&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5989" column="37" info="Shadow variable"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="5933" column="14" info="Shadowed declaration"/>
            <symbol>p0</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;d0&apos; shadows outer variable" verbose="Local variable &apos;d0&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5990" column="37" info="Shadow variable"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="5935" column="14" info="Shadowed declaration"/>
            <symbol>d0</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;d1&apos; shadows outer variable" verbose="Local variable &apos;d1&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5990" column="46" info="Shadow variable"/>
            <location file="ggml/tests/test-backend-ops.cpp" line="5936" column="14" info="Shadowed declaration"/>
            <symbol>d1</symbol>
        </error>
        <error id="redundantCopyLocalConst" severity="performance" msg="Use const reference for &apos;fields&apos; to avoid unnecessary data copying." verbose="The const variable &apos;fields&apos; is assigned a copy of the data. You can avoid the unnecessary data copying by converting &apos;fields&apos; to const reference." cwe="398" inconclusive="true" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="851" column="34"/>
            <symbol>fields</symbol>
        </error>
        <error id="redundantCopyLocalConst" severity="performance" msg="Use const reference for &apos;fields&apos; to avoid unnecessary data copying." verbose="The const variable &apos;fields&apos; is assigned a copy of the data. You can avoid the unnecessary data copying by converting &apos;fields&apos; to const reference." cwe="398" inconclusive="true" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="862" column="34"/>
            <symbol>fields</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1692" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2176" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2224" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2535" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2707" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne_b&apos; should be passed by const reference." verbose="Parameter &apos;ne_b&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3062" column="36" info="Function parameter &apos;ne_b&apos; should be passed by const reference."/>
            <symbol>ne_b</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3488" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3517" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3557" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3593" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="3636" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4519" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4585" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne_b&apos; should be passed by const reference." verbose="Parameter &apos;ne_b&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4769" column="36" info="Function parameter &apos;ne_b&apos; should be passed by const reference."/>
            <symbol>ne_b</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5101" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5149" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5183" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5227" column="36" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="6145" column="74" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;grad&apos; can be declared as pointer to const" verbose="Variable &apos;grad&apos; can be declared as pointer to const" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1558" column="34" info="Variable &apos;grad&apos; can be declared as pointer to const"/>
            <symbol>grad</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;ne&apos; can be declared as const array" verbose="Variable &apos;ne&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="4897" column="17" info="Variable &apos;ne&apos; can be declared as const array"/>
            <symbol>ne</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;ne&apos; can be declared as const array" verbose="Variable &apos;ne&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5028" column="21" info="Variable &apos;ne&apos; can be declared as const array"/>
            <symbol>ne</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="210" column="47"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="1567" column="44"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="6767" column="24"/>
        </error>
        <error id="truncLongCastAssignment" severity="style" msg="float result is assigned to double variable. If the variable is double to avoid loss of information, then you have loss of information." verbose="float result is assigned to double variable. If the variable is double to avoid loss of information, then there is loss of information. To avoid loss of information you must cast a calculation operand to double, for example &apos;l = a * b;&apos; =&gt; &apos;l = (double)a * b;&apos;." cwe="197" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="2463" column="33"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="5918" column="24"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="307" column="14"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms." verbose="Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms." cwe="704" file0="ggml/tests/test-backend-ops.cpp">
            <location file="ggml/tests/test-backend-ops.cpp" line="307" column="14"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/tests/test-cont.c" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-cont.c" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-cont.c" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-cont.c" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-cont.c" line="10" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!backend&apos; is always true" verbose="Condition &apos;!backend&apos; is always true" cwe="571" file0="ggml/tests/test-cont.c">
            <location file="ggml/tests/test-cont.c" line="39" column="9" info="Condition &apos;!backend&apos; is always true"/>
            <location file="ggml/tests/test-cont.c" line="32" column="30" info="Assignment &apos;backend=NULL&apos;, assigned value is 0"/>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: buffer" verbose="If memory allocation fails, then there is a possible null pointer dereference: buffer" cwe="476" inconclusive="true" file0="ggml/tests/test-cont.c">
            <location file="ggml/tests/test-cont.c" line="94" column="28" info="Null pointer dereference"/>
            <location file="ggml/tests/test-cont.c" line="90" column="31" info="Assignment &apos;buffer=malloc(bsize)&apos;, assigned value is 0"/>
            <location file="ggml/tests/test-cont.c" line="90" column="31" info="Assuming allocation function fails"/>
            <symbol>buffer</symbol>
        </error>
        <error id="nullPointerOutOfMemory" severity="warning" msg="If memory allocation fails, then there is a possible null pointer dereference: buffer" verbose="If memory allocation fails, then there is a possible null pointer dereference: buffer" cwe="476" inconclusive="true" file0="ggml/tests/test-cont.c">
            <location file="ggml/tests/test-cont.c" line="106" column="46" info="Null pointer dereference"/>
            <location file="ggml/tests/test-cont.c" line="102" column="37" info="Assignment &apos;buffer=malloc(bsize)&apos;, assigned value is 0"/>
            <location file="ggml/tests/test-cont.c" line="102" column="37" info="Assuming allocation function fails"/>
            <symbol>buffer</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_out&apos; can be declared as const array" verbose="Variable &apos;expected_out&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-cont.c">
            <location file="ggml/tests/test-cont.c" line="135" column="11" info="Variable &apos;expected_out&apos; can be declared as const array"/>
            <symbol>expected_out</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buf_bf16&apos; is assigned a value that is never used." verbose="Variable &apos;buf_bf16&apos; is assigned a value that is never used." cwe="563" file0="ggml/tests/test-cont.c">
            <location file="ggml/tests/test-cont.c" line="133" column="28"/>
            <symbol>buf_bf16</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/tests/test-cont.c" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="21" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n_threads&apos; can be reduced." verbose="The scope of the variable &apos;n_threads&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-conv-transpose-1d.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="372" column="9"/>
            <symbol>n_threads</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv1d_0&apos; can be declared as const array" verbose="Variable &apos;expected_conv1d_0&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv-transpose-1d.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="422" column="11" info="Variable &apos;expected_conv1d_0&apos; can be declared as const array"/>
            <symbol>expected_conv1d_0</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv1d_1&apos; can be declared as const array" verbose="Variable &apos;expected_conv1d_1&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv-transpose-1d.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="445" column="11" info="Variable &apos;expected_conv1d_1&apos; can be declared as const array"/>
            <symbol>expected_conv1d_1</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv1d_2&apos; can be declared as const array" verbose="Variable &apos;expected_conv1d_2&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv-transpose-1d.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="464" column="11" info="Variable &apos;expected_conv1d_2&apos; can be declared as const array"/>
            <symbol>expected_conv1d_2</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv1d_3&apos; can be declared as const array" verbose="Variable &apos;expected_conv1d_3&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv-transpose-1d.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="483" column="11" info="Variable &apos;expected_conv1d_3&apos; can be declared as const array"/>
            <symbol>expected_conv1d_3</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv1d_4&apos; can be declared as const array" verbose="Variable &apos;expected_conv1d_4&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv-transpose-1d.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="503" column="11" info="Variable &apos;expected_conv1d_4&apos; can be declared as const array"/>
            <symbol>expected_conv1d_4</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv1d_5&apos; can be declared as const array" verbose="Variable &apos;expected_conv1d_5&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv-transpose-1d.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="524" column="11" info="Variable &apos;expected_conv1d_5&apos; can be declared as const array"/>
            <symbol>expected_conv1d_5</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv1d_6&apos; can be declared as const array" verbose="Variable &apos;expected_conv1d_6&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv-transpose-1d.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="545" column="11" info="Variable &apos;expected_conv1d_6&apos; can be declared as const array"/>
            <symbol>expected_conv1d_6</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv1d_7&apos; can be declared as const array" verbose="Variable &apos;expected_conv1d_7&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv-transpose-1d.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="567" column="11" info="Variable &apos;expected_conv1d_7&apos; can be declared as const array"/>
            <symbol>expected_conv1d_7</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-conv-transpose.c" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-conv-transpose.c" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv-transpose.c" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv-transpose.c" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv-transpose.c" line="6" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;expected_out_1&apos; can be reduced." verbose="The scope of the variable &apos;expected_out_1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-conv-transpose.c">
            <location file="ggml/tests/test-conv-transpose.c" line="77" column="11"/>
            <symbol>expected_out_1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;expected_out_2&apos; can be reduced." verbose="The scope of the variable &apos;expected_out_2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-conv-transpose.c">
            <location file="ggml/tests/test-conv-transpose.c" line="82" column="11"/>
            <symbol>expected_out_2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;expected_out_3&apos; can be reduced." verbose="The scope of the variable &apos;expected_out_3&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-conv-transpose.c">
            <location file="ggml/tests/test-conv-transpose.c" line="87" column="11"/>
            <symbol>expected_out_3</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;expected_out_1&apos; can be reduced." verbose="The scope of the variable &apos;expected_out_1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-conv-transpose.c">
            <location file="ggml/tests/test-conv-transpose.c" line="137" column="11"/>
            <symbol>expected_out_1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;expected_out_2&apos; can be reduced." verbose="The scope of the variable &apos;expected_out_2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-conv-transpose.c">
            <location file="ggml/tests/test-conv-transpose.c" line="155" column="11"/>
            <symbol>expected_out_2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;expected_out_3&apos; can be reduced." verbose="The scope of the variable &apos;expected_out_3&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-conv-transpose.c">
            <location file="ggml/tests/test-conv-transpose.c" line="176" column="11"/>
            <symbol>expected_out_3</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="21" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n_threads&apos; can be reduced." verbose="The scope of the variable &apos;n_threads&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-conv1d-dw-c1.cpp">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="171" column="9"/>
            <symbol>n_threads</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv1d_dw&apos; can be declared as const array" verbose="Variable &apos;expected_conv1d_dw&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv1d-dw-c1.cpp">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="221" column="11" info="Variable &apos;expected_conv1d_dw&apos; can be declared as const array"/>
            <symbol>expected_conv1d_dw</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;OC&apos; is assigned a value that is never used." verbose="Variable &apos;OC&apos; is assigned a value that is never used." cwe="563" file0="ggml/tests/test-conv1d-dw-c1.cpp">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="40" column="27"/>
            <symbol>OC</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;OC&apos; is assigned a value that is never used." verbose="Variable &apos;OC&apos; is assigned a value that is never used." cwe="563" file0="ggml/tests/test-conv1d-dw-c1.cpp">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="40" column="24"/>
            <symbol>OC</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="21" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n_threads&apos; can be reduced." verbose="The scope of the variable &apos;n_threads&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-conv1d-dw-c2.cpp">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="171" column="9"/>
            <symbol>n_threads</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv1d_dw&apos; can be declared as const array" verbose="Variable &apos;expected_conv1d_dw&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv1d-dw-c2.cpp">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="221" column="11" info="Variable &apos;expected_conv1d_dw&apos; can be declared as const array"/>
            <symbol>expected_conv1d_dw</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;OC&apos; is assigned a value that is never used." verbose="Variable &apos;OC&apos; is assigned a value that is never used." cwe="563" file0="ggml/tests/test-conv1d-dw-c2.cpp">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="40" column="27"/>
            <symbol>OC</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;OC&apos; is assigned a value that is never used." verbose="Variable &apos;OC&apos; is assigned a value that is never used." cwe="563" file0="ggml/tests/test-conv1d-dw-c2.cpp">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="40" column="24"/>
            <symbol>OC</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-conv1d.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-conv1d.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/tests/test-conv1d.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/tests/test-conv1d.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv1d.cpp" line="21" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n_threads&apos; can be reduced." verbose="The scope of the variable &apos;n_threads&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-conv1d.cpp">
            <location file="ggml/tests/test-conv1d.cpp" line="178" column="9"/>
            <symbol>n_threads</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv1d&apos; can be declared as const array" verbose="Variable &apos;expected_conv1d&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv1d.cpp">
            <location file="ggml/tests/test-conv1d.cpp" line="234" column="11" info="Variable &apos;expected_conv1d&apos; can be declared as const array"/>
            <symbol>expected_conv1d</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_im2col&apos; can be declared as const array" verbose="Variable &apos;expected_im2col&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv1d.cpp">
            <location file="ggml/tests/test-conv1d.cpp" line="248" column="14" info="Variable &apos;expected_im2col&apos; can be declared as const array"/>
            <symbol>expected_im2col</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/tests/test-conv1d.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/tests/test-conv1d.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d-dw.cpp" line="1" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-cpu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-cpu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d-dw.cpp" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-alloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-alloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d-dw.cpp" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-backend.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-backend.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d-dw.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-cpp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-cpp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d-dw.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d-dw.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d-dw.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d-dw.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d-dw.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d-dw.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-conv2d.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-conv2d.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/tests/test-conv2d.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/tests/test-conv2d.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d.cpp" line="18" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;map&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d.cpp" line="19" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d.cpp" line="20" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-conv2d.cpp" line="21" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n_threads&apos; can be reduced." verbose="The scope of the variable &apos;n_threads&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-conv2d.cpp">
            <location file="ggml/tests/test-conv2d.cpp" line="181" column="9"/>
            <symbol>n_threads</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_conv2d&apos; can be declared as const array" verbose="Variable &apos;expected_conv2d&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv2d.cpp">
            <location file="ggml/tests/test-conv2d.cpp" line="237" column="11" info="Variable &apos;expected_conv2d&apos; can be declared as const array"/>
            <symbol>expected_conv2d</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;expected_im2col&apos; can be declared as const array" verbose="Variable &apos;expected_im2col&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-conv2d.cpp">
            <location file="ggml/tests/test-conv2d.cpp" line="299" column="14" info="Variable &apos;expected_im2col&apos; can be declared as const array"/>
            <symbol>expected_im2col</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/tests/test-conv2d.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/tests/test-conv2d.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-customop.c" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-customop.c" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-customop.c" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-customop.c" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-customop.c" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdatomic.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdatomic.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-customop.c" line="15" column="0"/>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;custom1&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;custom1&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="ggml/tests/test-customop.c">
            <location file="ggml/tests/test-customop.c" line="36" column="96" info="Parameter &apos;userdata&apos; can be declared as pointer to const"/>
            <location file="ggml/tests/test-customop.c" line="191" column="60" info="You might need to cast the function pointer here"/>
            <symbol>userdata</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;custom2&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;custom2&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="ggml/tests/test-customop.c">
            <location file="ggml/tests/test-customop.c" line="61" column="126" info="Parameter &apos;userdata&apos; can be declared as pointer to const"/>
            <location file="ggml/tests/test-customop.c" line="217" column="65" info="You might need to cast the function pointer here"/>
            <symbol>userdata</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;custom3&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;custom3&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="ggml/tests/test-customop.c">
            <location file="ggml/tests/test-customop.c" line="98" column="156" info="Parameter &apos;userdata&apos; can be declared as pointer to const"/>
            <location file="ggml/tests/test-customop.c" line="247" column="69" info="You might need to cast the function pointer here"/>
            <symbol>userdata</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;custom&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;userdata&apos; can be declared as pointer to const. However it seems that &apos;custom&apos; is a callback function, if &apos;userdata&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="ggml/tests/test-customop.c">
            <location file="ggml/tests/test-customop.c" line="130" column="64" info="Parameter &apos;userdata&apos; can be declared as pointer to const"/>
            <location file="ggml/tests/test-customop.c" line="283" column="119" info="You might need to cast the function pointer here"/>
            <symbol>userdata</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;windows.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-customop.c" line="9" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-dup.c" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-dup.c" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-dup.c" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-dup.c" line="5" column="0"/>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;type&apos; can be declared as const array" verbose="Variable &apos;type&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-dup.c">
            <location file="ggml/tests/test-dup.c" line="36" column="20" info="Variable &apos;type&apos; can be declared as const array"/>
            <symbol>type</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-interpolate.cpp" line="1" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-cpu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-cpu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-interpolate.cpp" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-alloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-alloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-interpolate.cpp" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-backend.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-backend.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-interpolate.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-cpp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-cpp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-interpolate.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-interpolate.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-interpolate.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-interpolate.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-interpolate.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-interpolate.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-opt.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/tests/test-opt.cpp" line="4" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/tests/test-opt.cpp" line="5" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-opt.h&quot; not found." verbose="Include file: &quot;ggml-opt.h&quot; not found.">
            <location file="ggml/tests/test-opt.cpp" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-opt.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cinttypes&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-opt.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-opt.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;random&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-opt.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-opt.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;thread&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-opt.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-opt.cpp" line="14" column="0"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="557" column="13" info="Second condition"/>
            <location file="ggml/tests/test-opt.cpp" line="551" column="13" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="576" column="13" info="Second condition"/>
            <location file="ggml/tests/test-opt.cpp" line="557" column="13" info="First condition"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="738" column="22"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;ndata == 6&apos; is always true." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="659" column="31"/>
            <location file="ggml/tests/test-opt.cpp" line="24" column="34" info="&apos;ndata&apos; is assigned value &apos;6&apos; here."/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;ndata&apos; shadows outer variable" verbose="Local variable &apos;ndata&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="352" column="17" info="Shadow variable"/>
            <location file="ggml/tests/test-opt.cpp" line="24" column="19" info="Shadowed declaration"/>
            <symbol>ndata</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;loss&apos; shadows outer variable" verbose="Local variable &apos;loss&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="354" column="16" info="Shadow variable"/>
            <location file="ggml/tests/test-opt.cpp" line="344" column="26" info="Shadowed declaration"/>
            <symbol>loss</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;ndata&apos; shadows outer variable" verbose="Local variable &apos;ndata&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="389" column="17" info="Shadow variable"/>
            <location file="ggml/tests/test-opt.cpp" line="24" column="19" info="Shadowed declaration"/>
            <symbol>ndata</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;loss&apos; shadows outer variable" verbose="Local variable &apos;loss&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="393" column="16" info="Shadow variable"/>
            <location file="ggml/tests/test-opt.cpp" line="344" column="26" info="Shadowed declaration"/>
            <symbol>loss</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;ndata&apos; shadows outer variable" verbose="Local variable &apos;ndata&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="445" column="17" info="Shadow variable"/>
            <location file="ggml/tests/test-opt.cpp" line="24" column="19" info="Shadowed declaration"/>
            <symbol>ndata</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;loss&apos; shadows outer variable" verbose="Local variable &apos;loss&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="449" column="16" info="Shadow variable"/>
            <location file="ggml/tests/test-opt.cpp" line="344" column="26" info="Shadowed declaration"/>
            <symbol>loss</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;loss&apos; shadows outer variable" verbose="Local variable &apos;loss&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="564" column="20" info="Shadow variable"/>
            <location file="ggml/tests/test-opt.cpp" line="521" column="26" info="Shadowed declaration"/>
            <symbol>loss</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;loss&apos; shadows outer variable" verbose="Local variable &apos;loss&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="583" column="20" info="Shadow variable"/>
            <location file="ggml/tests/test-opt.cpp" line="521" column="26" info="Shadowed declaration"/>
            <symbol>loss</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;adamw&apos; shadows outer variable" verbose="Local variable &apos;adamw&apos; shadows outer variable" cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="693" column="20" info="Shadow variable"/>
            <location file="ggml/tests/test-opt.cpp" line="633" column="16" info="Shadowed declaration"/>
            <symbol>adamw</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;options&apos; should be passed by const reference." verbose="Parameter &apos;options&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="180" column="69" info="Function parameter &apos;options&apos; should be passed by const reference."/>
            <symbol>options</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;subtest&apos; should be passed by const reference." verbose="Parameter &apos;subtest&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="181" column="27" info="Function parameter &apos;subtest&apos; should be passed by const reference."/>
            <symbol>subtest</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;subtest&apos; should be passed by const reference." verbose="Parameter &apos;subtest&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="331" column="27" info="Function parameter &apos;subtest&apos; should be passed by const reference."/>
            <symbol>subtest</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;subtest&apos; should be passed by const reference." verbose="Parameter &apos;subtest&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="508" column="27" info="Function parameter &apos;subtest&apos; should be passed by const reference."/>
            <symbol>subtest</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;subtest&apos; should be passed by const reference." verbose="Parameter &apos;subtest&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="608" column="27" info="Function parameter &apos;subtest&apos; should be passed by const reference."/>
            <symbol>subtest</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="ggml/tests/test-opt.cpp">
            <location file="ggml/tests/test-opt.cpp" line="258" column="36"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-pad-reflect-1d.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-pad-reflect-1d.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/tests/test-pad-reflect-1d.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/tests/test-pad-reflect-1d.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-pad-reflect-1d.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-pad-reflect-1d.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-pad-reflect-1d.cpp" line="16" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!backend&apos; is always true" verbose="Condition &apos;!backend&apos; is always true" cwe="571" file0="ggml/tests/test-pad-reflect-1d.cpp">
            <location file="ggml/tests/test-pad-reflect-1d.cpp" line="83" column="9" info="Condition &apos;!backend&apos; is always true"/>
            <location file="ggml/tests/test-pad-reflect-1d.cpp" line="55" column="30" info="Assignment &apos;backend=NULL&apos;, assigned value is 0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/tests/test-pad-reflect-1d.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/tests/test-pad-reflect-1d.cpp" line="11" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-pool.c" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-pool.c" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-pool.c" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-pool.c" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-pool.c" line="6" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-quantize-fns.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-quantize-fns.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-fns.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-fns.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-fns.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-fns.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-fns.cpp" line="11" column="0"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared as const array" verbose="Parameter &apos;argv&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-quantize-fns.cpp">
            <location file="ggml/tests/test-quantize-fns.cpp" line="101" column="27" info="Parameter &apos;argv&apos; can be declared as const array"/>
            <symbol>argv</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-quantize-perf.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-quantize-perf.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-perf.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;assert.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-perf.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;functional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;functional&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-perf.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;math.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-perf.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;memory&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-perf.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-perf.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-perf.cpp" line="13" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-perf.cpp" line="14" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/tests/test-quantize-perf.cpp">
            <location file="ggml/tests/test-quantize-perf.cpp" line="252" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/tests/test-quantize-perf.cpp">
            <location file="ggml/tests/test-quantize-perf.cpp" line="253" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/tests/test-quantize-perf.cpp">
            <location file="ggml/tests/test-quantize-perf.cpp" line="254" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/tests/test-quantize-perf.cpp">
            <location file="ggml/tests/test-quantize-perf.cpp" line="255" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/tests/test-quantize-perf.cpp">
            <location file="ggml/tests/test-quantize-perf.cpp" line="256" column="26"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared as const array" verbose="Parameter &apos;argv&apos; can be declared as const array" cwe="398" file0="ggml/tests/test-quantize-perf.cpp">
            <location file="ggml/tests/test-quantize-perf.cpp" line="110" column="26" info="Parameter &apos;argv&apos; can be declared as const array"/>
            <symbol>argv</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;x86intrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;x86intrin.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-quantize-perf.cpp" line="45" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-rel-pos.c" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-rel-pos.c" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-rel-pos.c" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-rel-pos.c" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-rel-pos.c" line="6" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;expected_out&apos; can be reduced." verbose="The scope of the variable &apos;expected_out&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-rel-pos.c">
            <location file="ggml/tests/test-rel-pos.c" line="38" column="11"/>
            <symbol>expected_out</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="1" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-cpu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-cpu.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="2" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-alloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-alloc.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="3" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-backend.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-backend.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;ggml-cpp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;ggml-cpp.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cassert&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="8" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstdio&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="9" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="10" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;array&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="11" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;numeric&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;numeric&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="12" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-roll.cpp" line="13" column="0"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;ne&apos; should be passed by const reference." verbose="Parameter &apos;ne&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="ggml/tests/test-roll.cpp">
            <location file="ggml/tests/test-roll.cpp" line="25" column="47" info="Function parameter &apos;ne&apos; should be passed by const reference."/>
            <symbol>ne</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml.h&quot; not found." verbose="Include file: &quot;ggml.h&quot; not found.">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="1" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cpu.h&quot; not found." verbose="Include file: &quot;ggml-cpu.h&quot; not found.">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="2" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-alloc.h&quot; not found." verbose="Include file: &quot;ggml-alloc.h&quot; not found.">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="3" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-backend.h&quot; not found." verbose="Include file: &quot;ggml-backend.h&quot; not found.">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="4" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;string.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="14" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdio.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="15" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;stdlib.h&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="16" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;vector&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="17" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cmath&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="18" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!backend&apos; is always true" verbose="Condition &apos;!backend&apos; is always true" cwe="571" file0="ggml/tests/test-timestep_embedding.cpp">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="125" column="13" info="Condition &apos;!backend&apos; is always true"/>
            <location file="ggml/tests/test-timestep_embedding.cpp" line="94" column="34" info="Assignment &apos;backend=NULL&apos;, assigned value is 0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/tests/test-timestep_embedding.cpp">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="22" column="15"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="ggml/tests/test-timestep_embedding.cpp">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="40" column="23"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n_threads&apos; can be reduced." verbose="The scope of the variable &apos;n_threads&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ggml/tests/test-timestep_embedding.cpp">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="153" column="13"/>
            <symbol>n_threads</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;vec1&apos; can be declared as pointer to const" verbose="Variable &apos;vec1&apos; can be declared as pointer to const" cwe="398" file0="ggml/tests/test-timestep_embedding.cpp">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="82" column="16" info="Variable &apos;vec1&apos; can be declared as pointer to const"/>
            <symbol>vec1</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-cuda.h&quot; not found." verbose="Include file: &quot;ggml-cuda.h&quot; not found.">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="7" column="0"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &quot;ggml-metal.h&quot; not found." verbose="Include file: &quot;ggml-metal.h&quot; not found.">
            <location file="ggml/tests/test-timestep_embedding.cpp" line="11" column="0"/>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;gpt2_model&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;gpt2_model&apos;" cwe="758" file0="ggml/examples/gpt-2/main-backend.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="56" column="1"/>
            <location file="ggml/examples/gpt-2/main-backend.cpp" line="73" column="1"/>
            <symbol>gpt2_model</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;gpt2_model&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;gpt2_model&apos;" cwe="758" file0="ggml/examples/gpt-2/main-batched.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="56" column="1"/>
            <location file="ggml/examples/gpt-2/main-batched.cpp" line="105" column="1"/>
            <symbol>gpt2_model</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;gpt2_model&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;gpt2_model&apos;" cwe="758" file0="ggml/examples/gpt-2/main-sched.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="56" column="1"/>
            <location file="ggml/examples/gpt-2/main-sched.cpp" line="77" column="1"/>
            <symbol>gpt2_model</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;gpt2_hparams&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;gpt2_hparams&apos;" cwe="758" file0="ggml/examples/gpt-2/quantize.cpp">
            <location file="ggml/examples/gpt-2/main-alloc.cpp" line="23" column="1"/>
            <location file="ggml/examples/gpt-2/quantize.cpp" line="17" column="1"/>
            <symbol>gpt2_hparams</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;gptj_hparams&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;gptj_hparams&apos;" cwe="758" file0="ggml/examples/gpt-j/quantize.cpp">
            <location file="ggml/examples/gpt-j/main.cpp" line="22" column="1"/>
            <location file="ggml/examples/gpt-j/quantize.cpp" line="17" column="1"/>
            <symbol>gptj_hparams</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;simple_model&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;simple_model&apos;" cwe="758" file0="ggml/examples/simple/simple-ctx.cpp">
            <location file="ggml/examples/simple/simple-backend.cpp" line="31" column="1"/>
            <location file="ggml/examples/simple/simple-ctx.cpp" line="14" column="1"/>
            <symbol>simple_model</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;test_model&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;test_model&apos;" cwe="758" file0="ggml/tests/test-conv1d-dw-c1.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="30" column="1"/>
            <location file="ggml/tests/test-conv1d-dw-c1.cpp" line="30" column="1"/>
            <symbol>test_model</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;test_model&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;test_model&apos;" cwe="758" file0="ggml/tests/test-conv1d-dw-c2.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="30" column="1"/>
            <location file="ggml/tests/test-conv1d-dw-c2.cpp" line="30" column="1"/>
            <symbol>test_model</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;test_model&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;test_model&apos;" cwe="758" file0="ggml/tests/test-conv1d.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="30" column="1"/>
            <location file="ggml/tests/test-conv1d.cpp" line="30" column="1"/>
            <symbol>test_model</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;test_model&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;test_model&apos;" cwe="758" file0="ggml/tests/test-conv2d.cpp">
            <location file="ggml/tests/test-conv-transpose-1d.cpp" line="30" column="1"/>
            <location file="ggml/tests/test-conv2d.cpp" line="30" column="1"/>
            <symbol>test_model</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;trim&apos; is never used." verbose="The function &apos;trim&apos; is never used." cwe="561">
            <location file="ggml/examples/common.cpp" line="136" column="13"/>
            <symbol>trim</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;add_special_token&apos; is never used." verbose="The function &apos;add_special_token&apos; is never used." cwe="561">
            <location file="ggml/examples/common.cpp" line="151" column="17"/>
            <symbol>add_special_token</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;gpt_vocab_init&apos; is never used." verbose="The function &apos;gpt_vocab_init&apos; is never used." cwe="561">
            <location file="ggml/examples/common.cpp" line="382" column="6"/>
            <symbol>gpt_vocab_init</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;gpt_sample_top_k_top_p_repeat&apos; is never used." verbose="The function &apos;gpt_sample_top_k_top_p_repeat&apos; is never used." cwe="561">
            <location file="ggml/examples/common.cpp" line="481" column="15"/>
            <symbol>gpt_sample_top_k_top_p_repeat</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;vad_simple&apos; is never used." verbose="The function &apos;vad_simple&apos; is never used." cwe="561">
            <location file="ggml/examples/common.cpp" line="610" column="6"/>
            <symbol>vad_simple</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;similarity&apos; is never used." verbose="The function &apos;similarity&apos; is never used." cwe="561">
            <location file="ggml/examples/common.cpp" line="648" column="7"/>
            <symbol>similarity</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;is_file_exist&apos; is never used." verbose="The function &apos;is_file_exist&apos; is never used." cwe="561">
            <location file="ggml/examples/common.cpp" line="672" column="6"/>
            <symbol>is_file_exist</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;print_t_f32&apos; is never used." verbose="The function &apos;print_t_f32&apos; is never used." cwe="561">
            <location file="ggml/examples/sam/sam.cpp" line="335" column="6"/>
            <symbol>print_t_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_cann_error&apos; is never used." verbose="The function &apos;ggml_cann_error&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="59" column="19"/>
            <symbol>ggml_cann_error</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_cann_get_device&apos; is never used." verbose="The function &apos;ggml_cann_get_device&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="92" column="9"/>
            <symbol>ggml_cann_get_device</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;parse_integer&apos; is never used." verbose="The function &apos;parse_integer&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="128" column="5"/>
            <symbol>parse_integer</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_cann_host_buffer_name&apos; is never used." verbose="The function &apos;ggml_backend_cann_host_buffer_name&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="1617" column="21"/>
            <symbol>ggml_backend_cann_host_buffer_name</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_cann_get_device_description&apos; is never used." verbose="The function &apos;ggml_backend_cann_get_device_description&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cann/ggml-cann.cpp" line="3036" column="6"/>
            <symbol>ggml_backend_cann_get_device_description</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;FP16_TO_FP32&apos; is never used." verbose="The function &apos;FP16_TO_FP32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="272" column="14"/>
            <symbol>FP16_TO_FP32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;FP16_TO_FP32_VEC&apos; is never used." verbose="The function &apos;FP16_TO_FP32_VEC&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="279" column="15"/>
            <symbol>FP16_TO_FP32_VEC</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;quantize_row_q8_K_vnni&apos; is never used." verbose="The function &apos;quantize_row_q8_K_vnni&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/amx/mmq.cpp" line="428" column="6"/>
            <symbol>quantize_row_q8_K_vnni</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;SSE3&apos; is never used." verbose="The function &apos;SSE3&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="17" column="10"/>
            <symbol>SSE3</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;PCLMULQDQ&apos; is never used." verbose="The function &apos;PCLMULQDQ&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="18" column="10"/>
            <symbol>PCLMULQDQ</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;MONITOR&apos; is never used." verbose="The function &apos;MONITOR&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="19" column="10"/>
            <symbol>MONITOR</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;SSSE3&apos; is never used." verbose="The function &apos;SSSE3&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="20" column="10"/>
            <symbol>SSSE3</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;CMPXCHG16B&apos; is never used." verbose="The function &apos;CMPXCHG16B&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="22" column="10"/>
            <symbol>CMPXCHG16B</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;SSE41&apos; is never used." verbose="The function &apos;SSE41&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="23" column="10"/>
            <symbol>SSE41</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;SSE42&apos; is never used." verbose="The function &apos;SSE42&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="24" column="10"/>
            <symbol>SSE42</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;MOVBE&apos; is never used." verbose="The function &apos;MOVBE&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="25" column="10"/>
            <symbol>MOVBE</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;POPCNT&apos; is never used." verbose="The function &apos;POPCNT&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="26" column="10"/>
            <symbol>POPCNT</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;AES&apos; is never used." verbose="The function &apos;AES&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="27" column="10"/>
            <symbol>AES</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;XSAVE&apos; is never used." verbose="The function &apos;XSAVE&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="28" column="10"/>
            <symbol>XSAVE</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;OSXSAVE&apos; is never used." verbose="The function &apos;OSXSAVE&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="29" column="10"/>
            <symbol>OSXSAVE</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;RDRAND&apos; is never used." verbose="The function &apos;RDRAND&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="32" column="10"/>
            <symbol>RDRAND</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;MSR&apos; is never used." verbose="The function &apos;MSR&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="34" column="10"/>
            <symbol>MSR</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;CX8&apos; is never used." verbose="The function &apos;CX8&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="35" column="10"/>
            <symbol>CX8</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;SEP&apos; is never used." verbose="The function &apos;SEP&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="36" column="10"/>
            <symbol>SEP</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;CMOV&apos; is never used." verbose="The function &apos;CMOV&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="37" column="10"/>
            <symbol>CMOV</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;CLFSH&apos; is never used." verbose="The function &apos;CLFSH&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="38" column="10"/>
            <symbol>CLFSH</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;MMX&apos; is never used." verbose="The function &apos;MMX&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="39" column="10"/>
            <symbol>MMX</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;FXSR&apos; is never used." verbose="The function &apos;FXSR&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="40" column="10"/>
            <symbol>FXSR</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;SSE&apos; is never used." verbose="The function &apos;SSE&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="41" column="10"/>
            <symbol>SSE</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;SSE2&apos; is never used." verbose="The function &apos;SSE2&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="42" column="10"/>
            <symbol>SSE2</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;FSGSBASE&apos; is never used." verbose="The function &apos;FSGSBASE&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="44" column="10"/>
            <symbol>FSGSBASE</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;BMI1&apos; is never used." verbose="The function &apos;BMI1&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="45" column="10"/>
            <symbol>BMI1</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;HLE&apos; is never used." verbose="The function &apos;HLE&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="46" column="10"/>
            <symbol>HLE</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ERMS&apos; is never used." verbose="The function &apos;ERMS&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="49" column="10"/>
            <symbol>ERMS</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;INVPCID&apos; is never used." verbose="The function &apos;INVPCID&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="50" column="10"/>
            <symbol>INVPCID</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;RTM&apos; is never used." verbose="The function &apos;RTM&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="51" column="10"/>
            <symbol>RTM</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;RDSEED&apos; is never used." verbose="The function &apos;RDSEED&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="54" column="10"/>
            <symbol>RDSEED</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ADX&apos; is never used." verbose="The function &apos;ADX&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="55" column="10"/>
            <symbol>ADX</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;AVX512PF&apos; is never used." verbose="The function &apos;AVX512PF&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="56" column="10"/>
            <symbol>AVX512PF</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;AVX512ER&apos; is never used." verbose="The function &apos;AVX512ER&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="57" column="10"/>
            <symbol>AVX512ER</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;SHA&apos; is never used." verbose="The function &apos;SHA&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="62" column="10"/>
            <symbol>SHA</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;PREFETCHWT1&apos; is never used." verbose="The function &apos;PREFETCHWT1&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="64" column="10"/>
            <symbol>PREFETCHWT1</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;LAHF&apos; is never used." verbose="The function &apos;LAHF&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="66" column="10"/>
            <symbol>LAHF</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;LZCNT&apos; is never used." verbose="The function &apos;LZCNT&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="67" column="10"/>
            <symbol>LZCNT</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ABM&apos; is never used." verbose="The function &apos;ABM&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="68" column="10"/>
            <symbol>ABM</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;SSE4a&apos; is never used." verbose="The function &apos;SSE4a&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="69" column="10"/>
            <symbol>SSE4a</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;XOP&apos; is never used." verbose="The function &apos;XOP&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="70" column="10"/>
            <symbol>XOP</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;TBM&apos; is never used." verbose="The function &apos;TBM&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="71" column="10"/>
            <symbol>TBM</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;SYSCALL&apos; is never used." verbose="The function &apos;SYSCALL&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="73" column="10"/>
            <symbol>SYSCALL</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;MMXEXT&apos; is never used." verbose="The function &apos;MMXEXT&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="74" column="10"/>
            <symbol>MMXEXT</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;RDTSCP&apos; is never used." verbose="The function &apos;RDTSCP&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="75" column="10"/>
            <symbol>RDTSCP</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;_3DNOWEXT&apos; is never used." verbose="The function &apos;_3DNOWEXT&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="76" column="10"/>
            <symbol>_3DNOWEXT</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;_3DNOW&apos; is never used." verbose="The function &apos;_3DNOW&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="77" column="10"/>
            <symbol>_3DNOW</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;AVX512_FP16&apos; is never used." verbose="The function &apos;AVX512_FP16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="81" column="10"/>
            <symbol>AVX512_FP16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;AMX_TILE&apos; is never used." verbose="The function &apos;AMX_TILE&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="85" column="10"/>
            <symbol>AMX_TILE</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;AMX_FP16&apos; is never used." verbose="The function &apos;AMX_FP16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="87" column="10"/>
            <symbol>AMX_FP16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;AMX_BF16&apos; is never used." verbose="The function &apos;AMX_BF16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp" line="88" column="10"/>
            <symbol>AMX_BF16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mul_sum_i8_pairs&apos; is never used." verbose="The function &apos;mul_sum_i8_pairs&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="30" column="23"/>
            <symbol>mul_sum_i8_pairs</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;hsum_i32_4&apos; is never used." verbose="The function &apos;hsum_i32_4&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/arch/x86/quants.c" line="61" column="19"/>
            <symbol>hsum_i32_4</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;sched_yield&apos; is never used." verbose="The function &apos;sched_yield&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="167" column="12"/>
            <symbol>sched_yield</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_new_i32&apos; is never used." verbose="The function &apos;ggml_new_i32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="699" column="22"/>
            <symbol>ggml_new_i32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_new_f32&apos; is never used." verbose="The function &apos;ggml_new_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="709" column="22"/>
            <symbol>ggml_new_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_set_f32_1d&apos; is never used." verbose="The function &apos;ggml_set_f32_1d&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="1018" column="6"/>
            <symbol>ggml_set_f32_1d</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_threadpool_resume&apos; is never used." verbose="The function &apos;ggml_threadpool_resume&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="2653" column="6"/>
            <symbol>ggml_threadpool_resume</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_cpu_fp16_to_fp32&apos; is never used." verbose="The function &apos;ggml_cpu_fp16_to_fp32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="3247" column="6"/>
            <symbol>ggml_cpu_fp16_to_fp32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_cpu_bf16_to_fp32&apos; is never used." verbose="The function &apos;ggml_cpu_bf16_to_fp32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="3288" column="6"/>
            <symbol>ggml_cpu_bf16_to_fp32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_cpu_hbm_buffer_type&apos; is never used." verbose="The function &apos;ggml_backend_cpu_hbm_buffer_type&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/hbm.cpp" line="40" column="28"/>
            <symbol>ggml_backend_cpu_hbm_buffer_type</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;sub&apos; is never used." verbose="The function &apos;sub&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/llamafile/sgemm.cpp" line="109" column="20"/>
            <symbol>sub</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;quantize_row_q8_0_generic&apos; is never used." verbose="The function &apos;quantize_row_q8_0_generic&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/quants.c" line="41" column="6"/>
            <symbol>quantize_row_q8_0_generic</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;quantize_row_q8_1_generic&apos; is never used." verbose="The function &apos;quantize_row_q8_1_generic&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/quants.c" line="45" column="6"/>
            <symbol>quantize_row_q8_1_generic</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;quantize_row_q8_K_generic&apos; is never used." verbose="The function &apos;quantize_row_q8_K_generic&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/quants.c" line="109" column="6"/>
            <symbol>quantize_row_q8_K_generic</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;neon_compute_fp32_to_fp16&apos; is never used." verbose="The function &apos;neon_compute_fp32_to_fp16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/simd-mappings.h" line="54" column="31"/>
            <symbol>neon_compute_fp32_to_fp16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;quantize_a_4row_i8&apos; is never used." verbose="The function &apos;quantize_a_4row_i8&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="79" column="6"/>
            <symbol>quantize_a_4row_i8</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;quantize_a_row_i8&apos; is never used." verbose="The function &apos;quantize_a_row_i8&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="344" column="6"/>
            <symbol>quantize_a_row_i8</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;gemm_kernel_i8i4&apos; is never used." verbose="The function &apos;gemm_kernel_i8i4&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp" line="3157" column="8"/>
            <symbol>gemm_kernel_i8i4</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_cpy_i32&apos; is never used." verbose="The function &apos;ggml_vec_cpy_i32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="54" column="20"/>
            <symbol>ggml_vec_cpy_i32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_add_f32&apos; is never used." verbose="The function &apos;ggml_vec_add_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="59" column="20"/>
            <symbol>ggml_vec_add_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_add_f16&apos; is never used." verbose="The function &apos;ggml_vec_add_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="74" column="20"/>
            <symbol>ggml_vec_add_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_add1_f32&apos; is never used." verbose="The function &apos;ggml_vec_add1_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="79" column="20"/>
            <symbol>ggml_vec_add1_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_acc_f32&apos; is never used." verbose="The function &apos;ggml_vec_acc_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="80" column="20"/>
            <symbol>ggml_vec_acc_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_acc1_f32&apos; is never used." verbose="The function &apos;ggml_vec_acc1_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="81" column="20"/>
            <symbol>ggml_vec_acc1_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sub_f32&apos; is never used." verbose="The function &apos;ggml_vec_sub_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="82" column="20"/>
            <symbol>ggml_vec_sub_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sub_f16&apos; is never used." verbose="The function &apos;ggml_vec_sub_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="83" column="20"/>
            <symbol>ggml_vec_sub_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_cpy_f32&apos; is never used." verbose="The function &apos;ggml_vec_cpy_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="89" column="20"/>
            <symbol>ggml_vec_cpy_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_neg_f32&apos; is never used." verbose="The function &apos;ggml_vec_neg_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="90" column="20"/>
            <symbol>ggml_vec_neg_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_neg_f16&apos; is never used." verbose="The function &apos;ggml_vec_neg_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="91" column="20"/>
            <symbol>ggml_vec_neg_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_mul_f32&apos; is never used." verbose="The function &apos;ggml_vec_mul_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="97" column="20"/>
            <symbol>ggml_vec_mul_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_mul_f16&apos; is never used." verbose="The function &apos;ggml_vec_mul_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="98" column="20"/>
            <symbol>ggml_vec_mul_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_div_f32&apos; is never used." verbose="The function &apos;ggml_vec_div_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="103" column="20"/>
            <symbol>ggml_vec_div_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_div_f16&apos; is never used." verbose="The function &apos;ggml_vec_div_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="104" column="20"/>
            <symbol>ggml_vec_div_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_dot_f16_unroll&apos; is never used." verbose="The function &apos;ggml_vec_dot_f16_unroll&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="112" column="20"/>
            <symbol>ggml_vec_dot_f16_unroll</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_mad_f32&apos; is never used." verbose="The function &apos;ggml_vec_mad_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="278" column="20"/>
            <symbol>ggml_vec_mad_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_mad_f16&apos; is never used." verbose="The function &apos;ggml_vec_mad_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="398" column="20"/>
            <symbol>ggml_vec_mad_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_mad_f32_unroll&apos; is never used." verbose="The function &apos;ggml_vec_mad_f32_unroll&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="515" column="20"/>
            <symbol>ggml_vec_mad_f32_unroll</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_mad1_f32&apos; is never used." verbose="The function &apos;ggml_vec_mad1_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="585" column="20"/>
            <symbol>ggml_vec_mad1_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_scale_f32&apos; is never used." verbose="The function &apos;ggml_vec_scale_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="633" column="20"/>
            <symbol>ggml_vec_scale_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_scale_f16&apos; is never used." verbose="The function &apos;ggml_vec_scale_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="699" column="20"/>
            <symbol>ggml_vec_scale_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sqr_f32&apos; is never used." verbose="The function &apos;ggml_vec_sqr_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="763" column="20"/>
            <symbol>ggml_vec_sqr_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sqr_f16&apos; is never used." verbose="The function &apos;ggml_vec_sqr_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="764" column="20"/>
            <symbol>ggml_vec_sqr_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sqrt_f32&apos; is never used." verbose="The function &apos;ggml_vec_sqrt_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="770" column="20"/>
            <symbol>ggml_vec_sqrt_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sqrt_f16&apos; is never used." verbose="The function &apos;ggml_vec_sqrt_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="771" column="20"/>
            <symbol>ggml_vec_sqrt_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_log_f32&apos; is never used." verbose="The function &apos;ggml_vec_log_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="776" column="20"/>
            <symbol>ggml_vec_log_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_log_f16&apos; is never used." verbose="The function &apos;ggml_vec_log_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="777" column="20"/>
            <symbol>ggml_vec_log_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sin_f32&apos; is never used." verbose="The function &apos;ggml_vec_sin_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="782" column="20"/>
            <symbol>ggml_vec_sin_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sin_f16&apos; is never used." verbose="The function &apos;ggml_vec_sin_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="783" column="20"/>
            <symbol>ggml_vec_sin_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_cos_f32&apos; is never used." verbose="The function &apos;ggml_vec_cos_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="788" column="20"/>
            <symbol>ggml_vec_cos_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_cos_f16&apos; is never used." verbose="The function &apos;ggml_vec_cos_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="789" column="20"/>
            <symbol>ggml_vec_cos_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_abs_f32&apos; is never used." verbose="The function &apos;ggml_vec_abs_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="794" column="20"/>
            <symbol>ggml_vec_abs_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_abs_f16&apos; is never used." verbose="The function &apos;ggml_vec_abs_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="795" column="20"/>
            <symbol>ggml_vec_abs_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sgn_f32&apos; is never used." verbose="The function &apos;ggml_vec_sgn_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="800" column="20"/>
            <symbol>ggml_vec_sgn_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sgn_f16&apos; is never used." verbose="The function &apos;ggml_vec_sgn_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="801" column="20"/>
            <symbol>ggml_vec_sgn_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_step_f32&apos; is never used." verbose="The function &apos;ggml_vec_step_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="807" column="20"/>
            <symbol>ggml_vec_step_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_step_f16&apos; is never used." verbose="The function &apos;ggml_vec_step_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="808" column="20"/>
            <symbol>ggml_vec_step_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_tanh_f32&apos; is never used." verbose="The function &apos;ggml_vec_tanh_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="813" column="20"/>
            <symbol>ggml_vec_tanh_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_tanh_f16&apos; is never used." verbose="The function &apos;ggml_vec_tanh_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="814" column="20"/>
            <symbol>ggml_vec_tanh_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_elu_f32&apos; is never used." verbose="The function &apos;ggml_vec_elu_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="819" column="20"/>
            <symbol>ggml_vec_elu_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_elu_f16&apos; is never used." verbose="The function &apos;ggml_vec_elu_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="820" column="20"/>
            <symbol>ggml_vec_elu_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_relu_f32&apos; is never used." verbose="The function &apos;ggml_vec_relu_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="825" column="20"/>
            <symbol>ggml_vec_relu_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_relu_f16&apos; is never used." verbose="The function &apos;ggml_vec_relu_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="826" column="20"/>
            <symbol>ggml_vec_relu_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_leaky_relu_f32&apos; is never used." verbose="The function &apos;ggml_vec_leaky_relu_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="832" column="20"/>
            <symbol>ggml_vec_leaky_relu_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_leaky_relu_f16&apos; is never used." verbose="The function &apos;ggml_vec_leaky_relu_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="833" column="20"/>
            <symbol>ggml_vec_leaky_relu_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sigmoid_f32&apos; is never used." verbose="The function &apos;ggml_vec_sigmoid_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="839" column="20"/>
            <symbol>ggml_vec_sigmoid_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sigmoid_f16&apos; is never used." verbose="The function &apos;ggml_vec_sigmoid_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="840" column="20"/>
            <symbol>ggml_vec_sigmoid_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_hardswish_f32&apos; is never used." verbose="The function &apos;ggml_vec_hardswish_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="846" column="20"/>
            <symbol>ggml_vec_hardswish_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_hardswish_f16&apos; is never used." verbose="The function &apos;ggml_vec_hardswish_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="847" column="20"/>
            <symbol>ggml_vec_hardswish_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_hardsigmoid_f32&apos; is never used." verbose="The function &apos;ggml_vec_hardsigmoid_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="853" column="20"/>
            <symbol>ggml_vec_hardsigmoid_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_hardsigmoid_f16&apos; is never used." verbose="The function &apos;ggml_vec_hardsigmoid_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="854" column="20"/>
            <symbol>ggml_vec_hardsigmoid_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_exp_f32&apos; is never used." verbose="The function &apos;ggml_vec_exp_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="859" column="20"/>
            <symbol>ggml_vec_exp_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_exp_f16&apos; is never used." verbose="The function &apos;ggml_vec_exp_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="860" column="20"/>
            <symbol>ggml_vec_exp_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_gelu_f16&apos; is never used." verbose="The function &apos;ggml_vec_gelu_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="875" column="20"/>
            <symbol>ggml_vec_gelu_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_gelu_erf_f16&apos; is never used." verbose="The function &apos;ggml_vec_gelu_erf_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="882" column="20"/>
            <symbol>ggml_vec_gelu_erf_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_gelu_f32&apos; is never used." verbose="The function &apos;ggml_vec_gelu_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="891" column="20"/>
            <symbol>ggml_vec_gelu_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_gelu_erf_f32&apos; is never used." verbose="The function &apos;ggml_vec_gelu_erf_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="913" column="20"/>
            <symbol>ggml_vec_gelu_erf_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_gelu_quick_f32&apos; is never used." verbose="The function &apos;ggml_vec_gelu_quick_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="932" column="20"/>
            <symbol>ggml_vec_gelu_quick_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_gelu_quick_f16&apos; is never used." verbose="The function &apos;ggml_vec_gelu_quick_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="948" column="20"/>
            <symbol>ggml_vec_gelu_quick_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_silu_f16&apos; is never used." verbose="The function &apos;ggml_vec_silu_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1282" column="20"/>
            <symbol>ggml_vec_silu_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_silu_backward_f32&apos; is never used." verbose="The function &apos;ggml_vec_silu_backward_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1299" column="20"/>
            <symbol>ggml_vec_silu_backward_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_silu_backward_f16&apos; is never used." verbose="The function &apos;ggml_vec_silu_backward_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1305" column="20"/>
            <symbol>ggml_vec_silu_backward_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_reglu_f32&apos; is never used." verbose="The function &apos;ggml_vec_reglu_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1311" column="20"/>
            <symbol>ggml_vec_reglu_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_reglu_f16&apos; is never used." verbose="The function &apos;ggml_vec_reglu_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1317" column="20"/>
            <symbol>ggml_vec_reglu_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_geglu_f32&apos; is never used." verbose="The function &apos;ggml_vec_geglu_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1325" column="20"/>
            <symbol>ggml_vec_geglu_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_geglu_f16&apos; is never used." verbose="The function &apos;ggml_vec_geglu_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1347" column="20"/>
            <symbol>ggml_vec_geglu_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_swiglu_f16&apos; is never used." verbose="The function &apos;ggml_vec_swiglu_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1357" column="20"/>
            <symbol>ggml_vec_swiglu_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_geglu_erf_f32&apos; is never used." verbose="The function &apos;ggml_vec_geglu_erf_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1365" column="20"/>
            <symbol>ggml_vec_geglu_erf_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_geglu_erf_f16&apos; is never used." verbose="The function &apos;ggml_vec_geglu_erf_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1372" column="20"/>
            <symbol>ggml_vec_geglu_erf_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_geglu_quick_f32&apos; is never used." verbose="The function &apos;ggml_vec_geglu_quick_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1381" column="20"/>
            <symbol>ggml_vec_geglu_quick_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_geglu_quick_f16&apos; is never used." verbose="The function &apos;ggml_vec_geglu_quick_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1397" column="20"/>
            <symbol>ggml_vec_geglu_quick_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sum_f32&apos; is never used." verbose="The function &apos;ggml_vec_sum_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1405" column="20"/>
            <symbol>ggml_vec_sum_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sum_f32_ggf&apos; is never used." verbose="The function &apos;ggml_vec_sum_f32_ggf&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1417" column="20"/>
            <symbol>ggml_vec_sum_f32_ggf</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sum_f16_ggf&apos; is never used." verbose="The function &apos;ggml_vec_sum_f16_ggf&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1425" column="20"/>
            <symbol>ggml_vec_sum_f16_ggf</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_sum_bf16_ggf&apos; is never used." verbose="The function &apos;ggml_vec_sum_bf16_ggf&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1433" column="20"/>
            <symbol>ggml_vec_sum_bf16_ggf</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_max_f32&apos; is never used." verbose="The function &apos;ggml_vec_max_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1441" column="20"/>
            <symbol>ggml_vec_max_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_norm_inv_f32&apos; is never used." verbose="The function &apos;ggml_vec_norm_inv_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1453" column="20"/>
            <symbol>ggml_vec_norm_inv_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_vec_argmax_f32&apos; is never used." verbose="The function &apos;ggml_vec_argmax_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-cpu/vec.h" line="1458" column="20"/>
            <symbol>ggml_vec_argmax_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_metal_set_abort_callback&apos; is never used." verbose="The function &apos;ggml_backend_metal_set_abort_callback&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="486" column="6"/>
            <symbol>ggml_backend_metal_set_abort_callback</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_metal_supports_family&apos; is never used." verbose="The function &apos;ggml_backend_metal_supports_family&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-metal/ggml-metal.cpp" line="494" column="6"/>
            <symbol>ggml_backend_metal_supports_family</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_add&apos; is never used." verbose="The function &apos;kernel_add&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/add.cl" line="10" column="13"/>
            <symbol>kernel_add</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_add_row&apos; is never used." verbose="The function &apos;kernel_add_row&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/add.cl" line="66" column="13"/>
            <symbol>kernel_add_row</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_add_f16&apos; is never used." verbose="The function &apos;kernel_add_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/add.cl" line="85" column="13"/>
            <symbol>kernel_add_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_add_row_f16&apos; is never used." verbose="The function &apos;kernel_add_row_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/add.cl" line="155" column="13"/>
            <symbol>kernel_add_row_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_add_id&apos; is never used." verbose="The function &apos;kernel_add_id&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/add_id.cl" line="6" column="13"/>
            <symbol>kernel_add_id</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_argsort_f32_i32&apos; is never used." verbose="The function &apos;kernel_argsort_f32_i32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/argsort.cl" line="28" column="13"/>
            <symbol>kernel_argsort_f32_i32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_clamp&apos; is never used." verbose="The function &apos;kernel_clamp&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/clamp.cl" line="6" column="13"/>
            <symbol>kernel_clamp</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_concat_f32_contiguous&apos; is never used." verbose="The function &apos;kernel_concat_f32_contiguous&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/concat.cl" line="1" column="13"/>
            <symbol>kernel_concat_f32_contiguous</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_concat_f32_non_contiguous&apos; is never used." verbose="The function &apos;kernel_concat_f32_non_contiguous&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/concat.cl" line="53" column="13"/>
            <symbol>kernel_concat_f32_non_contiguous</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_conv_2d&apos; is never used." verbose="The function &apos;kernel_conv_2d&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/conv2d.cl" line="40" column="13"/>
            <symbol>kernel_conv_2d</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_cpy_f16_f16&apos; is never used." verbose="The function &apos;kernel_cpy_f16_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="7" column="13"/>
            <symbol>kernel_cpy_f16_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_cpy_f16_f32&apos; is never used." verbose="The function &apos;kernel_cpy_f16_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="51" column="13"/>
            <symbol>kernel_cpy_f16_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_cpy_f32_f16&apos; is never used." verbose="The function &apos;kernel_cpy_f32_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="96" column="13"/>
            <symbol>kernel_cpy_f32_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_cpy_f32_f32&apos; is never used." verbose="The function &apos;kernel_cpy_f32_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/cpy.cl" line="141" column="13"/>
            <symbol>kernel_cpy_f32_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_convert_block_q4_0&apos; is never used." verbose="The function &apos;kernel_convert_block_q4_0&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/cvt.cl" line="54" column="13"/>
            <symbol>kernel_convert_block_q4_0</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_restore_block_q4_0&apos; is never used." verbose="The function &apos;kernel_restore_block_q4_0&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/cvt.cl" line="70" column="13"/>
            <symbol>kernel_restore_block_q4_0</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_convert_block_q4_0_noshuffle&apos; is never used." verbose="The function &apos;kernel_convert_block_q4_0_noshuffle&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/cvt.cl" line="90" column="13"/>
            <symbol>kernel_convert_block_q4_0_noshuffle</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_convert_block_mxfp4&apos; is never used." verbose="The function &apos;kernel_convert_block_mxfp4&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/cvt.cl" line="134" column="13"/>
            <symbol>kernel_convert_block_mxfp4</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_restore_block_mxfp4&apos; is never used." verbose="The function &apos;kernel_restore_block_mxfp4&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/cvt.cl" line="150" column="13"/>
            <symbol>kernel_restore_block_mxfp4</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_convert_block_q8_0&apos; is never used." verbose="The function &apos;kernel_convert_block_q8_0&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/cvt.cl" line="173" column="13"/>
            <symbol>kernel_convert_block_q8_0</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_restore_block_q8_0&apos; is never used." verbose="The function &apos;kernel_restore_block_q8_0&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/cvt.cl" line="189" column="13"/>
            <symbol>kernel_restore_block_q8_0</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_diag_mask_inf&apos; is never used." verbose="The function &apos;kernel_diag_mask_inf&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/diag_mask_inf.cl" line="6" column="13"/>
            <symbol>kernel_diag_mask_inf</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_diag_mask_inf_8&apos; is never used." verbose="The function &apos;kernel_diag_mask_inf_8&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/diag_mask_inf.cl" line="29" column="13"/>
            <symbol>kernel_diag_mask_inf_8</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_div&apos; is never used." verbose="The function &apos;kernel_div&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/div.cl" line="6" column="13"/>
            <symbol>kernel_div</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_div_row&apos; is never used." verbose="The function &apos;kernel_div_row&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/div.cl" line="55" column="13"/>
            <symbol>kernel_div_row</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_div_f16&apos; is never used." verbose="The function &apos;kernel_div_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/div.cl" line="74" column="13"/>
            <symbol>kernel_div_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_div_row_f16&apos; is never used." verbose="The function &apos;kernel_div_row_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/div.cl" line="121" column="13"/>
            <symbol>kernel_div_row_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;flash_attn_f16&apos; is never used." verbose="The function &apos;flash_attn_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/flash_attn_f16.cl" line="26" column="15"/>
            <symbol>flash_attn_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;flash_attn_f16_q1&apos; is never used." verbose="The function &apos;flash_attn_f16_q1&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/flash_attn_f16.cl" line="207" column="15"/>
            <symbol>flash_attn_f16_q1</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;flash_attn_f32&apos; is never used." verbose="The function &apos;flash_attn_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/flash_attn_f32.cl" line="26" column="15"/>
            <symbol>flash_attn_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;flash_attn_f32_q1&apos; is never used." verbose="The function &apos;flash_attn_f32_q1&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/flash_attn_f32.cl" line="207" column="15"/>
            <symbol>flash_attn_f32_q1</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;flash_attn_f32_f16&apos; is never used." verbose="The function &apos;flash_attn_f32_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/flash_attn_f32_f16.cl" line="29" column="15"/>
            <symbol>flash_attn_f32_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;flash_attn_f32_f16_q1&apos; is never used." verbose="The function &apos;flash_attn_f32_f16_q1&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/flash_attn_f32_f16.cl" line="210" column="15"/>
            <symbol>flash_attn_f32_f16_q1</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_gelu&apos; is never used." verbose="The function &apos;kernel_gelu&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="11" column="13"/>
            <symbol>kernel_gelu</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_gelu_4&apos; is never used." verbose="The function &apos;kernel_gelu_4&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="25" column="13"/>
            <symbol>kernel_gelu_4</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_gelu_erf&apos; is never used." verbose="The function &apos;kernel_gelu_erf&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="39" column="13"/>
            <symbol>kernel_gelu_erf</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_gelu_erf_4&apos; is never used." verbose="The function &apos;kernel_gelu_erf_4&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="52" column="13"/>
            <symbol>kernel_gelu_erf_4</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_gelu_quick&apos; is never used." verbose="The function &apos;kernel_gelu_quick&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="65" column="13"/>
            <symbol>kernel_gelu_quick</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_gelu_quick_4&apos; is never used." verbose="The function &apos;kernel_gelu_quick_4&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/gelu.cl" line="78" column="13"/>
            <symbol>kernel_gelu_quick_4</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_gemv_noshuffle&apos; is never used." verbose="The function &apos;kernel_gemv_noshuffle&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl" line="194" column="15"/>
            <symbol>kernel_gemv_noshuffle</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_get_rows_f32&apos; is never used." verbose="The function &apos;kernel_get_rows_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/get_rows.cl" line="62" column="13"/>
            <symbol>kernel_get_rows_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_get_rows_f16&apos; is never used." verbose="The function &apos;kernel_get_rows_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/get_rows.cl" line="95" column="13"/>
            <symbol>kernel_get_rows_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_get_rows_q4_0&apos; is never used." verbose="The function &apos;kernel_get_rows_q4_0&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/get_rows.cl" line="128" column="13"/>
            <symbol>kernel_get_rows_q4_0</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_geglu&apos; is never used." verbose="The function &apos;kernel_geglu&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/glu.cl" line="11" column="13"/>
            <symbol>kernel_geglu</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_geglu_f16&apos; is never used." verbose="The function &apos;kernel_geglu_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/glu.cl" line="43" column="13"/>
            <symbol>kernel_geglu_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_reglu&apos; is never used." verbose="The function &apos;kernel_reglu&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/glu.cl" line="78" column="13"/>
            <symbol>kernel_reglu</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_reglu_f16&apos; is never used." verbose="The function &apos;kernel_reglu_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/glu.cl" line="108" column="13"/>
            <symbol>kernel_reglu_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_swiglu&apos; is never used." verbose="The function &apos;kernel_swiglu&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/glu.cl" line="141" column="13"/>
            <symbol>kernel_swiglu</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_swiglu_f16&apos; is never used." verbose="The function &apos;kernel_swiglu_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/glu.cl" line="173" column="13"/>
            <symbol>kernel_swiglu_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_swiglu_oai&apos; is never used." verbose="The function &apos;kernel_swiglu_oai&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/glu.cl" line="208" column="13"/>
            <symbol>kernel_swiglu_oai</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_geglu_erf&apos; is never used." verbose="The function &apos;kernel_geglu_erf&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/glu.cl" line="249" column="13"/>
            <symbol>kernel_geglu_erf</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_geglu_erf_f16&apos; is never used." verbose="The function &apos;kernel_geglu_erf_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/glu.cl" line="281" column="13"/>
            <symbol>kernel_geglu_erf_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_geglu_quick&apos; is never used." verbose="The function &apos;kernel_geglu_quick&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/glu.cl" line="316" column="13"/>
            <symbol>kernel_geglu_quick</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_geglu_quick_f16&apos; is never used." verbose="The function &apos;kernel_geglu_quick_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/glu.cl" line="348" column="13"/>
            <symbol>kernel_geglu_quick_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_group_norm&apos; is never used." verbose="The function &apos;kernel_group_norm&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/group_norm.cl" line="27" column="13"/>
            <symbol>kernel_group_norm</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_group_norm_mul_add&apos; is never used." verbose="The function &apos;kernel_group_norm_mul_add&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/group_norm.cl" line="82" column="13"/>
            <symbol>kernel_group_norm_mul_add</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_im2col_f16&apos; is never used." verbose="The function &apos;kernel_im2col_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/im2col_f16.cl" line="3" column="13"/>
            <symbol>kernel_im2col_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_im2col_f32&apos; is never used." verbose="The function &apos;kernel_im2col_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/im2col_f32.cl" line="3" column="13"/>
            <symbol>kernel_im2col_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul&apos; is never used." verbose="The function &apos;kernel_mul&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul.cl" line="6" column="13"/>
            <symbol>kernel_mul</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_row&apos; is never used." verbose="The function &apos;kernel_mul_row&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul.cl" line="62" column="13"/>
            <symbol>kernel_mul_row</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_f16&apos; is never used." verbose="The function &apos;kernel_mul_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul.cl" line="81" column="13"/>
            <symbol>kernel_mul_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_row_f16&apos; is never used." verbose="The function &apos;kernel_mul_row_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul.cl" line="135" column="13"/>
            <symbol>kernel_mul_row_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mat_Ab_Bi_8x4&apos; is never used." verbose="The function &apos;kernel_mul_mat_Ab_Bi_8x4&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mat_Ab_Bi_8x4.cl" line="20" column="13"/>
            <symbol>kernel_mul_mat_Ab_Bi_8x4</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mul_mat_f16_f32&apos; is never used." verbose="The function &apos;mul_mat_f16_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl" line="21" column="15"/>
            <symbol>mul_mat_f16_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mm_f16_f32_l4_lm&apos; is never used." verbose="The function &apos;kernel_mul_mm_f16_f32_l4_lm&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mm_f16_f32_l4_lm.cl" line="12" column="13"/>
            <symbol>kernel_mul_mm_f16_f32_l4_lm</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mm_f32_f32_l4_lm&apos; is never used." verbose="The function &apos;kernel_mul_mm_f32_f32_l4_lm&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mm_f32_f32_l4_lm.cl" line="12" column="13"/>
            <symbol>kernel_mul_mm_f32_f32_l4_lm</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mat_f16_f16&apos; is never used." verbose="The function &apos;kernel_mul_mat_f16_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_f16_f16.cl" line="26" column="13"/>
            <symbol>kernel_mul_mat_f16_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mat_f16_f32&apos; is never used." verbose="The function &apos;kernel_mul_mat_f16_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_f16_f32.cl" line="26" column="13"/>
            <symbol>kernel_mul_mat_f16_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mat_f16_f32_1row&apos; is never used." verbose="The function &apos;kernel_mul_mat_f16_f32_1row&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_f16_f32_1row.cl" line="24" column="13"/>
            <symbol>kernel_mul_mat_f16_f32_1row</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mat_f16_f32_l4&apos; is never used." verbose="The function &apos;kernel_mul_mat_f16_f32_l4&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_f16_f32_l4.cl" line="25" column="13"/>
            <symbol>kernel_mul_mat_f16_f32_l4</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mat_f32_f32&apos; is never used." verbose="The function &apos;kernel_mul_mat_f32_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_f32_f32.cl" line="26" column="13"/>
            <symbol>kernel_mul_mat_f32_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mv_id_mxfp4_f32&apos; is never used." verbose="The function &apos;kernel_mul_mv_id_mxfp4_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32.cl" line="139" column="13"/>
            <symbol>kernel_mul_mv_id_mxfp4_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mv_id_mxfp4_f32_flat&apos; is never used." verbose="The function &apos;kernel_mul_mv_id_mxfp4_f32_flat&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32_flat.cl" line="68" column="13"/>
            <symbol>kernel_mul_mv_id_mxfp4_f32_flat</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mv_id_q4_0_f32_8x_flat&apos; is never used." verbose="The function &apos;kernel_mul_mv_id_q4_0_f32_8x_flat&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl" line="235" column="13"/>
            <symbol>kernel_mul_mv_id_q4_0_f32_8x_flat</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mv_id_q8_0_f32&apos; is never used." verbose="The function &apos;kernel_mul_mv_id_q8_0_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32.cl" line="44" column="13"/>
            <symbol>kernel_mul_mv_id_q8_0_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mv_id_q8_0_f32_flat&apos; is never used." verbose="The function &apos;kernel_mul_mv_id_q8_0_f32_flat&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32_flat.cl" line="44" column="13"/>
            <symbol>kernel_mul_mv_id_q8_0_f32_flat</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mv_mxfp4_f32&apos; is never used." verbose="The function &apos;kernel_mul_mv_mxfp4_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_mxfp4_f32.cl" line="58" column="13"/>
            <symbol>kernel_mul_mv_mxfp4_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mv_mxfp4_f32_flat&apos; is never used." verbose="The function &apos;kernel_mul_mv_mxfp4_f32_flat&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_mxfp4_f32_flat.cl" line="73" column="13"/>
            <symbol>kernel_mul_mv_mxfp4_f32_flat</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mat_q4_0_f32&apos; is never used." verbose="The function &apos;kernel_mul_mat_q4_0_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl" line="170" column="13"/>
            <symbol>kernel_mul_mat_q4_0_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mat_q4_0_f32_1d_16x_flat&apos; is never used." verbose="The function &apos;kernel_mul_mat_q4_0_f32_1d_16x_flat&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl" line="286" column="13"/>
            <symbol>kernel_mul_mat_q4_0_f32_1d_16x_flat</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mat_q4_0_f32_1d_8x_flat&apos; is never used." verbose="The function &apos;kernel_mul_mat_q4_0_f32_1d_8x_flat&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl" line="244" column="13"/>
            <symbol>kernel_mul_mat_q4_0_f32_1d_8x_flat</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mat_q4_0_f32_8x_flat&apos; is never used." verbose="The function &apos;kernel_mul_mat_q4_0_f32_8x_flat&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_8x_flat.cl" line="251" column="13"/>
            <symbol>kernel_mul_mat_q4_0_f32_8x_flat</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mat_q4_0_f32_v&apos; is never used." verbose="The function &apos;kernel_mul_mat_q4_0_f32_v&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl" line="232" column="13"/>
            <symbol>kernel_mul_mat_q4_0_f32_v</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mv_q6_K_f32&apos; is never used." verbose="The function &apos;kernel_mul_mv_q6_K_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q6_k.cl" line="80" column="13"/>
            <symbol>kernel_mul_mv_q6_K_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mv_q8_0_f32&apos; is never used." verbose="The function &apos;kernel_mul_mv_q8_0_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32.cl" line="44" column="13"/>
            <symbol>kernel_mul_mv_q8_0_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_mul_mv_q8_0_f32_flat&apos; is never used." verbose="The function &apos;kernel_mul_mv_q8_0_f32_flat&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl" line="44" column="13"/>
            <symbol>kernel_mul_mv_q8_0_f32_flat</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_norm&apos; is never used." verbose="The function &apos;kernel_norm&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/norm.cl" line="18" column="13"/>
            <symbol>kernel_norm</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_norm_mul_add&apos; is never used." verbose="The function &apos;kernel_norm_mul_add&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/norm.cl" line="91" column="13"/>
            <symbol>kernel_norm_mul_add</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_pad&apos; is never used." verbose="The function &apos;kernel_pad&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/pad.cl" line="1" column="13"/>
            <symbol>kernel_pad</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_relu&apos; is never used." verbose="The function &apos;kernel_relu&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/relu.cl" line="6" column="13"/>
            <symbol>kernel_relu</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_repeat&apos; is never used." verbose="The function &apos;kernel_repeat&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/repeat.cl" line="1" column="13"/>
            <symbol>kernel_repeat</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_rms_norm&apos; is never used." verbose="The function &apos;kernel_rms_norm&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/rms_norm.cl" line="30" column="13"/>
            <symbol>kernel_rms_norm</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_rms_norm_mul&apos; is never used." verbose="The function &apos;kernel_rms_norm_mul&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/rms_norm.cl" line="106" column="13"/>
            <symbol>kernel_rms_norm_mul</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_rope_norm_f32&apos; is never used." verbose="The function &apos;kernel_rope_norm_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="45" column="13"/>
            <symbol>kernel_rope_norm_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_rope_norm_f16&apos; is never used." verbose="The function &apos;kernel_rope_norm_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="124" column="13"/>
            <symbol>kernel_rope_norm_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_rope_neox_f32&apos; is never used." verbose="The function &apos;kernel_rope_neox_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="203" column="13"/>
            <symbol>kernel_rope_neox_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_rope_neox_f16&apos; is never used." verbose="The function &apos;kernel_rope_neox_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="282" column="13"/>
            <symbol>kernel_rope_neox_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_rope_multi_f32&apos; is never used." verbose="The function &apos;kernel_rope_multi_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="361" column="13"/>
            <symbol>kernel_rope_multi_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_rope_multi_f16&apos; is never used." verbose="The function &apos;kernel_rope_multi_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="459" column="13"/>
            <symbol>kernel_rope_multi_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_rope_vision_f32&apos; is never used." verbose="The function &apos;kernel_rope_vision_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="557" column="13"/>
            <symbol>kernel_rope_vision_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_rope_vision_f16&apos; is never used." verbose="The function &apos;kernel_rope_vision_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="640" column="13"/>
            <symbol>kernel_rope_vision_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_scale&apos; is never used." verbose="The function &apos;kernel_scale&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/scale.cl" line="6" column="13"/>
            <symbol>kernel_scale</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_set_rows_f32_i64&apos; is never used." verbose="The function &apos;kernel_set_rows_f32_i64&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/set_rows.cl" line="3" column="13"/>
            <symbol>kernel_set_rows_f32_i64</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_set_rows_f16_i64&apos; is never used." verbose="The function &apos;kernel_set_rows_f16_i64&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/set_rows.cl" line="50" column="13"/>
            <symbol>kernel_set_rows_f16_i64</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_set_rows_f32_i32&apos; is never used." verbose="The function &apos;kernel_set_rows_f32_i32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/set_rows.cl" line="97" column="13"/>
            <symbol>kernel_set_rows_f32_i32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_set_rows_f16_i32&apos; is never used." verbose="The function &apos;kernel_set_rows_f16_i32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/set_rows.cl" line="144" column="13"/>
            <symbol>kernel_set_rows_f16_i32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_sigmoid_f32&apos; is never used." verbose="The function &apos;kernel_sigmoid_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/sigmoid.cl" line="7" column="13"/>
            <symbol>kernel_sigmoid_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_sigmoid_f16&apos; is never used." verbose="The function &apos;kernel_sigmoid_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/sigmoid.cl" line="19" column="13"/>
            <symbol>kernel_sigmoid_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_silu&apos; is never used." verbose="The function &apos;kernel_silu&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/silu.cl" line="6" column="13"/>
            <symbol>kernel_silu</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_silu_4&apos; is never used." verbose="The function &apos;kernel_silu_4&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/silu.cl" line="19" column="13"/>
            <symbol>kernel_silu_4</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_soft_max_4_f16&apos; is never used." verbose="The function &apos;kernel_soft_max_4_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/softmax_4_f16.cl" line="24" column="13"/>
            <symbol>kernel_soft_max_4_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_soft_max_4&apos; is never used." verbose="The function &apos;kernel_soft_max_4&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/softmax_4_f32.cl" line="24" column="13"/>
            <symbol>kernel_soft_max_4</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_soft_max_f16&apos; is never used." verbose="The function &apos;kernel_soft_max_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/softmax_f16.cl" line="24" column="13"/>
            <symbol>kernel_soft_max_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_soft_max&apos; is never used." verbose="The function &apos;kernel_soft_max&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/softmax_f32.cl" line="24" column="13"/>
            <symbol>kernel_soft_max</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_sub&apos; is never used." verbose="The function &apos;kernel_sub&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/sub.cl" line="6" column="13"/>
            <symbol>kernel_sub</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_sub_row&apos; is never used." verbose="The function &apos;kernel_sub_row&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/sub.cl" line="55" column="13"/>
            <symbol>kernel_sub_row</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_sub_f16&apos; is never used." verbose="The function &apos;kernel_sub_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/sub.cl" line="74" column="13"/>
            <symbol>kernel_sub_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_sub_row_f16&apos; is never used." verbose="The function &apos;kernel_sub_row_f16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/sub.cl" line="121" column="13"/>
            <symbol>kernel_sub_row_f16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_sum_rows_f32&apos; is never used." verbose="The function &apos;kernel_sum_rows_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/sum_rows.cl" line="2" column="13"/>
            <symbol>kernel_sum_rows_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_tanh_f32_nd&apos; is never used." verbose="The function &apos;kernel_tanh_f32_nd&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/tanh.cl" line="15" column="13"/>
            <symbol>kernel_tanh_f32_nd</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_tanh_f16_nd&apos; is never used." verbose="The function &apos;kernel_tanh_f16_nd&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/tanh.cl" line="40" column="13"/>
            <symbol>kernel_tanh_f16_nd</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_transpose_16&apos; is never used." verbose="The function &apos;kernel_transpose_16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/transpose.cl" line="4" column="13"/>
            <symbol>kernel_transpose_16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_transpose_16_4x1&apos; is never used." verbose="The function &apos;kernel_transpose_16_4x1&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/transpose.cl" line="28" column="13"/>
            <symbol>kernel_transpose_16_4x1</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_transpose_32&apos; is never used." verbose="The function &apos;kernel_transpose_32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/transpose.cl" line="48" column="13"/>
            <symbol>kernel_transpose_32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_transpose_32_16&apos; is never used." verbose="The function &apos;kernel_transpose_32_16&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/transpose.cl" line="76" column="13"/>
            <symbol>kernel_transpose_32_16</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_timestep_embedding&apos; is never used." verbose="The function &apos;kernel_timestep_embedding&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/tsembd.cl" line="1" column="13"/>
            <symbol>kernel_timestep_embedding</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_upscale&apos; is never used." verbose="The function &apos;kernel_upscale&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/upscale.cl" line="1" column="13"/>
            <symbol>kernel_upscale</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kernel_upscale_bilinear&apos; is never used." verbose="The function &apos;kernel_upscale_bilinear&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-opencl/kernels/upscale.cl" line="45" column="13"/>
            <symbol>kernel_upscale_bilinear</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_is_rpc&apos; is never used." verbose="The function &apos;ggml_backend_is_rpc&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-rpc/ggml-rpc.cpp" line="854" column="6"/>
            <symbol>ggml_backend_is_rpc</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;gpu_has_xmx&apos; is never used." verbose="The function &apos;gpu_has_xmx&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/common.cpp" line="54" column="6"/>
            <symbol>gpu_has_xmx</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;bad_arch&apos; is never used." verbose="The function &apos;bad_arch&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/common.hpp" line="162" column="33"/>
            <symbol>bad_arch</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;convert_f32&apos; is never used." verbose="The function &apos;convert_f32&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dmmv.cpp" line="14" column="13"/>
            <symbol>convert_f32</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;set_data_ptr&apos; is never used." verbose="The function &apos;set_data_ptr&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="289" column="14"/>
            <symbol>set_data_ptr</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;set_pitch&apos; is never used." verbose="The function &apos;set_pitch&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="292" column="14"/>
            <symbol>set_pitch</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_x&apos; is never used." verbose="The function &apos;get_x&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="294" column="16"/>
            <symbol>get_x</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;set_x&apos; is never used." verbose="The function &apos;set_x&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="295" column="14"/>
            <symbol>set_x</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;set_y&apos; is never used." verbose="The function &apos;set_y&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="298" column="14"/>
            <symbol>set_y</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_max_work_item_sizes&apos; is never used." verbose="The function &apos;get_max_work_item_sizes&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="315" column="14"/>
            <symbol>get_max_work_item_sizes</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_host_unified_memory&apos; is never used." verbose="The function &apos;get_host_unified_memory&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="341" column="14"/>
            <symbol>get_host_unified_memory</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_max_work_items_per_compute_unit&apos; is never used." verbose="The function &apos;get_max_work_items_per_compute_unit&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="349" column="13"/>
            <symbol>get_max_work_items_per_compute_unit</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_max_nd_range_size&apos; is never used." verbose="The function &apos;get_max_nd_range_size&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="361" column="14"/>
            <symbol>get_max_nd_range_size</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_local_mem_size&apos; is never used." verbose="The function &apos;get_local_mem_size&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="380" column="16"/>
            <symbol>get_local_mem_size</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_memory_clock_rate&apos; is never used." verbose="The function &apos;get_memory_clock_rate&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="384" column="22"/>
            <symbol>get_memory_clock_rate</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_memory_bus_width&apos; is never used." verbose="The function &apos;get_memory_bus_width&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="387" column="22"/>
            <symbol>get_memory_bus_width</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_uuid&apos; is never used." verbose="The function &apos;get_uuid&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="389" column="39"/>
            <symbol>get_uuid</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_global_mem_cache_size&apos; is never used." verbose="The function &apos;get_global_mem_cache_size&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="391" column="22"/>
            <symbol>get_global_mem_cache_size</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;set_integrated&apos; is never used." verbose="The function &apos;set_integrated&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="429" column="14"/>
            <symbol>set_integrated</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;set_memory_clock_rate&apos; is never used." verbose="The function &apos;set_memory_clock_rate&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="468" column="14"/>
            <symbol>set_memory_clock_rate</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;set_memory_bus_width&apos; is never used." verbose="The function &apos;set_memory_bus_width&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="472" column="14"/>
            <symbol>set_memory_bus_width</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;set_device_id&apos; is never used." verbose="The function &apos;set_device_id&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="481" column="14"/>
            <symbol>set_device_id</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;set_uuid&apos; is never used." verbose="The function &apos;set_uuid&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="485" column="14"/>
            <symbol>set_uuid</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;is_native_atomic_supported&apos; is never used." verbose="The function &apos;is_native_atomic_supported&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="643" column="11"/>
            <symbol>is_native_atomic_supported</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_mem_base_addr_align&apos; is never used." verbose="The function &apos;get_mem_base_addr_align&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="671" column="11"/>
            <symbol>get_mem_base_addr_align</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;out_of_order_queue&apos; is never used." verbose="The function &apos;out_of_order_queue&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="729" column="20"/>
            <symbol>out_of_order_queue</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;create_queue&apos; is never used." verbose="The function &apos;create_queue&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="744" column="19"/>
            <symbol>create_queue</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;create_out_of_order_queue&apos; is never used." verbose="The function &apos;create_out_of_order_queue&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="766" column="19"/>
            <symbol>create_out_of_order_queue</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;destroy_queue&apos; is never used." verbose="The function &apos;destroy_queue&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="772" column="12"/>
            <symbol>destroy_queue</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;set_saved_queue&apos; is never used." verbose="The function &apos;set_saved_queue&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="781" column="12"/>
            <symbol>set_saved_queue</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_saved_queue&apos; is never used." verbose="The function &apos;get_saved_queue&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="785" column="19"/>
            <symbol>get_saved_queue</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;cpu_device&apos; is never used." verbose="The function &apos;cpu_device&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="859" column="21"/>
            <symbol>cpu_device</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mem_alloc&apos; is never used." verbose="The function &apos;mem_alloc&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1208" column="19"/>
            <symbol>mem_alloc</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mem_free&apos; is never used." verbose="The function &apos;mem_free&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1231" column="18"/>
            <symbol>mem_free</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;translate_ptr&apos; is never used." verbose="The function &apos;translate_ptr&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1241" column="24"/>
            <symbol>translate_ptr</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;is_device_ptr&apos; is never used." verbose="The function &apos;is_device_ptr&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1249" column="18"/>
            <symbol>is_device_ptr</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;address&apos; is never used." verbose="The function &apos;address&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1658" column="25"/>
            <symbol>address</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;vectorized_min&apos; is never used." verbose="The function &apos;vectorized_min&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="1859" column="14"/>
            <symbol>vectorized_min</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;get_access&apos; is never used." verbose="The function &apos;get_access&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/dpct/helper.hpp" line="2846" column="13"/>
            <symbol>get_access</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;unary_op_clamp_kernel&apos; is never used." verbose="The function &apos;unary_op_clamp_kernel&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/element_wise.cpp" line="301" column="13"/>
            <symbol>unary_op_clamp_kernel</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_sycl_get_gpu_list&apos; is never used." verbose="The function &apos;ggml_backend_sycl_get_gpu_list&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="275" column="15"/>
            <symbol>ggml_backend_sycl_get_gpu_list</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_sycl_get_device_description&apos; is never used." verbose="The function &apos;ggml_backend_sycl_get_device_description&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3784" column="15"/>
            <symbol>ggml_backend_sycl_get_device_description</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_sycl_get_device_memory&apos; is never used." verbose="The function &apos;ggml_backend_sycl_get_device_memory&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3798" column="6"/>
            <symbol>ggml_backend_sycl_get_device_memory</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_sycl_cpy_tensor_async&apos; is never used." verbose="The function &apos;ggml_backend_sycl_cpy_tensor_async&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/ggml-sycl.cpp" line="3882" column="13"/>
            <symbol>ggml_backend_sycl_cpy_tensor_async</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;mul_mat_q3_K&apos; is never used." verbose="The function &apos;mul_mat_q3_K&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/mmq.cpp" line="1617" column="1"/>
            <symbol>mul_mat_q3_K</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;is_arithmetic_v&apos; is never used." verbose="The function &apos;is_arithmetic_v&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-sycl/set_rows.cpp" line="6" column="23"/>
            <symbol>is_arithmetic_v</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;is_quantized_type&apos; is never used." verbose="The function &apos;is_quantized_type&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="209" column="6"/>
            <symbol>is_quantized_type</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;is_k_quant&apos; is never used." verbose="The function &apos;is_k_quant&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="217" column="6"/>
            <symbol>is_k_quant</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;is_iq_quant&apos; is never used." verbose="The function &apos;is_iq_quant&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp" line="221" column="6"/>
            <symbol>is_iq_quant</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;cleanup&apos; is never used." verbose="The function &apos;cleanup&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="101" column="10"/>
            <symbol>cleanup</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_webgpu_debug&apos; is never used." verbose="The function &apos;ggml_backend_webgpu_debug&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="338" column="13"/>
            <symbol>ggml_backend_webgpu_debug</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_webgpu_init&apos; is never used." verbose="The function &apos;ggml_backend_webgpu_init&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-webgpu/ggml-webgpu.cpp" line="1552" column="16"/>
            <symbol>ggml_backend_webgpu_init</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ggml_backend_is_zdnn&apos; is never used." verbose="The function &apos;ggml_backend_is_zdnn&apos; is never used." cwe="561">
            <location file="ggml/src/ggml-zdnn/ggml-zdnn.cpp" line="436" column="6"/>
            <symbol>ggml_backend_is_zdnn</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;output_format_str&apos; is never used." verbose="The function &apos;output_format_str&apos; is never used." cwe="561">
            <location file="ggml/tests/test-backend-ops.cpp" line="332" column="21"/>
            <symbol>output_format_str</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;printf_tensor&apos; is never used." verbose="The function &apos;printf_tensor&apos; is never used." cwe="561">
            <location file="ggml/tests/test-conv-transpose.c" line="16" column="6"/>
            <symbol>printf_tensor</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;ggml_set_f32&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;ggml_set_f32&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="778" column="22"/>
            <symbol>ggml_set_f32</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;ggml_get_i32_nd&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;ggml_get_i32_nd&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="926" column="9"/>
            <symbol>ggml_get_i32_nd</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;ggml_set_i32_nd&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;ggml_set_i32_nd&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="946" column="6"/>
            <symbol>ggml_set_i32_nd</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;ggml_get_f32_nd&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;ggml_get_f32_nd&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="1057" column="7"/>
            <symbol>ggml_get_f32_nd</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;ggml_set_f32_nd&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;ggml_set_f32_nd&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="1077" column="6"/>
            <symbol>ggml_set_f32_nd</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;ggml_compute_forward_mul_mat&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;ggml_compute_forward_mul_mat&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="1205" column="6"/>
            <symbol>ggml_compute_forward_mul_mat</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;ggml_cpu_fp32_to_fp32&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;ggml_cpu_fp32_to_fp32&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="3210" column="6"/>
            <symbol>ggml_cpu_fp32_to_fp32</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;ggml_cpu_fp32_to_fp16&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;ggml_cpu_fp32_to_fp16&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="3214" column="6"/>
            <symbol>ggml_cpu_fp32_to_fp16</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;ggml_cpu_fp32_to_bf16&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;ggml_cpu_fp32_to_bf16&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="3274" column="6"/>
            <symbol>ggml_cpu_fp32_to_bf16</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;ggml_cpu_fp32_to_i32&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;ggml_cpu_fp32_to_i32&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-cpu/ggml-cpu.c" line="3281" column="6"/>
            <symbol>ggml_cpu_fp32_to_i32</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;dequantize_q4_0_f32&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;dequantize_q4_0_f32&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-opencl/kernels/get_rows.cl" line="25" column="6"/>
            <symbol>dequantize_q4_0_f32</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;mul_mv_mxfp4_f32&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;mul_mv_mxfp4_f32&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32.cl" line="53" column="13"/>
            <symbol>mul_mv_mxfp4_f32</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;block_q_4_0_dot_y&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;block_q_4_0_dot_y&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl" line="57" column="14"/>
            <symbol>block_q_4_0_dot_y</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;mul_vec_q_n_f32&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;mul_vec_q_n_f32&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl" line="85" column="13"/>
            <symbol>mul_vec_q_n_f32</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;mul_mat_q_n_f32_1d_16x_flat&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;mul_mat_q_n_f32_1d_16x_flat&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl" line="97" column="13"/>
            <symbol>mul_mat_q_n_f32_1d_16x_flat</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;mul_mat_q_n_f32_1d_8x_flat&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;mul_mat_q_n_f32_1d_8x_flat&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl" line="97" column="13"/>
            <symbol>mul_mat_q_n_f32_1d_8x_flat</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;block_q_4_0_dot_y_v&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;block_q_4_0_dot_y_v&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl" line="54" column="14"/>
            <symbol>block_q_4_0_dot_y_v</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;mul_vec_q_n_f32_v&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;mul_vec_q_n_f32_v&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl" line="101" column="13"/>
            <symbol>mul_vec_q_n_f32_v</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;rope_yarn_corr_factor&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;rope_yarn_corr_factor&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="31" column="7"/>
            <symbol>rope_yarn_corr_factor</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;rope_yarn_corr_dims&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;rope_yarn_corr_dims&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/src/ggml-opencl/kernels/rope.cl" line="35" column="8"/>
            <symbol>rope_yarn_corr_dims</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;make_backend&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;make_backend&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-cont.c" line="31" column="16"/>
            <symbol>make_backend</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;model_init&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;model_init&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-cont.c" line="46" column="6"/>
            <symbol>model_init</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;model_alloc&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;model_alloc&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-cont.c" line="61" column="6"/>
            <symbol>model_alloc</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;model_compute&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;model_compute&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-cont.c" line="66" column="6"/>
            <symbol>model_compute</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;model_free&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;model_free&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-cont.c" line="71" column="6"/>
            <symbol>model_free</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;custom1&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;custom1&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-customop.c" line="36" column="6"/>
            <symbol>custom1</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;custom2&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;custom2&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-customop.c" line="61" column="6"/>
            <symbol>custom2</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;custom3&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;custom3&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-customop.c" line="98" column="6"/>
            <symbol>custom3</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;custom&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;custom&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-customop.c" line="130" column="6"/>
            <symbol>custom</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;arange&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;arange&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-dup.c" line="7" column="6"/>
            <symbol>arange</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;dup_to&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;dup_to&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-dup.c" line="14" column="6"/>
            <symbol>dup_to</symbol>
        </error>
        <error id="staticFunction" severity="style" msg="The function &apos;can_dup&apos; should have static linkage since it is not used outside of its translation unit." verbose="The function &apos;can_dup&apos; should have static linkage since it is not used outside of its translation unit.">
            <location file="ggml/tests/test-dup.c" line="21" column="6"/>
            <symbol>can_dup</symbol>
        </error>
        <error id="checkersReport" severity="information" msg="Active checkers: There was critical errors (use --checkers-report=&lt;filename&gt; to see details)" verbose="Active checkers: There was critical errors (use --checkers-report=&lt;filename&gt; to see details)"/>
    </errors>
</results>
