File,Line,Column,DefaultLevel,Level,Category,Name,Warning,Suggestion,Note,CWEs,Context,Fingerprint,ToolVersion,RuleId,HelpUri
./OpenCC/deps/google-benchmark/src/colorprint.cc,92,14,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"  auto ret = vsnprintf(local_buff, size, msg, args_cp);",ae592a9c5cbb5964a366aebe2931b5b4328df5aa9db9ece0169488e4458f4968,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/google-benchmark/src/colorprint.cc,107,11,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"    ret = vsnprintf(buff.get(), size, msg, args);",70ff92feaed741b479dd154ac9cddb43fd40a43d00718ff12e7477df06cceed3,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/google-benchmark/src/colorprint.cc,146,3,4,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"  vprintf(fmt, args);",32aafab62bda8cf090bbce6d0efbb71f9cb7c029e79a7c784f4fef3986ec7ae4,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/google-benchmark/src/string_util.cc,139,14,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"  auto ret = vsnprintf(local_buff.data(), local_buff.size(), msg, args_cp);",b65d0329c35f0d53eedd6b62c44283d43df32fa997041f06f321451d9fb24c50,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/google-benchmark/src/string_util.cc,154,3,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,"  vsnprintf(buff_ptr.get(), size, msg, args);",449c5339e2bf318c3765c9189a0180e9aeb8b5c3bce88b266669345845f5c687,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/google-benchmark/src/string_util.h,23,23,4,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"__attribute__((format(printf, 1, 2)))",40ebd2b7ffe2033acbbfc099677f6eb8f0f19777c649cf3f9fe2d532ebf86534,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/google-benchmark/src/string_util.h,39,20,4,4,buffer,StrCat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,inline std::string StrCat(Args&&... args) {,38737835c209e6306d1b3b45d963dfdef3a47d4e30b58757353474382067fa56,2.0.19,FF1007,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/sysinfo.cc,19,8,4,4,buffer,StrCat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,#undef StrCat  // Don't let StrCat in string_util.h be renamed to lstrcatA,be97aa49577f0d37ffa5a9010b9e82f58fad6e188a839c5b6406e6a6a1a20d20,2.0.19,FF1007,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/sysinfo.cc,223,9,4,4,buffer,StrCat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,"        StrCat(""/sys/devices/system/cpu/cpu"", cpu, ""/cpufreq/scaling_governor"");",0a08e08458f5799d8c000fbd2c361339279f8c658395c4b6a5003556ae96553f,2.0.19,FF1007,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/sysinfo.cc,259,25,4,4,buffer,StrCat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,"    std::string fpath = StrCat(dir, ""index"", idx++, ""/"");",80316d15cf09e00523b27c0698a778a6e4ad39fbefe1e09d5675dc98894d69ef,2.0.19,FF1007,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/sysinfo.cc,260,21,4,4,buffer,StrCat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,"    std::ifstream f(StrCat(fpath, ""size"").c_str());",addbec5831c7a382ddad826906de7ab1cdb7b3957bd943b0699fc73414001355,2.0.19,FF1007,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/sysinfo.cc,276,23,4,4,buffer,StrCat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,"    if (!ReadFromFile(StrCat(fpath, ""type""), &info.type))",949519caaeb7509e56ecff56e3056270a412912d0faab8101aaa8955bef6b7c4,2.0.19,FF1007,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/sysinfo.cc,278,23,4,4,buffer,StrCat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,"    if (!ReadFromFile(StrCat(fpath, ""level""), &info.level))",3819bf3104afd3c7aa0b7267a62d7c500b9e9651554432d672496b32bfcbb786,2.0.19,FF1007,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/sysinfo.cc,281,23,4,4,buffer,StrCat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,"    if (!ReadFromFile(StrCat(fpath, ""shared_cpu_map""), &map_str))",3ca8fefbb7351a2358078a655dfbf8f0df2983367b9cf98e6e0ad8452deb7481,2.0.19,FF1007,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/timers.cc,21,8,4,4,buffer,StrCat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,#undef StrCat  // Don't let StrCat in string_util.h be renamed to lstrcatA,be97aa49577f0d37ffa5a9010b9e82f58fad6e188a839c5b6406e6a6a1a20d20,2.0.19,FF1007,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/timers.cc,191,51,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,#error Per-thread timing is not available on your system.,7107b875ae7ea60f7f1f91a55baf0d2588e9861e2d0faa05b817e1f112250fb3,2.0.19,FF1044,https://cwe.mitre.org/data/definitions/78.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/gtest-message.h,162,19,4,4,buffer,StrCat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,    *ss_ << absl::StrCat(val);,fc58a3572500b030bb8783c549dcfb0c8da32e9bbcf9034fe9ff49c08c8272d2,2.0.19,FF1007,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/gtest-printers.h,299,18,4,4,buffer,StrCat,Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).,,,CWE-120,    *os << absl::StrCat(value);,80958d4657585b645ad3cbd2be6af4e591aab1fadac717e135a15399c63f0a2e,2.0.19,FF1007,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-death-test-internal.h,201,5,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,    fprintf(                                                                 \,bbf55fcbae6c8f368fe3fc39f59862dd2e09b43f707b89a049faaa6063b82daf,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-port.h,803,25,4,4,format,printf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"  __attribute__((format(printf, string_index, first_to_check)))",2b13a43efc5e1cd8203e216b28ac26eedc4794691077dcee439d2816bb577593,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-port.h,2211,25,4,4,format,_snprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#define GTEST_SNPRINTF_ _snprintf,2753f624abbbf993d0fd023494106d8a60cd3a61fbc90fbab768bd14da144148,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-port.h,2213,25,4,4,format,snprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#define GTEST_SNPRINTF_ snprintf,de076dc462cbaca917c4777eceb1df7b9cb7551f0d9c3cd7e8bb3e03fb458a0e,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-death-test.cc,1206,3,4,4,shell,execv,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,"  execv(args->argv[0], args->argv);",408119309c8591bf6ac21def884ef81ddb55511c42112acac2c63d395de2d5ea,2.0.19,FF1043,https://cwe.mitre.org/data/definitions/78.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,135,9,4,4,format,vsnprintf,"If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).",Use a constant for the format specification.,,CWE-134,#define vsnprintf _vsnprintf,0163a4288d026df4a3e410764c13120a2e4244018d71e8d12f9a94570460e4e5,2.0.19,FF1019,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,3314,5,4,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"    vprintf(fmt, args);",32aafab62bda8cf090bbce6d0efbb71f9cb7c029e79a7c784f4fef3986ec7ae4,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,3336,3,4,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"  vprintf(fmt, args);",32aafab62bda8cf090bbce6d0efbb71f9cb7c029e79a7c784f4fef3986ec7ae4,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,3343,3,4,4,format,vprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"  vprintf(fmt, args);",32aafab62bda8cf090bbce6d0efbb71f9cb7c029e79a7c784f4fef3986ec7ae4,2.0.19,FF1016,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/googletest-1.15.0/googletest/test/googletest-death-test-test.cc,1335,9,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"        fprintf(stderr, InDeathTestChild() ? ""Inside"" : ""Outside"");",e94453369859b092532ca952228d7dd70f76106fc2ea69594dddab11ed397bdb,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/deps/googletest-1.15.0/googletest/test/googletest-death-test-test.cc,1347,9,4,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134).",Use a constant for the format specification.,,CWE-134,"        fprintf(stderr, InDeathTestChild() ? ""Inside"" : ""Outside"");",e94453369859b092532ca952228d7dd70f76106fc2ea69594dddab11ed397bdb,2.0.19,FF1017,https://cwe.mitre.org/data/definitions/134.html
./OpenCC/src/BinaryDict.cpp,174,5,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"    strcpy(pKeyBuffer, entry->Key().c_str());",724c03793e757c1b5efea84194da7a406371c9fce225bda4189f381933255f25,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/src/BinaryDict.cpp,180,7,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"      strcpy(pValueBuffer, svEntry->Value().c_str());",0524131a9d6047acd277e94d78038cec4eb38e5c9dad34a51777da9f8db8329a,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/src/BinaryDict.cpp,187,9,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"        strcpy(pValueBuffer, value.c_str());",d7858f07563a38bdf1be3c60d9008b076c873403ff143729b663796e79a244f7,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/src/Converter.cpp,35,3,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"  strcpy(output, converted.c_str());",ddd09e49f846e8a093574fabf3eaeb3bfa9b933afc7c19f26f6d40c58074bcad,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/src/SerializedValues.cpp,129,7,4,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).,"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).",,CWE-120,"      strcpy(pValueBuffer, value.c_str());",d7858f07563a38bdf1be3c60d9008b076c873403ff143729b663796e79a244f7,2.0.19,FF1001,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/test/CommandLineConvertTest.cpp,149,16,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,"  ASSERT_EQ(0, system(TestCommand(config, inputFile, outputFile).c_str()));",e0cf95899e9fccb0a6b014695f5d8aa20289fb6289adf0a60b35adfbfe7a4ca4,2.0.19,FF1044,https://cwe.mitre.org/data/definitions/78.html
./OpenCC/test/CommandLineConvertTest.cpp,166,16,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,"  ASSERT_EQ(0, system(TestCommand(config, outputFile, outputFile).c_str()));",4bcbf577df6153a29c5945e448451ef12e88bead74cc00b36d5f9c085b6b90fe,2.0.19,FF1044,https://cwe.mitre.org/data/definitions/78.html
./OpenCC/deps/google-benchmark/src/colorprint.cc,174,28,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","  const char* const term = getenv(""TERM"");",7c4f16a5dd7465b19c4046ec577d216e5598da2dbd33200ee8a86e9e5c47a175,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/deps/google-benchmark/src/commandlineflags.cc,127,33,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",  const char* const value_str = getenv(env_var.c_str());,6a10e88dfe1ed857e73c544d94d505de352a7091dccf7d339cf3e67116fbf0ed,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/deps/google-benchmark/src/commandlineflags.cc,134,33,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",  const char* const value_str = getenv(env_var.c_str());,6a10e88dfe1ed857e73c544d94d505de352a7091dccf7d339cf3e67116fbf0ed,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/deps/google-benchmark/src/commandlineflags.cc,147,33,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",  const char* const value_str = getenv(env_var.c_str());,6a10e88dfe1ed857e73c544d94d505de352a7091dccf7d339cf3e67116fbf0ed,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/deps/google-benchmark/src/commandlineflags.cc,160,29,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",  const char* const value = getenv(env_var.c_str());,e6c4582162fceffe1887f97f53251d401c2532dd1626ca721300396561c7ae41,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/deps/google-benchmark/src/commandlineflags.cc,168,33,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",  const char* const value_str = getenv(env_var.c_str());,6a10e88dfe1ed857e73c544d94d505de352a7091dccf7d339cf3e67116fbf0ed,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/deps/google-benchmark/test/commandlineflags_gtest.cc,15,23,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",    char* env_value = getenv(name);,0069ebe611b6d0354a1b3df15d52ee4fcc6ca51f2e7128c9147049d33d437860,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/deps/google-benchmark/test/output_test_helper.cc,481,20,3,3,tmpfile,GetTempFileName,"Temporary file race condition in certain cases (e.g., if run as SYSTEM in many versions of Windows) (CWE-377).",,,CWE-377,static std::string GetTempFileName() {,8804fb639fb2126105480eeb48c3d0d610e7a11a9932668b141db56e2c73ea09,2.0.19,FF1042,https://cwe.mitre.org/data/definitions/377.html
./OpenCC/deps/google-benchmark/test/output_test_helper.cc,498,31,3,3,tmpfile,GetTempFileName,"Temporary file race condition in certain cases (e.g., if run as SYSTEM in many versions of Windows) (CWE-377).",,,CWE-377,  std::string tmp_file_name = GetTempFileName();,6fa6e5ef4a6f248671ea7e0a14beafc88656e308274f16f80cb9905e8e22bebe,2.0.19,FF1042,https://cwe.mitre.org/data/definitions/377.html
./OpenCC/deps/googletest-1.15.0/googlemock/test/gmock-matchers-misc_test.cc,586,5,3,3,random,srand,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,    srand(static_cast<unsigned int>(seed));,b03613e5e7c174b192462b1d59d6aeb8bfbdc524da4f4295cebb5993fb0a9d7a,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/gtest.h,843,39,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,  void ShuffleTests(internal::Random* random);,2258a689b7fb360298dee7a2a97ef71716277b4ecec2b3412e98231924a548c7,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-port.h,2180,27,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",  const char* const env = getenv(name);,6c9c1a37e46dec87a25c9c139ada658e7a2ac70ef63217cbaf65bdce77115d76,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-port.h,2183,10,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",  return getenv(name);,9065dd259e91d8c4b408ff31f1786e81185492c7095dd1a2c4aa111e91f8a0bc,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-internal-inl.h,305,37,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"void ShuffleRange(internal::Random* random, int begin, int end,",9806393a1dfdac5ed0c6a725daca90a65a03ca685ca065e2f9ea18d716083167,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-internal-inl.h,329,39,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"inline void Shuffle(internal::Random* random, std::vector<E>* v) {",2beafb832478f260b9d17381feb280d7c108ef6c666a48b1ea751862400b80e5,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-internal-inl.h,330,16,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"  ShuffleRange(random, 0, static_cast<int>(v->size()), v);",63032caa493d779d7e6fd952cb2ea6f4460f7a039ae80815a0a6e1a6bcd2fd3c,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-internal-inl.h,815,21,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,  internal::Random* random() { return &random_; },563419f57327ec1af66ab292b011d4713272584d85c458826f727986139f331c,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-port.cc,310,5,3,3,misc,InitializeCriticalSection,Exceptions can be thrown in low-memory situations.,Use InitializeCriticalSectionAndSpinCount instead.,,,  ::InitializeCriticalSection(critical_section_);,9591db197ddfb6ebec7b0b5a9aa806b1c63eac5c5709da831e92cd8673d147f5,2.0.19,FF1057,)
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-port.cc,398,11,3,3,misc,InitializeCriticalSection,Exceptions can be thrown in low-memory situations.,Use InitializeCriticalSectionAndSpinCount instead.,,,        ::InitializeCriticalSection(critical_section_);,9591db197ddfb6ebec7b0b5a9aa806b1c63eac5c5709da831e92cd8673d147f5,2.0.19,FF1057,)
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,3099,48,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,void TestSuite::ShuffleTests(internal::Random* random) {,317616daf0d658d3ef928df19577c021c71aacf1c6baf9bcb14ef98ca0f78af5,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,3100,11,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"  Shuffle(random, &test_indices_);",131cb818f54b9ab8c43a673f74bc70f394b20a8356d6ff0c636916a3dccf9a04,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,5928,7,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,      random()->Reseed(static_cast<uint32_t>(random_seed_));,e144abb6d0fdb10a9b0ea7358e69fbcdcce00ee4f99df6e7d3d89f1a5ba7d9fd,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,6317,16,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"  ShuffleRange(random(), 0, last_death_test_suite_ + 1, &test_suite_indices_);",be189340734f596013b315270b7ee662b050f1a9ff72969d4c952e59e2b0c53f,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,6320,16,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"  ShuffleRange(random(), last_death_test_suite_ + 1,",7c0314fe23e1bcf29297c1e7f447a0c7a5dc0dd3b3e72bb71b110eedc9261cb0,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,6325,30,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,    test_suite->ShuffleTests(random());,431dfb71e532002d0be6b711eeae96392caf8fe7cad784b3bb29e81bbeb553c7,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_dirs_test.cc,20,29,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20",    const char* old_value = getenv(name);,6463c9391de8670ca14811b6872684d74689682715f2b16faa9c32909f6527ea,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,446,26,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","    if (const char* tz = getenv(""TZ"")) {",5503c73c1890044fe076c1c5c78fe021649d6923d026938eff925419ccf8bd28,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,791,29,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,  testing::internal::Random random(42);,4517d17dec7d9c4bb6854c10d30caaaa91a27da0afaefd5725d4f7f7e48b1f24,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,792,29,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"  EXPECT_DEATH_IF_SUPPORTED(random.Generate(0),",cef28e130cae89535ed0e80154b665160fb9672f4f08f9cc5b3ce1f88a0f8a3a,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,795,7,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"      random.Generate(testing::internal::Random::kMaxRange + 1),",10bf7a65ad26824c4abd5368ee75d5ab5e6525aba751ed79fced66e56d4ff441,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,802,29,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,  testing::internal::Random random(12345);,10ddd19d0ae94604c91ff4bd70c4c09eed94301446fb1b556febea853ed932bc,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,804,15,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"    EXPECT_LT(random.Generate(kRange), kRange) << "" for iteration "" << i;",980b4f3fdbc55888eaac8bf74707169f6a6949911905da2f84062bd53cfb46af,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,819,29,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,  testing::internal::Random random(kSeed);,8044c4047aa37fbd705b741299a0fc4068224373f2e6c7a2ec12e18564d7e46a,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,821,17,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,    values[i] = random.Generate(kRange);,52cf593375fb237e7763d8b8c757a475e614ad30dac6d261a576aee557311736,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,824,3,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,  random.Reseed(kSeed);,c2709eb200531ad04e7865042c6fb3fadc930c46ae2e6c7a36d38e936102bf11,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,826,26,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"    EXPECT_EQ(values[i], random.Generate(kRange)) << "" for iteration "" << i;",261aa86c45dfb95f46235a63e52903dcd9db227c0cb109539c99034bba3c8c99,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,891,29,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,  testing::internal::Random random(1);,4fa0e82f6e4b21034cab05c88bc64dfedc8e7fccaf58dbfbda84b5d74b3f1968,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,894,21,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"      ShuffleRange(&random, -1, 1, &a),",4db8ea8d56fecdd4ddc6ea1f8d0472ff864015e949449032a966495e8576d6f6,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,897,21,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"      ShuffleRange(&random, 4, 4, &a),",69be68ffa2a6d4b260c60e56f5c7f64667fa2844113e08118ad2d1dae321ee40,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,900,21,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"      ShuffleRange(&random, 3, 2, &a),",cf473e1c5eb6bb33e3f16444f7717b946083ce6bfc0857a43770b21fcb0566fd,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,903,21,3,3,random,random,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"      ShuffleRange(&random, 3, 4, &a),",77fb546eb9babef44a4701452ff549be8688b3ea4112ea26efbad66a8b9542e2,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/detail/init.h,366,6,3,3,random,setstate,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"void setstate(value_and_holder &v_h, T &&result, bool need_alias) {",531e657770914cff34886b166ad8b65d2c3a752a367ebbf657a36c1f243fa6e9,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/detail/init.h,375,6,3,3,random,setstate,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,"void setstate(value_and_holder &v_h, std::pair<T, O> &&result, bool need_alias) {",d77edf71eb61bad027c0aac74b79891641e5ce73b5e4207667d7ac1702ed81a5,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/detail/init.h,424,17,3,3,random,setstate,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,                setstate<Class>(,704f71afea6ad8d388437bf947ff051f1833b9c06888c6a4c4b16c7e6328a9fb,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/pybind11.h,2291,35,3,3,random,setstate,This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).,Use a more secure technique for acquiring random values.,,CWE-327,                detail::initimpl::setstate<Base>(,bda68e52888e80a965e23ed8339768d7bcfd971579bdd8db15cd6204e58e4180,2.0.19,FF1048,https://cwe.mitre.org/data/definitions/327.html
./OpenCC/deps/pybind11-2.13.1/tests/test_embed/catch.cpp,23,42,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","    const char *preexisting_pythonpath = getenv(""PYTHONPATH"");",fa9e31345a6c372bccb713b1e0303d5185edecb51773768db877a69780b8927b,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/src/tools/CommandLine.cpp,91,43,3,3,tmpfile,tmpnam,Temporary file race condition (CWE-377).,,,CWE-377,    const std::string tempFileName = std::tmpnam(nullptr);,6e8838ef53c37de414c4592be1839456f06ed1a360e8fb957529d39f5113f311,2.0.19,FF1037,https://cwe.mitre.org/data/definitions/377.html
./OpenCC/src/tools/CommandLine.cpp,95,34,3,3,buffer,getenv,"Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).",Check environment variables carefully before using them.,,"CWE-807, CWE-20","    const char* tmpDirEnv = std::getenv(""TMPDIR"");",9a77608d9894211e95796b52e30a853298966b4ba9b1b7b81fba74173fbb3431,2.0.19,FF1053,https://cwe.mitre.org/data/definitions/807.html
./OpenCC/data/dictionary/DictionaryTest.cpp,64,7,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"      fopen(UTF8Util::GetPlatformString(dictionaryFileName).c_str(), ""rb"");",fe34c7601ffb778568e86631bd244509d4d053c99633705dfa5acc986e92c974,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/data/dictionary/DictionaryTest.cpp,74,18,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  FILE* fp_bin = fopen(,ed59f4529b5e033981f5071708340cf0385b06832c978c5b94c1c8d2f0ef6d31,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/data/dictionary/DictionaryTest.cpp,83,7,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"      fopen(UTF8Util::GetPlatformString(textDictionaryFileName).c_str(), ""rb"");",a2b7f2a3ef08117832487d7e396af4c4f5886db5eea8425db41852d511e843a2,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/darts-clone-0.32/darts.h,242,7,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  int open(const char *file_name, const char *mode = ""rb"",",45f79fe0b8c21a4a3107091c194e4b61c1ea3ace6920562aec46a301a948c4dc,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/darts-clone-0.32/darts.h,327,34,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"int DoubleArrayImpl<A, B, T, C>::open(const char *file_name,",07f50408452a71398b02abcedd44d94261acee7366cf6ce9d829c247e619393e,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/darts-clone-0.32/darts.h,335,26,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  std::FILE *file = std::fopen(file_name, mode);",b153fe7285f70d6f3fe47052d39f600e38e67034a5328f0822fa036dbaa61ad3,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/darts-clone-0.32/darts.h,391,26,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  std::FILE *file = std::fopen(file_name, mode);",b153fe7285f70d6f3fe47052d39f600e38e67034a5328f0822fa036dbaa61ad3,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/google-benchmark/src/benchmark.cc,513,17,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,    output_file.open(fname);,b8ca2890e3e9ef2d9e156d25f72e69448903565412dadc86631cb99493d7fd20,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/google-benchmark/src/colorprint.cc,91,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char local_buff[256];,cfc7294d5c999da4f2f25f7946ed034ac0388e219f075b1b983115d655cfdaae,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/src/sysinfo.cc,101,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char bytes[8];,eee2cbe67b8158ec9d4d457a3e052567c8855378cf7cc9a87093149fb1433450,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/src/sysinfo.cc,137,10,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"    std::memcpy(arr.data(), data(), arr_size);",b32a4ddb6d4252b4f9c01fd2e8789dde609f18009cae5c8339a1e633bc892a45,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/sysinfo.cc,420,3,2,2,buffer,TCHAR,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  TCHAR hostname[COUNT] = {'\0'};,4f044b28fd1f68b2328941b9252f9c4706703e5a33ba6fbd21c149143bd2ab48,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/src/sysinfo.cc,459,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char hostname[HOST_NAME_MAX];,3dae75f44c7586565de5b5935394336f85a01dfe49e477a58037302bf308d464,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/src/timers.cc,217,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char tz_offset[41];,c84779a4260af2601cc09f24a12d25e0bc36ea1b3d632ecba7e4a5aaba834d14,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/src/timers.cc,219,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char storage[128];,ce282118cc85d7b69ebf405a9f39be967df633cf231ecf2e52e674948fc6f409,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,20,21,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    static unsigned char arr[2] = {};,92b1030d551b3f6b48996a955ff5fd34ea6bc9cf26f1ae69ce3ad54684bec3aa,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,32,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  char buffer1[1] = """";",07866f1bd635a3d6e5789eec0b2052e6455eeb732914c9b53eec397797b8f325,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,35,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  char buffer2[2] = """";",584e481e0a705fb3832265bbb3e6030afe0d1717f35af1d197946cdfe1672e53,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,38,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  char buffer3[3] = """";",cd39f5fe8b7151e164b6b07e08d168ec0a06f37dabaa3bd125913d24256cba5d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,41,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  char buffer8[8] = """";",7f5de4eae3a79719f9b990e73b73f436c83999c89d5ff2826002d9b60ad54158,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,44,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  char buffer20[20] = """";",421f589c294a303fa4c62be28c9d6914adc91ad5b0692ea90a0744045b6bd615,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,47,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  char buffer1024[1024] = """";",efaf7b7fea9ebc6527761ed07d2b96b5bc7c195076180f5526301bc4e398e423,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,51,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  const char const_buffer1[1] = """";",5e62f8ab005102b4e5f020e3814c2c93f1ef9aea4137e31bed3a2011f6e66d8c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,54,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  const char const_buffer2[2] = """";",1c4a8b18e5910428594cb3d74f7cf8f55e47e0a8a89d145c5ecd4c578b91bc0b,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,57,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  const char const_buffer3[3] = """";",f31ee4ae3f44171887e0b2e42faf6fd751b1e6d1a8d8a9f3a9f9bfaa0eef234d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,60,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  const char const_buffer8[8] = """";",0f5a77c505746a4f02a3d82ba9e39fb6672223ee94044c6f14f749324121c308,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,63,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  const char const_buffer20[20] = """";",8a7cebab022d56b648c7d9fe6de7bdcbba4483b020163c336d5b9a4e82ec2130,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/google-benchmark/test/donotoptimize_test.cc,66,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  const char const_buffer1024[1024] = """";",ba35e1af2f0cd3c007664ee22c8b03629bafee84ee04ee55e1b5ae00dc296795,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googlemock/test/gmock-internal-utils_test.cc,457,20,2,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190).","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended).",,CWE-190,  int skip_count = atoi(log.substr(expected_message.size()).c_str());,c9eb4b21fbeebdbf38a77ece83fe6e8afe776f45b5ad0e6e2de0ea701c07a420,2.0.19,FF1047,https://cwe.mitre.org/data/definitions/190.html
./OpenCC/deps/googletest-1.15.0/googlemock/test/gmock-more-actions_test.cc,624,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char ch[4] = {};,35390683c436833bd9e1019cd74cf4bd8b85efd00b26c55ffd87165121d9be33,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-port.h,2145,10,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  return fopen(path, mode);",180e6d44f8dc39eed5995da7d89f31be0ecb57a45756aa80d0364fe2f4b34899,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/googletest-1.15.0/googletest/samples/sample2.cc,42,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  memcpy(clone, a_c_string, len + 1);",c719a5095806acea84721b8269d3d2b5a3c9a60ac6b7fb2a0adb7c3efdcb5991,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-death-test.cc,356,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char buffer[256];,d5d907b68d99be1baddc98e0fc166ee114af89e675d9dc4fd79eb10ffb032b27,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-death-test.cc,792,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char executable_path[_MAX_PATH + 1];  // NOLINT,fa04b0314b2e43bb66452f54ef23f69220e49ba71f57ea4a2111c3b7a7d2c06e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-death-test.cc,1263,22,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  const int cwd_fd = open(""."", O_RDONLY);",5109e33115848d9a14c4ce8fcc7411f48e4e8f518af5d063382acdb31a57f708,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-filepath.cc,111,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char cwd[GTEST_PATH_MAX_ + 1] = {'\0'};,4af2f808a89b1e26925be2b096f58b00272953f23e897c6763b8f9879af6ff4a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-filepath.cc,114,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char cwd[GTEST_PATH_MAX_ + 1] = {'\0'};,4af2f808a89b1e26925be2b096f58b00272953f23e897c6763b8f9879af6ff4a,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-port.cc,220,18,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  const int fd = open(""/proc/self/as"", O_RDONLY);",96b7c858bc26eafd6ee11be278cafd7162f9da5decd27fd196b6244136f2bcaa,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-port.cc,1073,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char temp_dir_path[MAX_PATH + 1] = {'\0'};   // NOLINT,c7b5feb3eb92baf3162839ca15229bcff112ef70b2426a02ad20f55b3ce1240e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-port.cc,1074,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char temp_file_path[MAX_PATH + 1] = {'\0'};  // NOLINT,0ca34dc4fd3daa328c806e412a77c5aef2e029b3472662bc2b5766352da41042,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-port.cc,1111,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char user_temp_dir[PATH_MAX + 1];,bd61f62e6372f66b7b4e37d6e3a3acb9478f984308112299626f782312a34451,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-port.cc,1142,31,2,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).",,,CWE-377,    const int captured_fd = ::mkstemp(const_cast<char*>(name_template.data()));,1c7e4d1162dbcf609ce46e7cc0e1645451d47b9ba37264ce76cf9777001763fd,2.0.19,FF1039,https://cwe.mitre.org/data/definitions/377.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-printers.cc,72,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  char text[5] = """";",53200e04f76f14f937bdaa8549fe8d3c24560aff72582c0d5beb04c9bf6b7531,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-printers.cc,298,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char buf[40];,443b5883226e16d46cd88dfb8bff3801490a0d587f8a86fbd4165da22e8465dd,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,1220,7,2,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120).",,,CWE-120,"      MultiByteToWideChar(CP_ACP, 0, ansi, length, nullptr, 0);",c244782f7c0f6ae8e3f133b447848773ccedd33ff7e0c3981190212082d5d20c,2.0.19,FF1023,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,1222,3,2,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120).",,,CWE-120,"  MultiByteToWideChar(CP_ACP, 0, ansi, length, unicode, unicode_length);",5fee38c177554f3c426fb7f4af508912dabfde5fe3b06c4a166768e6dbaffaa8,2.0.19,FF1023,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,1934,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char error_text[kBufSize] = {'\0'};,c50fd1edca620c70d54fe306bf290943b3314e43b3d225951eeb2e416cc32b5c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,2020,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char str[5];  // Big enough for the largest valid code point.,9c5c8f44e2ba5d3de172c69480154502d45b69a786c5f6952cd8e1105acdc3de,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,5047,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char tmp[1024];,f8932fafe14ddcb2995e5989ad71424504786fc9a2388a3c6f4c92657628b738,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,5053,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char line[1024];,5f7c8de949da56768253d9720bc45f0c5abcad22f8508d2df1b41eee3d14c498,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/test/googletest-filepath-test.cc,361,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char current_drive[_MAX_PATH];  // NOLINT,b3c1e28879e307c89e194ebd80f04a3cd5cb663a93ea59c6663c4891d88e3b44,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/test/googletest-filepath-test.cc,378,7,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,      char non_drive[_MAX_PATH];  // NOLINT,7bc4a60b2eea2278d4b25d384b3e1a60c2598b3c117ac6a24173fc5425d7be10,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/test/googletest-printers-test.cc,149,32,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"  UnprintableInFoo() : z_(0) { memcpy(xy_, ""\xEF\x12\x0\x0\x34\xAB\x0\x0"", 8); }",f8123a8956b195365d45eb07c7407d3b244a19a6480462988ad236d1e9f70133,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/googletest-1.15.0/googletest/test/googletest-printers-test.cc,153,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char xy_[8];,c791a8e3a07547bb8aa6b60c2985503bde9d4d75534c4dcddebb2678933e20dd,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/test/googletest-printers-test.cc,1326,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char array[257];,265e9bfdf2ca78391ca516d8adc8d051e9e34c0603f0dc4b1c377083c64abbd9,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,7396,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  const char a[3] = ""hi"";",0d549e67eea79424127e9b9eb7726689fd2ab6710b8453328aef7c07db27bd4e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/googletest-1.15.0/googletest/test/gtest_unittest.cc,7480,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"  const char a[2][3] = {""hi"", ""lo""};",3195e3d0ad0b5ff282c6d93abe4fa5adb03e39db795fff34b7de6be180351593,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/mapper.cc,54,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,void Mapper::open(const char *filename) {,dfd303c2a3007cd461fcb2d779eeaac70b8eacc00abb3bfa647a657c649c6c6f,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/mapper.cc,62,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"void Mapper::open(const void *ptr, std::size_t size) {",b080120ca64b6b1829c88e38e148f88410113471d470cf7ffaa7b5cca880156b,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/mapper.cc,145,11,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  fd_ = ::open(filename, O_RDONLY);",57642cd698019757c2d267b410e9f9724c19fc76ec8c12af5f7c23c5fb807464,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/mapper.h,17,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  void open(const char *filename);,80110d552de5aa2d027704fecb21e47a859feb67bd039ce59ce1c2fe2d8ded08,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/mapper.h,18,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  void open(const void *ptr, std::size_t size);",2c5d059e508ca75861221aa07eb6501ede4abf5ec4a25410be534f97db845348,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.cc,26,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,void Reader::open(const char *filename) {,49e56fc22a1938d753198a1ca402681380f2989ce4e0c4c2086b09b5e0e4bb02,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.cc,34,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,void Reader::open(std::FILE *file) {,8754cde65d193bd8f092e5d05f6c0b63a7eb85c0eeafe36d26528509cadf8a03,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.cc,42,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,void Reader::open(int fd) {,3dfebe9d610b29bcd40836a23f57b596dee966c1b7072470c135e1da0d12e5de,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.cc,50,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,void Reader::open(std::istream &stream) {,6a2616a075bff77b8ed7034bab6881bd4ff5299de40d33c40c9aad128839ddb9,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.cc,72,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char buf[16];,f8bd72609fcf9e1123e74ed2ab5aa38f49593871255165d3086feea1a0957480,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.cc,75,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char buf[1024];,5065f5757ec562d76d80e513ac33668b30265995d34290fc3fe7083c178c0622,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.cc,93,12,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  file = ::fopen(filename, ""rb"");",bf01be2a2391ba076904fcae3cbb9053665457193877c8aac7366b786bf6c22e,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.h,18,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  void open(const char *filename);,80110d552de5aa2d027704fecb21e47a859feb67bd039ce59ce1c2fe2d8ded08,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.h,19,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  void open(std::FILE *file);,3b535591ff83475f50487e37a3d2b965c21e8328248b084dc0f3f636cdf00e0b,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.h,20,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  void open(int fd);,70472e41b4a07a362c5b0dad425cce699cc230f9a3405fcf66b173f8a1905c8c,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.h,21,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  void open(std::istream &stream);,059b545f702fef10ba811d843c7b16480aa0dd16d4f338431b3b3a6cf01b8fb3,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/writer.cc,26,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,void Writer::open(const char *filename) {,bab1fd20dcc8f79ebd3a204b075d27ef03c7fe1fcb21159f7a86456fdac244ca,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/writer.cc,34,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,void Writer::open(std::FILE *file) {,219c8cd2c536102fc82e2310150121138ad3537fea3ad1642256cdf10154711f,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/writer.cc,42,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,void Writer::open(int fd) {,0fefb59ef46cbc069a0f4600d238c33de7797cb70efcd8c095888eaf9246f54a,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/writer.cc,50,14,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,void Writer::open(std::ostream &stream) {,bee5388c2e33c34def45188b55c3835795071214b4cf96bff9fc2004a88ebaee,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/writer.cc,72,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    const char buf[16] = {};,69841dd9251eee052c377f34e366f4d425d617d0479a9b9831d8c0087b564458,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/writer.cc,75,11,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    const char buf[1024] = {};,678e15afd250b4817f1d151125ff6554b17a00f05f64e92f56b895bd7b65b95c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/writer.cc,93,12,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  file = ::fopen(filename, ""wb"");",8a6e72650a44fe095832adcaf5523b3181686b562deecad72f7d36bc33e45405,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/writer.h,18,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  void open(const char *filename);,80110d552de5aa2d027704fecb21e47a859feb67bd039ce59ce1c2fe2d8ded08,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/writer.h,19,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  void open(std::FILE *file);,3b535591ff83475f50487e37a3d2b965c21e8328248b084dc0f3f636cdf00e0b,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/writer.h,20,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  void open(int fd);,70472e41b4a07a362c5b0dad425cce699cc230f9a3405fcf66b173f8a1905c8c,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/writer.h,21,8,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  void open(std::ostream &stream);,c7e3af88323d2892f88ed4f868f141ec938e1542ba347f981baec43e594cb888,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/header.h,24,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char buf[HEADER_SIZE];,fc0ddd0da5f5b7fb8e9ab7301f16b7f559a2dd5a9ced30fa2b02967dba95d3ff,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/header.h,39,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"    static const char buf[HEADER_SIZE] = ""We love Marisa."";",85862b3e8d402b82195a3bacc1a874ec7981d9120268fa401ee62458cdc6ce3e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,27,10,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  mapper.open(filename);,a40f5ad8a147d716a394e3239d08fc14c4cbf1ee43eef363cb0af0368cf971ec,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,39,10,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  mapper.open(ptr, size);",db4c28aaa04ddfddcd8c9f656b6064e1909a29d536cef2d64475ddaaeee4ec53,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,51,10,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  reader.open(filename);,055afed5ef7ddd3bf215c0f27e4cc5d84e33e23275f35a30faf943fb41fec0f9,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,63,10,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  reader.open(fd);,2221ce5f4df5ee98558899777d58d8ea43ae06ff1ddcff9763dbf44034423bec,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,73,10,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  writer.open(filename);,21430c8ef35185cdbcb2f810d0c6411b9cac3938b794d6ac8bf4c0287798bb4a,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,82,10,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,  writer.open(fd);,795c2cb0dbcbc2ce81efcdff0faaef6e9221b7e49fd6bf282430d2200c5c730b,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,187,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,    reader.open(file);,72688e00c860f46bc8b1e8e99dbd6359d26561487ae7a362f60d56e1581f53ff,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,195,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,    writer.open(file);,65891a3d4b67ed92adcf4b70824f8ef491f3e68e7646f7c5ea4601949a6cb369,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,207,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,    reader.open(stream);,888ce62f9037fb5839cdb1c97c7a8c1754f128b2ba7ec206a54505c0b687a014,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,215,12,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,    writer.open(stream);,c3247cd8d8ab795323ce2673790905b1d2f0fabbbdc1a4a51f890254f0fa1bc6,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/complex.h,26,28,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"    static constexpr const char value[3] = {'Z', c, '\0'};",85e99897ffbfda5bb187738f40412b509f296a77d379f4bfd1517753b0df89d6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/detail/class.h,671,14,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        std::memcpy((void *) tp_doc, rec.doc, size);",83d5e58c7385be52cb7d69aeb12e983f5b5fdb3a7a0b77318ed80d03926ad96f,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/detail/common.h,1043,28,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"    static constexpr const char value[2] = {c, '\0'};",85c51c87e44042b1e9023e0ba572983a7000a44f942655df85bb274539001fbe,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/detail/common.h,1076,28,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"    static constexpr const char value[2] = {c, '\0'};",85c51c87e44042b1e9023e0ba572983a7000a44f942655df85bb274539001fbe,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/detail/descr.h,26,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char text[N + 1]{'\0'};,ebd94bae2589be9889b47f375f77718daffa3509e8eb72a93c3a09e638a3dd53,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/detail/internals.h,156,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char padding[64 - (sizeof(std::mutex) + sizeof(instance_map)) % 64];,2f2427892dbeb394af65fc6f20a8b56b159edfe76fe0384845e173ec03ea7128,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/embed.h,119,51,2,2,buffer,wchar_t,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    std::unique_ptr<wchar_t *[]> widened_argv(new wchar_t *[argv_size]);,91a9ef1c19c919e2d547badb97552d207debfb15578b13f98a4271bbaa73ce95,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/gil_safe_call_once.h,83,16,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    alignas(T) char storage_[sizeof(T)] = {};,c96c0f1c02b16b2f1042c4c29ddec097ea508b51c07b6d6fde8d090c38eed4ce,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/typing.h,105,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char name[N];,cee2a3bca925fcee3d0d1c0cc7b888e06356a1527123792776815811e62a4fb1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/pybind11-2.13.1/tests/test_buffers.cpp,66,13,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            memcpy(m_data, s.m_data, sizeof(float) * (size_t) (m_rows * m_cols));",7344a00f5f4830f4defcd67856a50cecb5dec9271a11ced45c6bc2937a2ce5e2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/pybind11-2.13.1/tests/test_buffers.cpp,92,13,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            memcpy(m_data, s.m_data, sizeof(float) * (size_t) (m_rows * m_cols));",7344a00f5f4830f4defcd67856a50cecb5dec9271a11ced45c6bc2937a2ce5e2,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/pybind11-2.13.1/tests/test_buffers.cpp,139,13,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            memcpy(v->data(), info.ptr, sizeof(float) * (size_t) (v->rows() * v->cols()));",5689d4ed2b94f39c394e15f77c00b40c36e02bafe53af842eef9d6ffa8afeea8,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/pybind11-2.13.1/tests/test_embed/test_interpreter.cpp,439,17,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,    test_module.open(module_file);,b03f759b4a93fd4527dff1fe94dcda9322e9f58de426afc88c56b85981a22cf8,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/deps/pybind11-2.13.1/tests/test_numpy_dtypes.cpp,77,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char a[3];,fe812a28920a1f8ff96c7f0c5935991e87cb2cdfcb225cda7b63bd2c34cf3fdd,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/pybind11-2.13.1/tests/test_numpy_dtypes.cpp,91,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char a[3][4];,abddaa334cabe865f9951219796df8e826e27540a82311872e9d6284dd61a599,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/pybind11-2.13.1/tests/test_sequences_and_iterators.cpp,184,13,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            memcpy(m_data, &value[0], sizeof(float) * m_size);",8fe689bd49fc41ab57af9db84938691e79541762823c9b524df574c5219d3960,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/pybind11-2.13.1/tests/test_sequences_and_iterators.cpp,190,13,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            memcpy(m_data, s.m_data, sizeof(float) * m_size);",db42d12cd7dc34cc236a9129f4235dca0b6667cb114d0af270d005d575a1ce68,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/pybind11-2.13.1/tests/test_sequences_and_iterators.cpp,208,17,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"                memcpy(m_data, s.m_data, sizeof(float) * m_size);",db42d12cd7dc34cc236a9129f4235dca0b6667cb114d0af270d005d575a1ce68,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/allocators.h,217,22,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"                std::memcpy(newBuffer, originalPtr, originalSize);",94044e2afbf98a2ca3e157d131591ed227a102557b72b418ce40263d66479f1d,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/document.h,1058,20,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,            static char buffer[sizeof(GenericValue)];,b1ae3f7cd189eef92c3755ba8560cc561ca733952dc438e070bd5fe448894a56,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/document.h,1845,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        char payload[sizeof(SizeType) * 2 + 6];     // 2 x SizeType + lower 48-bit pointer,f90464e6f9a390235e5879553281a605ea7d03f0257ae83463eef1ee54095e3c,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/document.h,1847,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        char payload[sizeof(SizeType) * 2 + sizeof(void*) + 6]; // 6 padding bytes,8eb49e69ab5d90758e509a700d0fa9ac75f9845dcb469c470358dc3d0c169084,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/document.h,1849,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        char payload[sizeof(SizeType) * 2 + sizeof(void*) + 2]; // 2 padding bytes,a7b7e2f537b65ffee4decce2b9086bd95172b9219ec5bce365b8c920fa09a6b4,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/document.h,1882,13,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,            char padding[4];,50660a4f45b64d02d4ccb1b9830e455800a8be898dcf0c064610e4a7df29804d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/document.h,1886,13,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,            char padding2[4];,1dcb9fc3c287b422de98da21bf0a1f1060c27cc8f44264c884ea475229a65628,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/document.h,1890,13,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,            char padding[4];,50660a4f45b64d02d4ccb1b9830e455800a8be898dcf0c064610e4a7df29804d,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/document.h,1894,13,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,            char padding2[4];,1dcb9fc3c287b422de98da21bf0a1f1060c27cc8f44264c884ea475229a65628,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/document.h,1937,18,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            std::memcpy(e, values, count * sizeof(GenericValue));",87e5d3a039935a4bc24ab1fde790883cc2e512004db56e4044416e36958a3f82,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/document.h,1950,18,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            std::memcpy(m, members, count * sizeof(Member));",58ce362bc47742c78b51bfe7e334a68214ad1dd48317a2c86cba9cd61fef17ec,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/document.h,1977,14,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        std::memcpy(str, s, s.length * sizeof(Ch));",20c201cf3b8a7dbb29fbc57a9f7fa34ab857da9b2c94304ac1c7dfee40aea4ac,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/internal/biginteger.h,33,14,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        std::memcpy(digits_, rhs.digits_, count_ * sizeof(Type));",e901451c5b1ddec3d7857ddab6e53d721b43b574eee1139ad126b7d3a275c152,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/internal/biginteger.h,59,18,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            std::memcpy(digits_, rhs.digits_, count_ * sizeof(Type));",e901451c5b1ddec3d7857ddab6e53d721b43b574eee1139ad126b7d3a275c152,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/internal/itoa.h,24,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    static const char cDigitsLut[200] = {,50e3380408e1df8f810fa602dfaa001f020f265ed7140d748133c3eaaf55abd6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/internal/regex.h,474,9,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        memcpy(s, &GetState(src.minIndex), count * sizeof(State));",e8bfd1783f9d31dc1d6bead33959abffa6dd4361351ca810eec84d74dd9c4356,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/pointer.h,215,14,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"        std::memcpy(p, token.name, (token.length + 1) * sizeof(Ch));",a252998c420db97a96397c511f0e0cc5f1504c21eeb70014c70481ac21c0a9b1,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/pointer.h,265,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        char buffer[21];,c215488e8b885c7888fd38e3a10c93c3ab3660050e88b97d4a0d7351f813c671,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/pointer.h,771,18,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            std::memcpy(tokens_, rhs.tokens_, rhs.tokenCount_ * sizeof(Token));",be72422d02d32d85f2f6da0884ecad47ea778362fad8fbe8a48ed73c1d4eed04,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/pointer.h,774,18,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"            std::memcpy(nameBuffer_, rhs.nameBuffer_, nameBufferSize * sizeof(Ch));",c982c284ca56e41f280d6eab1bc1b045bcc6b2bf5c9595aa16d5bfbce651b739,2.0.19,FF1004,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/pointer.h,1030,26,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"            static const char hexDigits[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };",49aac94464b22c634aafcabe5f4fe8831ab00fb5f1d4f7050ad6ca493686ac83,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,297,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"    static const char whitespace[16] = "" \n\r\t"";",cd4ce77f7fdd32d6d00440a61a89d41eeb3a51700bece607fefd09e961a94e49,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,323,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"    static const char whitespace[16] = "" \n\r\t"";",cd4ce77f7fdd32d6d00440a61a89d41eeb3a51700bece607fefd09e961a94e49,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,363,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"    static const char whitespaces[4][16] = { C16(' '), C16('\n'), C16('\r'), C16('\t') };",15d99bf002608138fd0e1455003c8dde123e08d6f483dce3a85bffdcda06ab68,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,399,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"    static const char whitespaces[4][16] = { C16(' '), C16('\n'), C16('\r'), C16('\t') };",15d99bf002608138fd0e1455003c8dde123e08d6f483dce3a85bffdcda06ab68,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,843,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        static const char escape[256] = {,0b61f6b0e4acaeae03b87ff11d74800fc7ba460266904212b1d720977c24e5ca,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,928,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"        static const char dquote[16] = { '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""' };",6f86602b6f2cfd34b9ddf9665572f8c3566c165b0cf3eb56f7f81c4e1a6d7196,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,929,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"        static const char bslash[16] = { '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\' };",569488f07a00754b71448814752174689ce8d1bfd26a3230dfd6210476ae6a82,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,930,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"        static const char space[16]  = { 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19 };",f429624384c6221c3b6d1d47d5b329b884c99ce0e726ae77a8a4ecb33e4a7545,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,989,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"        static const char dquote[16] = { '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""' };",6f86602b6f2cfd34b9ddf9665572f8c3566c165b0cf3eb56f7f81c4e1a6d7196,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,990,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"        static const char bslash[16] = { '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\' };",569488f07a00754b71448814752174689ce8d1bfd26a3230dfd6210476ae6a82,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,991,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"        static const char space[16] = { 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19 };",fe95176f34fc3e61188cfe9e9cf29ffc1b7e36d94a44ee97ba6213ebd73e5e73,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,1037,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"        static const char dquote[16] = { '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""' };",6f86602b6f2cfd34b9ddf9665572f8c3566c165b0cf3eb56f7f81c4e1a6d7196,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,1038,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"        static const char bslash[16] = { '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\' };",569488f07a00754b71448814752174689ce8d1bfd26a3230dfd6210476ae6a82,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,1039,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"        static const char space[16] = { 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19 };",fe95176f34fc3e61188cfe9e9cf29ffc1b7e36d94a44ee97ba6213ebd73e5e73,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,1461,31,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        static const unsigned char tokenMap[256] = {,93afc563b3bf101bde7bd9bd2fe131e208013fd7f30b659858dfdd034eb67747,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/reader.h,1484,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        static const char G[cIterativeParsingStateCount][kTokenCount] = {,9c16a8a753095693ef1c30e20e07933bbec0eed530ad0d3a7c0718b93a34d7b6,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/schema.h,403,21,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,                    char buffer[256 + 24];,4bf07ed5dc25ffe7bd81aab3bd22779085dd322ed1806e14dc6f811ef8f933a1,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/schema.h,1267,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        char buffer[21];,c215488e8b885c7888fd38e3a10c93c3ab3660050e88b97d4a0d7351f813c671,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/writer.h,282,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        char buffer[11];,9cef768f70149a2afa38e48628e376aea26fca05127604a51cfab146cae44d4f,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/writer.h,291,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        char buffer[10];,c5748bf7f3dab336ad90d5885cdcab0861a3c047a8d9693edf61b871ebe7cba3,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/writer.h,300,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        char buffer[21];,c215488e8b885c7888fd38e3a10c93c3ab3660050e88b97d4a0d7351f813c671,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/writer.h,309,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        char buffer[20];,08eab8bb307ddf658e7f3a87cc52aeeaee9fb5cf755ad4008df5fdad05bad880,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/writer.h,337,9,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        char buffer[25];,fa3110f84d83cbe43124e3d20f7468931d896e2e4ce1e1da44037cba1bbf754e,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/writer.h,347,22,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,        static const char escape[256] = {,0b61f6b0e4acaeae03b87ff11d74800fc7ba460266904212b1d720977c24e5ca,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/writer.h,562,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"    static const char dquote[16] = { '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""', '\""' };",6f86602b6f2cfd34b9ddf9665572f8c3566c165b0cf3eb56f7f81c4e1a6d7196,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/writer.h,563,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"    static const char bslash[16] = { '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\', '\\' };",569488f07a00754b71448814752174689ce8d1bfd26a3230dfd6210476ae6a82,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/deps/rapidjson-1.1.0/rapidjson/writer.h,564,18,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,"    static const char space[16]  = { 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19 };",f429624384c6221c3b6d1d47d5b329b884c99ce0e726ae77a8a4ecb33e4a7545,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/src/Config.cpp,179,9,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,    ifs.open(UTF8Util::GetPlatformString(fileName).c_str());,9e4963dd2fbda8e2f34bc79a3b213e3d37f3e211659d733303c1726ce34a9c2e,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/src/Config.cpp,186,11,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,      ifs.open(UTF8Util::GetPlatformString(prefixedFileName).c_str());,c7c567d1dd9954c76d27850f2c9b320c84aa9d974feb7fcb0b38420a08161a1d,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/src/Config.cpp,191,11,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,      ifs.open(UTF8Util::GetPlatformString(prefixedFileName).c_str());,c7c567d1dd9954c76d27850f2c9b320c84aa9d974feb7fcb0b38420a08161a1d,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/src/Config.cpp,199,11,2,2,misc,open,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,      ifs.open(UTF8Util::GetPlatformString(path).c_str());,47ad2f2224657de2845b0b7a7b0b9ac83a9b0a0e956d8970fc99dbd67c739a0e,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/src/ConfigTest.cpp,51,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char output[1024];,d7625e1135931ce4f5cea75671a463c094d7793b503e87e15b626b1d55b35880,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/src/Lexicon.cpp,81,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,  char buff[ENTRY_BUFF_SIZE];,73f8b8feb274da1b20ff3f9e1ae13fd41f964c29d71fe7026e71c830d4789579,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/src/SerializableDict.hpp,39,16,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    FILE* fp = fopen(fileName.c_str(), ""wb"");",cdfb1326b5a8604ddc3e142421f2b839bba4f07886285d4b14f59b8eaac4a866,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/src/SerializableDict.hpp,55,9,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"        fopen(UTF8Util::GetPlatformString(fileName).c_str(), ""rb"")",3799abc51b2ad982f17856c532ece0dc62bacd3a253598541e2aa7acea3df875,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/src/SimpleConverter.cpp,158,17,2,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120).",,,CWE-120,"  int convcnt = MultiByteToWideChar(CP_ACP, 0, configFileName, -1, NULL, 0);",4a9a1c0254af938af15192f3266146079d0eaf56bef05d5ae9718f3a5f201489,2.0.19,FF1023,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/src/SimpleConverter.cpp,161,5,2,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120).",,,CWE-120,"    MultiByteToWideChar(CP_ACP, 0, configFileName, -1, &wFileName[0], convcnt);",2895f9f0c684c6852cdf3ea5ba54650af9651eb54a262301f0055e85114205fa,2.0.19,FF1023,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/src/SimpleConverterTest.cpp,64,5,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,    char output[1024];,d7625e1135931ce4f5cea75671a463c094d7793b503e87e15b626b1d55b35880,2.0.19,FF1013,https://cwe.mitre.org/data/definitions/119.html
./OpenCC/src/TextDictTest.cpp,44,14,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  FILE* fp = fopen(fileName.c_str(), ""w"");",eef3546ed6a09e249ad2999b0316424c7af323489891774193bb45f6192a76b4,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/src/UTF8Util.hpp,282,19,2,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120).",,,CWE-120,"    int convcnt = MultiByteToWideChar(CP_UTF8, 0, str.c_str(), length, NULL, 0);",6e958443b11d11e04a23e72dec769bb951427881943d3ab10779ba52e6e4bdfc,2.0.19,FF1023,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/src/UTF8Util.hpp,285,7,2,2,buffer,MultiByteToWideChar,"Requires maximum length in CHARACTERS, not bytes (CWE-120).",,,CWE-120,"      MultiByteToWideChar(CP_UTF8, 0, str.c_str(), length, &ret[0], convcnt);",12898c7a10e65814be39f36def37b60719ace0e021bb2465fd565554f2c47e79,2.0.19,FF1023,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/src/tools/CommandLine.cpp,39,16,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"    FILE* fp = fopen(outputFileName.Get().c_str(), ""w"");",07cc35b418ac80332cf58ff3d196fdc22b7f5ac44b70bc9dfe1dc00c5eea142d,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/src/tools/CommandLine.cpp,108,14,2,2,tmpfile,mkstemp,"Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).",,,CWE-377,    int fd = mkstemp(const_cast<char*>(tempFileName.c_str()));,3c2e3211c1a69c44e6d8f8db1cfb6b5d72bef66fc57d36cb34a8ce4393099dce,2.0.19,FF1039,https://cwe.mitre.org/data/definitions/377.html
./OpenCC/src/tools/CommandLine.cpp,120,15,2,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).",,,CWE-362,"  FILE* fin = fopen(fileName.c_str(), ""r"");",0428d43b9ae34f12d9b317f6ba947baef03085dd8afbeacafa5aa6c451f78727,2.0.19,FF1040,https://cwe.mitre.org/data/definitions/362.html
./OpenCC/data/dictionary/DictionaryTest.cpp,39,49,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"        program_filename.substr(0, suffix_pos + strlen(RUNFILE_SUFFIX));",1e8ca701fb89c4c72bc1a6a873499cc642f77e07ad3b8313dfb6dade8bca25ed,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/google-benchmark/src/console_reporter.cc,188,56,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"      printer(Out, COLOR_DEFAULT, "" %*s%s"", cNameLen - strlen(unit), s.c_str(),",1d4aeadeaffb433e533e809c2f46bf74e0d1dbff5893311f1c20feb98161aae0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/google-benchmark/src/perf_counters.h,110,25,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    auto read_bytes = ::read(counter_ids_[0], buffer.first, buffer.second);",82067bb04de0cb160729b9ce9362710b35e5b35e3ee780afcf274de3afbd9a75,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/sleep.cc,47,10,1,1,obsolete,usleep,"This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).",Use nanosleep(2) or setitimer(2) instead.,,CWE-676,  while (usleep(sleepTime.rem) == -1 && errno == EINTR),30df16c568c569f10457c637c59f6ffd9682930365ccf68ba5020402d5f5ee84,2.0.19,FF1069,https://cwe.mitre.org/data/definitions/676.html
./OpenCC/deps/google-benchmark/src/timers.cc,257,5,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,Risk is low because the source is a constant string.,CWE-120,"    strncpy(tz_offset, ""-00:00"", kTzOffsetLen + 1);",07177a9b4298f640033a78d6985c90739afcd79bfdbfe33ab240919d67034e65,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/google-benchmark/src/timers.cc,266,8,1,1,buffer,strncat,"Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).","Consider strcat_s, strlcat, snprintf, or automatically resizing strings.",,CWE-120,"  std::strncat(storage, tz_offset, sizeof(storage) - timestamp_len - 1);",bd99a9b7d38b1741ac55fb076cfdcd30b54ef5cf529985ee8740a86f962e4c15,2.0.19,FF1010,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/googletest-1.15.0/googlemock/test/gmock-matchers-containers_test.cc,1081,59,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  int operator()(const char* s) { return static_cast<int>(strlen(s)); },a072efd56d2a61bacdadb71beb3edcdeb140cdf79cc2b42b7deb95f187a1d9c1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googlemock/test/gmock-matchers-containers_test.cc,2768,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"    nested.emplace_back(s, s + strlen(s));",772eb685ccadc43012b5d60b2c75a24a4810d4f7cf1d86f4921297cfc25fe40a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-port.h,2157,27,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  return static_cast<int>(read(fd, buf, count));",0cbe5525ae5b537f01b1faeb7e5b666421aec11865c483f02920e4c5eec87681,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-type-util.h,63,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"  if (s.compare(0, strlen(prefix), prefix) == 0) {",adfc1c0b593d429e7fed3681e92906d3d1f8b0b55a35883d388d6731f55283cd,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-type-util.h,64,47,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"    std::string::size_type end = s.find(""::"", strlen(prefix));",0ce7d234fb5e13c11cb681a34e6d218e5fcfbd7e39dd5883d488b1c45f73209b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-type-util.h,67,15,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"      s.erase(strlen(""std""), end - strlen(""std""));",307c2901e323fd9777b205d9dc9dd2d3ca528ba895c2b303f8f9b2317d54cfaf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-type-util.h,67,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"      s.erase(strlen(""std""), end - strlen(""std""));",307c2901e323fd9777b205d9dc9dd2d3ca528ba895c2b303f8f9b2317d54cfaf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-type-util.h,83,20,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"    s.replace(pos, strlen(to_search), 1, replace_char);",144805743defa4c2cfa5dedf3ddffa2bb9788907284d466c368006499526ab5a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-type-util.h,113,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"    s = s.substr(strlen(""struct ""));",0d94ce046e9a2ed82183147e46e385160029f9c562edf1f2d5fd49c5fa4efc9a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/include/gtest/internal/gtest-type-util.h,115,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"    s = s.substr(strlen(""class ""));",f19e3d990512ff2b04f39434ee9d375eb68640e00c6d70d55ee7ebe8abfdc706,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/samples/sample2.cc,40,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  const size_t len = strlen(a_c_string);,59362e03aa998d033a052bd6f61ab299da7358329d39894985ef3c01ec1dd850,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/samples/sample2.h,73,61,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  size_t Length() const { return c_string_ == nullptr ? 0 : strlen(c_string_); },5c038dc1e1a3a9553cf2bb27eef20907bf723e13a10bd0e57a2794c88a234e9b,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-death-test.cc,918,30,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","              stderr_socket_.read(0, &captured_stderr_.front() + old_length,",08cb49436a2fb6c4b7556b5081a2bcbab2a01cc8b32aba19d965c611114bba1f,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest-port.cc,728,33,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  const size_t full_regex_len = strlen(regex) + 10;,42fe8b4ea1169bdcd24393caf932602376da237bed72fc2b57eccd56e92f8b31,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,1218,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  const int length = strlen(ansi);,198cc93a9addfd19bfb49232f2fad6a6c0f2eb89f2118cd4eb770bcf0387e962,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,2083,53,1,1,buffer,wcslen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  if (num_chars == -1) num_chars = static_cast<int>(wcslen(str));,838ffa2c3828cf86e777f600a0c8ddd532e8506b2a8d83ecd32a363265a71f6a,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,4183,32,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"      segment = next_segment + strlen(""]]>"");",95e2bb9edafc3e2a8d577ac73f7d930d7061905ef6770b0a8b7ff37054c85c14,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,4950,18,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  result.reserve(strlen(str) + 1);,e8b559aa72a4baaacbe79c6d359377b49d66bc00a255ead8c11fc3b707fce6a1,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,6377,29,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  const size_t prefix_len = strlen(prefix);,612ed85136446ce36871b4584a39c329418c7a994aa725c93d98a77036bc6bfa,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/src/gtest.cc,6894,17,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,      if (value[strlen(value) - 1] != separator) {,4720cdc04bfc69477228253b512dca7134c9eee2182140b77a5955d7cd9dbf22,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/googletest-1.15.0/googletest/test/googletest-printers-test.cc,1126,20,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"  EXPECT_TRUE(std::equal(a, a + kSize, numbers.begin()));",5a662db7fe51d5923ec55c0b6cca98d97bf01f913739510395f358ec2884f976,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/marisa-0.2.6/include/marisa/iostream.h,10,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","std::istream &read(std::istream &stream, Trie *trie);",38d9dd7a530d86357bed34986aa07a05468e06a872ec646d1d39dac5ded60159,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/include/marisa/trie.h,29,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  void read(int fd);,65dd1af701e88106be50ac4a511fda3be5c68f7f238ffa16c614fe0f983c2781,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.cc,127,37,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","      const ::ssize_t size_read = ::read(fd_, buf, count);",ec1befaca6f0ab3b7ce9e9b1457449ad9aa8ff49acb3ac2a32bbc44f42f60464,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.cc,137,33,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","      MARISA_THROW_IF(!stream_->read(static_cast<char *>(buf),",530ec452c129ab43e4bdf165ba86bdcb4ae4de1672799b1a858bd76ee20711e4,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.h,24,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  void read(T *obj) {,be894bf0e284916c186801ad231214ed7c0c27a6cd7476f2920230e4a563db13,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/io/reader.h,30,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  void read(T *objs, std::size_t num_objs) {",45ab6ea2c4e52ddf46504c18fffcc8d7e9b2beaa4e862d7744f6126eb1dc2f70,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/header.h,23,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  void read(Reader &reader) {,03e7da35f9cc47fd8c39ade6b8dd7b92cbc65fc21d47e8c8f8dc10254b5fcc94,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/header.h,25,12,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    reader.read(buf, HEADER_SIZE);",e73b0671a22c0217592108ba88522bd38303d77e42fb5a7c3a1932b0ab2d623f,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.cc,40,17,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",void LoudsTrie::read(Reader &reader) {,500591849dfab249a41b63c6f5ef7a9b7475f8dba96741374ed00b37f5180376,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.cc,41,12,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  Header().read(reader);,22e4bdd98c35e777e7d233f3e3570aef5ed97450272f9d62fc45f3ed1ff21ab9,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.cc,562,10,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  louds_.read(reader);,46bfd901892135ce8004a2c70640e45f50debfdc082cfe981839ed1b4001bab7,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.cc,563,19,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  terminal_flags_.read(reader);,bb912a6ed428fa6fce493b49202f603d357717c39c02c8dc3e0f50d5da6573f7,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.cc,564,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  link_flags_.read(reader);,0b575419fde56a564defa642037b9a77e3432545781e70853af2e2928523ebc4,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.cc,565,10,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  bases_.read(reader);,7210d29933b021d44c61573f651bc5f230f964c96fae589fc95f02c75ca954cd,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.cc,566,11,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  extras_.read(reader);,d5301e8193a1bf98cafa4a32202e2b733543f7f43f54b2f92023a37ad48a1d33,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.cc,567,9,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  tail_.read(reader);,1678081bda5a60bed24f157ed9cff3ff74fa6097d483e9a6056dcb2bd98bd0de,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.cc,573,10,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  cache_.read(reader);,0ceb465c7509a81a16902dc8fa64871964ea6c9e68a22bf95aec06fde3c1ab37,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.cc,577,12,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    reader.read(&temp_num_l1_nodes);,21fa5e06145c4d9ec9b80f6cc3256541020b93d18c711300eaa3aee9fecc5101,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.cc,582,12,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    reader.read(&temp_config_flags);,e659a896215f3ef4be608c23925428c072a6f9cc5ae106ebf64ee15437b67232,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/louds-trie.h,24,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  void read(Reader &reader);,91560ab409d909c537f6789067c2c44f54709423178579ffdb88f363b3aa2c12,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/tail.cc,51,12,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",void Tail::read(Reader &reader) {,88b7d308cfa9f23df59e6bfdba1001f72a9797f4e0ddcd094d2da0135b876dfd,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/tail.cc,207,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  buf_.read(reader);,1738dfa7b310000e9eb78d7a245a2c09b9631c80ad127ee38764be101b0cbda2,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/tail.cc,208,14,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  end_flags_.read(reader);,78f44895583c81e11c721653569383753fd04e81c525e095946405a4ea9710d1,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/trie/tail.h,20,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  void read(Reader &reader);,91560ab409d909c537f6789067c2c44f54709423178579ffdb88f363b3aa2c12,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/bit-vector.h,35,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  void read(Reader &reader) {,03e7da35f9cc47fd8c39ade6b8dd7b92cbc65fc21d47e8c8f8dc10254b5fcc94,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/bit-vector.h,144,12,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    units_.read(reader);,574a3d7eb88adb0b7dc09060ee8f07ba517416118e067363c10f9da4f21a943c,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/bit-vector.h,147,14,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      reader.read(&temp_size);,5c1bf6defc0c706b5830d41c3e39312d9cab03576ce55e3b37b6daa3cfba5248,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/bit-vector.h,152,14,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      reader.read(&temp_num_1s);,b82f6530c42e7e46998edc378f114bae0dcaf4c4bf4a856b4879f29a71129fec,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/bit-vector.h,156,12,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    ranks_.read(reader);,3a95033ae6fe225c92a193c8e363f55791c8fd03af33d5970bd404902f6eadb2,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/bit-vector.h,157,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    select0s_.read(reader);,05d788935370c20bb24472a908fba1f78ec7c9f0166c5122f5bef7b827d1d43b,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/bit-vector.h,158,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    select1s_.read(reader);,eed2f405d96621bafd3b8c53154849674460a598b414b3b0c76cca0de20180f3,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/flat-vector.h,31,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  void read(Reader &reader) {,03e7da35f9cc47fd8c39ade6b8dd7b92cbc65fc21d47e8c8f8dc10254b5fcc94,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/flat-vector.h,151,12,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    units_.read(reader);,574a3d7eb88adb0b7dc09060ee8f07ba517416118e067363c10f9da4f21a943c,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/flat-vector.h,154,14,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      reader.read(&temp_value_size);,655681db58c2377fedbf601f8d00ef4bcce17fad41e73ce444213337809c8af6,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/flat-vector.h,160,14,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      reader.read(&temp_mask);,a5885b01108fe15290f4ecddde20aa7b7e0dee7530a2551ac60d5f2726f7329c,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/flat-vector.h,165,14,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",      reader.read(&temp_size);,5c1bf6defc0c706b5830d41c3e39312d9cab03576ce55e3b37b6daa3cfba5248,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/vector.h,32,8,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  void read(Reader &reader) {,03e7da35f9cc47fd8c39ade6b8dd7b92cbc65fc21d47e8c8f8dc10254b5fcc94,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/vector.h,211,12,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    reader.read(&total_size);,e3d24ece6d319b923db918108e35e3620ae00703f234143341039539120acbca,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/grimoire/vector/vector.h,216,12,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","    reader.read(objs_, size);",9a3e2da98113e8733234ea3986fd1b9b49ac1aee7e1a6358e09fff1c9b35071c,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,52,9,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  temp->read(reader);,4b2d6b5888a93e1f1896909b8b9b7e23ec8c64b12d538507314ce62ed8314a1a,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,56,12,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",void Trie::read(int fd) {,e7451c5be540ef3e8fa9f73fe30f634cc92c679f46a69a8d80ca887c47839cb1,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,64,9,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  temp->read(reader);,4b2d6b5888a93e1f1896909b8b9b7e23ec8c64b12d538507314ce62ed8314a1a,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,188,11,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    temp->read(reader);,4b2d6b5888a93e1f1896909b8b9b7e23ec8c64b12d538507314ce62ed8314a1a,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,199,24,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  static std::istream &read(std::istream &stream, Trie *trie) {",8e8cb1f6cb2c65cd4b44de384e43e0e2dcc16f1820957c3abc60885a0fdd55fe,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,208,11,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",    temp->read(reader);,4b2d6b5888a93e1f1896909b8b9b7e23ec8c64b12d538507314ce62ed8314a1a,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,232,15,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","std::istream &read(std::istream &stream, Trie *trie) {",17a6cc3356170a1a7c22592ea697993fe046bd5e02b23ee7045da373be094ef2,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,234,18,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  return TrieIO::read(stream, trie);",a62ec210f14b1d40fb52a5b619a148336e0cd5da566944c8cce6b8f0980299a8,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/marisa-0.2.6/lib/marisa/trie.cc,242,10,1,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20","  return read(stream, &trie);",37aa4fc4b479a310725cab285b15e641a3b77c43979b9d11c221a4c293dbb6c2,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/detail/class.h,665,28,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,        size_t size = std::strlen(rec.doc) + 1;,65f8658505779b9f95f369473887383cc9179af23306e8611e1e680c60d0db62,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/detail/common.h,395,27,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,        size_t len = std::strlen(compiled_ver);                                                   \,4c2efef07ba0d907e998845a41483b1c3be4079f68135eb17198c167fded1c89,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/numpy.h,1834,19,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"        if (!std::equal(buffers[i].shape.cbegin(), buffers[i].shape.cend(), shape.cbegin())) {",f5d35be3a63a37eb41c87f73971160097b61ffbd501abe228d5c6b36cdd5d2dc,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/pybind11.h,2042,40,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,        if (handle(kv.second[int_(0)]).equal(arg)) {,044a3ae6fdd0dc76b10853a3c3d36ce4265054ad7cba7d11b803b6023486c94f,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/pybind11.h,2153,67,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"            PYBIND11_ENUM_OP_CONV_LHS(""__eq__"", !b.is_none() && a.equal(b));",f339e06e9339c6da484c6bfc3287d8393866a9570c2c0268fd96a9514dcafbb9,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/pybind11.h,2154,67,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"            PYBIND11_ENUM_OP_CONV_LHS(""__ne__"", b.is_none() || !a.equal(b));",e2425be4322ef5d8d5ff62f6e6af691248869e940fcf0039c661793ad9e40409,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/pybind11.h,2173,55,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"            PYBIND11_ENUM_OP_STRICT(""__eq__"", int_(a).equal(int_(b)), return false);",34a52b4081522b7b559d2c46793623701fb6341529b29a6d67e60a9cc520c8f9,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/pybind11.h,2174,56,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"            PYBIND11_ENUM_OP_STRICT(""__ne__"", !int_(a).equal(int_(b)), return true);",6da17d373b6995b2d99fb8976d64b1799e9f8417a6891ec5db9617628d131058,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/pytypes.h,151,10,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"    bool equal(object_api const &other) const { return rich_compare(other, Py_EQ); }",d1f8ec2314c8c6b9c98582a09d8488459141867ecc3b71fd289b00fb8de90979,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/pytypes.h,1234,65,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,"    friend bool operator==(const It &a, const It &b) { return a.equal(b); }",e97e4ad179a315f9626c5555c595b8c9c7f96db4ffa38732d1fce398c0486cf8,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/pytypes.h,1268,10,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,    bool equal(const sequence_fast_readonly &b) const { return ptr == b.ptr; },d685ac32d6db7baeab7ba069c6fcae74263f443c0672e73523866e409658c717,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/pytypes.h,1289,10,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,    bool equal(const sequence_slow_readwrite &b) const { return index == b.index; },7444fd6c0a2c315d7c92e933627322a78dd713b02e50e64ef84996fbeba17cea,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/include/pybind11/pytypes.h,1315,10,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,    bool equal(const dict_readonly &b) const { return pos == b.pos; },0f0520b97d00cec1bebdc226eb9bf058dd224f28a558a6b9e31d1b06e1df982e,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/tests/test_builtin_casters.cpp,138,42,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"    m.def(""strlen"", [](char *s) { return strlen(s); });",47b28aee406e2857b14ef8b26d4b8e846aadd659005e284f46852ed733f1fd49,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/tests/test_pytypes.cpp,594,20,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,        l.append(a.equal(b));,7d385486c1f5e1d72f970ea61d1e445c2ebb39683cd5ea6304d91b4476f57546,2.0.19,FF1071,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/deps/pybind11-2.13.1/tests/test_pytypes.cpp,660,74,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"        return py::memoryview::from_memory(buf, static_cast<py::ssize_t>(strlen(buf)));",f60aec465180274a604715e2325fc419a6e66a9ccf1269a18b3e807ed66c23bf,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/src/DartsDict.cpp,106,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  size_t headerLen = strlen(OCDHEADER);,4c5ab1a01c03e2793ecc11d34aa5a69b2322ddf5485b088d2a4faca98e6cca38,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/src/DartsDict.cpp,163,35,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"  fwrite(OCDHEADER, sizeof(char), strlen(OCDHEADER), fp);",284624e8296b36e043969418e1c35dd7ecf8bc5794fb35edd628f14466929486,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/src/MarisaDict.cpp,96,22,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,  size_t headerLen = strlen(OCD2_HEADER);,d4d7ef165588e98f88fe9526b2efea7aee6526ff8636b51e1a3de5f50db962c0,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/src/MarisaDict.cpp,161,37,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"  fwrite(OCD2_HEADER, sizeof(char), strlen(OCD2_HEADER), fp);",926b7a96b2e6cc6f5619ef970216da9b0143c170cb2a3997f462b2ee1466e484,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/src/SimpleConverter.cpp,193,5,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"    strncpy(output, converted.c_str(), converted.length());",e481140a11a0d3e985c1f31a8c0eeb06c51316d870da70bc854d13a843dfb351,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/src/UTF8StringSlice.hpp,60,44,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,        byteLength(static_cast<LengthType>(strlen(_str))) {},2246b97d7d9ef8c5272decfb52f8148a45d46051638d1880dda2398e3fc3b4b7,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/src/UTF8Util.cpp,36,35,1,1,buffer,getc,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).",,,"CWE-120, CWE-20",  for (n = 0; n <= 2 && (bom[n] = getc(fp)) != EOF; n++) {,98d1dce9d86bc01b8ddd04e916b02e769c92e80efd47780ec09de87f5fc54ced,2.0.19,FF1029,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/src/UTF8Util.hpp,161,5,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"    strncpy(const_cast<char*>(newStr.c_str()), str, length);",31745b5d5ef2279f000e03294c672311ef46bce122fc423a05ff52372dae5f41,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
./OpenCC/src/UTF8Util.hpp,209,38,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,    std::string::size_type fromLen = strlen(from);,707be9257a4df78b827927d649e700cd2003b553dc3cf16fd6e8ecf0c4edde7c,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/src/UTF8Util.hpp,210,36,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,    std::string::size_type toLen = strlen(to);,83e76af454a3b503f2e237cb7f82040a578e0103487b315647d5c26b6f9f9319,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/src/UTF8UtilTest.cpp,26,45,1,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).,,,CWE-126,"  UTF8UtilTest() : text(""東菄鶇䍶𠍀倲𩜍𢘐""), length(strlen(text)){};",970e6ec6aeda5d3d111b235030fc57dbe6e5d6c1ea13b3c080b47745bb1f2bac,2.0.19,FF1022,https://cwe.mitre.org/data/definitions/126.html
./OpenCC/src/tools/CommandLine.cpp,158,7,1,1,buffer,strncpy,Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).,,,CWE-120,"      strncpy(bufferBegin, remainingTemp.c_str(), remainingLength);",56067e61aba000aabf61ed0aa2fa1902f01cb611915abe49180a8b4b483af10a,2.0.19,FF1008,https://cwe.mitre.org/data/definitions/120.html
