File,Line,Severity,ID,Message,Verbose,CWE,Column,Info,Symbol
ggml/examples/common-ggml.h,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/common-ggml.h,5,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common-ggml.h,6,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common-ggml.h,7,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common-ggml.cpp,3,information,missingIncludeSystem,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common-ggml.cpp,4,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common-ggml.cpp,157,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/examples/common-ggml.cpp,223,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,24,,
ggml/examples/common-ggml.cpp,125,style,useStlAlgorithm,Consider using std::any_of algorithm instead of a raw loop.,Consider using std::any_of algorithm instead of a raw loop.,398,56,,
ggml/examples/common-ggml.cpp,133,style,useStlAlgorithm,Consider using std::any_of algorithm instead of a raw loop.,Consider using std::any_of algorithm instead of a raw loop.,398,56,,
ggml/examples/common.h,5,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.h,6,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.h,7,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.h,8,information,missingIncludeSystem,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.h,9,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.h,10,information,missingIncludeSystem,Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.h,11,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.h,12,information,missingIncludeSystem,Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.cpp,5,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.cpp,6,information,missingIncludeSystem,Include file: <codecvt> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <codecvt> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.cpp,7,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.cpp,8,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.cpp,9,information,missingIncludeSystem,Include file: <locale> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <locale> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.cpp,10,information,missingIncludeSystem,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.cpp,11,information,missingIncludeSystem,Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/common.cpp,14,style,constParameterReference,Parameter 'params' can be declared as reference to const,Parameter 'params' can be declared as reference to const,398,101,Parameter 'params' can be declared as reference to const,params
ggml/examples/common.cpp,118,style,constParameterReference,Parameter 'rng' can be declared as reference to const,Parameter 'rng' can be declared as reference to const,398,46,Parameter 'rng' can be declared as reference to const,rng
ggml/examples/common.cpp,353,style,constParameterReference,Parameter 'vocab' can be declared as reference to const,Parameter 'vocab' can be declared as reference to const,398,37,Parameter 'vocab' can be declared as reference to const,vocab
ggml/examples/common.h,265,style,constVariable,Variable 'cube' can be declared as const array,Variable 'cube' can be declared as const array,398,19,Variable 'cube' can be declared as const array,cube
ggml/examples/common.cpp,253,style,useStlAlgorithm,Consider using std::copy algorithm instead of a raw loop.,Consider using std::copy algorithm instead of a raw loop.,398,19,,
ggml/examples/common.cpp,285,style,useStlAlgorithm,Consider using std::copy algorithm instead of a raw loop.,Consider using std::copy algorithm instead of a raw loop.,398,27,,
ggml/examples/common.cpp,432,style,useStlAlgorithm,Consider using std::accumulate algorithm instead of a raw loop.,Consider using std::accumulate algorithm instead of a raw loop.,398,14,,
ggml/examples/common.cpp,448,style,useStlAlgorithm,Consider using std::transform algorithm instead of a raw loop.,Consider using std::transform algorithm instead of a raw loop.,398,11,,
ggml/examples/common.cpp,547,style,useStlAlgorithm,Consider using std::accumulate algorithm instead of a raw loop.,Consider using std::accumulate algorithm instead of a raw loop.,398,14,,
ggml/examples/common.cpp,563,style,useStlAlgorithm,Consider using std::transform algorithm instead of a raw loop.,Consider using std::transform algorithm instead of a raw loop.,398,11,,
ggml/examples/gpt-2/main-alloc.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/gpt-2/main-alloc.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/examples/gpt-2/main-alloc.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/examples/gpt-2/main-alloc.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/gpt-2/main-alloc.cpp,6,information,missingInclude,"Include file: ""common.h"" not found.","Include file: ""common.h"" not found.",,0,,
ggml/examples/gpt-2/main-alloc.cpp,7,information,missingInclude,"Include file: ""common-ggml.h"" not found.","Include file: ""common-ggml.h"" not found.",,0,,
ggml/examples/gpt-2/main-alloc.cpp,9,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-alloc.cpp,10,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-alloc.cpp,11,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-alloc.cpp,12,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-alloc.cpp,13,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-alloc.cpp,14,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-alloc.cpp,15,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-alloc.cpp,16,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-alloc.cpp,812,style,knownConditionTrueFalse,"Condition '!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)' is always false","Condition '!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)' is always false",570,17,"Condition '!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)' is always false",
ggml/examples/gpt-2/main-alloc.cpp,812,style,knownConditionTrueFalse,"Condition '!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)' is always false","Condition '!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)' is always false",570,27,Calling function 'gpt2_eval' returns 1,
ggml/examples/gpt-2/main-alloc.cpp,141,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/examples/gpt-2/main-alloc.cpp,698,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,10,,
ggml/examples/gpt-2/main-alloc.cpp,721,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/examples/gpt-2/main-alloc.cpp,91,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-alloc.cpp,102,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-alloc.cpp,103,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-alloc.cpp,104,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-alloc.cpp,105,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-alloc.cpp,106,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-alloc.cpp,107,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-alloc.cpp,125,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-alloc.cpp,138,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,22,,
ggml/examples/gpt-2/main-backend.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/gpt-2/main-backend.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/examples/gpt-2/main-backend.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/examples/gpt-2/main-backend.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/gpt-2/main-backend.cpp,14,information,missingInclude,"Include file: ""common.h"" not found.","Include file: ""common.h"" not found.",,0,,
ggml/examples/gpt-2/main-backend.cpp,15,information,missingInclude,"Include file: ""common-ggml.h"" not found.","Include file: ""common-ggml.h"" not found.",,0,,
ggml/examples/gpt-2/main-backend.cpp,17,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-backend.cpp,18,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-backend.cpp,19,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-backend.cpp,20,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-backend.cpp,21,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-backend.cpp,22,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-backend.cpp,23,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-backend.cpp,24,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-backend.cpp,873,style,knownConditionTrueFalse,"Condition '!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)' is always false","Condition '!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)' is always false",570,17,"Condition '!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)' is always false",
ggml/examples/gpt-2/main-backend.cpp,873,style,knownConditionTrueFalse,"Condition '!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)' is always false","Condition '!gpt2_eval(model,allocr,params.n_threads,n_past,embd,logits)' is always false",570,27,Calling function 'gpt2_eval' returns 1,
ggml/examples/gpt-2/main-backend.cpp,165,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/examples/gpt-2/main-backend.cpp,115,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-backend.cpp,126,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-backend.cpp,127,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-backend.cpp,128,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-backend.cpp,129,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-backend.cpp,130,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-backend.cpp,131,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-backend.cpp,149,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-backend.cpp,162,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,22,,
ggml/examples/gpt-2/main-backend.cpp,324,style,redundantInitialization,Redundant initialization for 'ctx'. The initialized value is overwritten before it is read.,Redundant initialization for 'ctx'. The initialized value is overwritten before it is read.,563,17,ctx is overwritten,ctx
ggml/examples/gpt-2/main-backend.cpp,313,style,redundantInitialization,Redundant initialization for 'ctx'. The initialized value is overwritten before it is read.,Redundant initialization for 'ctx'. The initialized value is overwritten before it is read.,563,20,ctx is initialized,ctx
ggml/examples/gpt-2/main-backend.cpp,240,style,shadowArgument,Local variable 'n_ctx' shadows outer argument,Local variable 'n_ctx' shadows outer argument,398,19,Shadow variable,n_ctx
ggml/examples/gpt-2/main-backend.cpp,103,style,shadowArgument,Local variable 'n_ctx' shadows outer argument,Local variable 'n_ctx' shadows outer argument,398,92,Shadowed declaration,n_ctx
ggml/examples/gpt-2/main-backend.cpp,313,style,shadowVariable,Local variable 'ctx' shadows outer variable,Local variable 'ctx' shadows outer variable,398,16,Shadow variable,ctx
ggml/examples/gpt-2/main-backend.cpp,184,style,shadowVariable,Local variable 'ctx' shadows outer variable,Local variable 'ctx' shadows outer variable,398,12,Shadowed declaration,ctx
ggml/examples/gpt-2/main-backend.cpp,335,style,shadowArgument,Local variable 'n_ctx' shadows outer argument,Local variable 'n_ctx' shadows outer argument,398,19,Shadow variable,n_ctx
ggml/examples/gpt-2/main-backend.cpp,103,style,shadowArgument,Local variable 'n_ctx' shadows outer argument,Local variable 'n_ctx' shadows outer argument,398,92,Shadowed declaration,n_ctx
ggml/examples/gpt-2/main-backend.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/examples/gpt-2/main-backend.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/examples/gpt-2/main-batched.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/gpt-2/main-batched.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/examples/gpt-2/main-batched.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/examples/gpt-2/main-batched.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/gpt-2/main-batched.cpp,14,information,missingInclude,"Include file: ""common.h"" not found.","Include file: ""common.h"" not found.",,0,,
ggml/examples/gpt-2/main-batched.cpp,15,information,missingInclude,"Include file: ""common-ggml.h"" not found.","Include file: ""common-ggml.h"" not found.",,0,,
ggml/examples/gpt-2/main-batched.cpp,17,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-batched.cpp,18,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-batched.cpp,19,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-batched.cpp,20,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-batched.cpp,21,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-batched.cpp,22,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-batched.cpp,23,information,missingIncludeSystem,Include file: <set> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <set> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-batched.cpp,24,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-batched.cpp,25,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-batched.cpp,212,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/examples/gpt-2/main-batched.cpp,848,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/examples/gpt-2/main-batched.cpp,850,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/examples/gpt-2/main-batched.cpp,853,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/examples/gpt-2/main-batched.cpp,854,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/examples/gpt-2/main-batched.cpp,855,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/examples/gpt-2/main-batched.cpp,162,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-batched.cpp,173,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-batched.cpp,174,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-batched.cpp,175,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-batched.cpp,176,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-batched.cpp,177,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-batched.cpp,178,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-batched.cpp,196,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-batched.cpp,209,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,22,,
ggml/examples/gpt-2/main-batched.cpp,238,style,shadowArgument,Local variable 'n_ctx' shadows outer argument,Local variable 'n_ctx' shadows outer argument,398,19,Shadow variable,n_ctx
ggml/examples/gpt-2/main-batched.cpp,150,style,shadowArgument,Local variable 'n_ctx' shadows outer argument,Local variable 'n_ctx' shadows outer argument,398,92,Shadowed declaration,n_ctx
ggml/examples/gpt-2/main-batched.cpp,331,style,shadowArgument,Local variable 'n_ctx' shadows outer argument,Local variable 'n_ctx' shadows outer argument,398,19,Shadow variable,n_ctx
ggml/examples/gpt-2/main-batched.cpp,150,style,shadowArgument,Local variable 'n_ctx' shadows outer argument,Local variable 'n_ctx' shadows outer argument,398,92,Shadowed declaration,n_ctx
ggml/examples/gpt-2/main-batched.cpp,402,style,shadowArgument,Local variable 'n_ctx' shadows outer argument,Local variable 'n_ctx' shadows outer argument,398,19,Shadow variable,n_ctx
ggml/examples/gpt-2/main-batched.cpp,150,style,shadowArgument,Local variable 'n_ctx' shadows outer argument,Local variable 'n_ctx' shadows outer argument,398,92,Shadowed declaration,n_ctx
ggml/examples/gpt-2/main-batched.cpp,920,style,shadowVariable,Local variable 'n_tokens' shadows outer variable,Local variable 'n_tokens' shadows outer variable,398,23,Shadow variable,n_tokens
ggml/examples/gpt-2/main-batched.cpp,877,style,shadowVariable,Local variable 'n_tokens' shadows outer variable,Local variable 'n_tokens' shadows outer variable,398,19,Shadowed declaration,n_tokens
ggml/examples/gpt-2/main-batched.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/examples/gpt-2/main-batched.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/examples/gpt-2/main-ctx.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/gpt-2/main-ctx.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/examples/gpt-2/main-ctx.cpp,3,information,missingInclude,"Include file: ""common.h"" not found.","Include file: ""common.h"" not found.",,0,,
ggml/examples/gpt-2/main-ctx.cpp,4,information,missingInclude,"Include file: ""common-ggml.h"" not found.","Include file: ""common-ggml.h"" not found.",,0,,
ggml/examples/gpt-2/main-ctx.cpp,6,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-ctx.cpp,7,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-ctx.cpp,8,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-ctx.cpp,9,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-ctx.cpp,10,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-ctx.cpp,11,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-ctx.cpp,12,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-ctx.cpp,13,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-ctx.cpp,418,error,memleakOnRealloc,Common realloc mistake: 'buf' nulled but not freed upon failure,Common realloc mistake: 'buf' nulled but not freed upon failure,401,9,,buf
ggml/examples/gpt-2/main-ctx.cpp,138,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/examples/gpt-2/main-ctx.cpp,439,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,10,,
ggml/examples/gpt-2/main-ctx.cpp,685,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/examples/gpt-2/main-ctx.cpp,88,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-ctx.cpp,99,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-ctx.cpp,100,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-ctx.cpp,101,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-ctx.cpp,102,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-ctx.cpp,103,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-ctx.cpp,104,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-ctx.cpp,122,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-ctx.cpp,135,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,22,,
ggml/examples/gpt-2/main-sched.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/gpt-2/main-sched.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/examples/gpt-2/main-sched.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/examples/gpt-2/main-sched.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/gpt-2/main-sched.cpp,18,information,missingInclude,"Include file: ""common.h"" not found.","Include file: ""common.h"" not found.",,0,,
ggml/examples/gpt-2/main-sched.cpp,19,information,missingInclude,"Include file: ""common-ggml.h"" not found.","Include file: ""common-ggml.h"" not found.",,0,,
ggml/examples/gpt-2/main-sched.cpp,21,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-sched.cpp,22,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-sched.cpp,23,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-sched.cpp,24,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-sched.cpp,25,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-sched.cpp,26,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-sched.cpp,27,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-sched.cpp,28,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/main-sched.cpp,134,style,knownConditionTrueFalse,Condition 'gpu_backend' is always false,Condition 'gpu_backend' is always false,570,9,Condition 'gpu_backend' is always false,
ggml/examples/gpt-2/main-sched.cpp,110,style,knownConditionTrueFalse,Condition 'gpu_backend' is always false,Condition 'gpu_backend' is always false,570,34,"Assignment 'gpu_backend=NULL', assigned value is 0",
ggml/examples/gpt-2/main-sched.cpp,1002,style,knownConditionTrueFalse,"Condition '!gpt2_eval(model,sched,n_past,embd,logits)' is always false","Condition '!gpt2_eval(model,sched,n_past,embd,logits)' is always false",570,17,"Condition '!gpt2_eval(model,sched,n_past,embd,logits)' is always false",
ggml/examples/gpt-2/main-sched.cpp,1002,style,knownConditionTrueFalse,"Condition '!gpt2_eval(model,sched,n_past,embd,logits)' is always false","Condition '!gpt2_eval(model,sched,n_past,embd,logits)' is always false",570,27,Calling function 'gpt2_eval' returns 1,
ggml/examples/gpt-2/main-sched.cpp,217,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/examples/gpt-2/main-sched.cpp,167,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-sched.cpp,178,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-sched.cpp,179,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-sched.cpp,180,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-sched.cpp,181,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-sched.cpp,182,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-sched.cpp,183,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-sched.cpp,201,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-2/main-sched.cpp,214,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,22,,
ggml/examples/gpt-2/main-sched.cpp,239,style,shadowArgument,Local variable 'params' shadows outer argument,Local variable 'params' shadows outer argument,398,33,Shadow variable,params
ggml/examples/gpt-2/main-sched.cpp,155,style,shadowArgument,Local variable 'params' shadows outer argument,Local variable 'params' shadows outer argument,398,107,Shadowed declaration,params
ggml/examples/gpt-2/main-sched.cpp,15,information,missingInclude,"Include file: ""ggml-blas.h"" not found.","Include file: ""ggml-blas.h"" not found.",,0,,
ggml/examples/gpt-2/main-sched.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/examples/gpt-2/main-sched.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/examples/gpt-2/quantize.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/gpt-2/quantize.cpp,3,information,missingInclude,"Include file: ""common.h"" not found.","Include file: ""common.h"" not found.",,0,,
ggml/examples/gpt-2/quantize.cpp,4,information,missingInclude,"Include file: ""common-ggml.h"" not found.","Include file: ""common-ggml.h"" not found.",,0,,
ggml/examples/gpt-2/quantize.cpp,6,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/quantize.cpp,7,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/quantize.cpp,8,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/quantize.cpp,9,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/quantize.cpp,10,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/quantize.cpp,11,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/quantize.cpp,12,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/quantize.cpp,13,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/quantize.cpp,14,information,missingIncludeSystem,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-2/quantize.cpp,107,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/examples/gpt-2/quantize.cpp,108,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/examples/gpt-2/quantize.cpp,47,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-2/quantize.cpp,53,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-2/quantize.cpp,60,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-2/quantize.cpp,61,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-2/quantize.cpp,62,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-2/quantize.cpp,63,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-2/quantize.cpp,64,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-2/quantize.cpp,65,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-2/quantize.cpp,80,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-2/quantize.cpp,81,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-2/quantize.cpp,82,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-2/quantize.cpp,83,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-2/quantize.cpp,84,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-2/quantize.cpp,85,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-2/quantize.cpp,91,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-2/quantize.cpp,92,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-2/quantize.cpp,103,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,24,,
ggml/examples/gpt-2/quantize.cpp,104,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,24,,
ggml/examples/gpt-j/main.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/gpt-j/main.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/examples/gpt-j/main.cpp,4,information,missingInclude,"Include file: ""common.h"" not found.","Include file: ""common.h"" not found.",,0,,
ggml/examples/gpt-j/main.cpp,5,information,missingInclude,"Include file: ""common-ggml.h"" not found.","Include file: ""common-ggml.h"" not found.",,0,,
ggml/examples/gpt-j/main.cpp,7,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/main.cpp,8,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/main.cpp,9,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/main.cpp,10,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/main.cpp,11,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/main.cpp,12,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/main.cpp,13,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/main.cpp,14,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/main.cpp,415,error,memleakOnRealloc,Common realloc mistake: 'buf' nulled but not freed upon failure,Common realloc mistake: 'buf' nulled but not freed upon failure,401,9,,buf
ggml/examples/gpt-j/main.cpp,141,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/examples/gpt-j/main.cpp,433,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,18,,
ggml/examples/gpt-j/main.cpp,606,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/examples/gpt-j/main.cpp,89,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-j/main.cpp,100,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-j/main.cpp,101,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-j/main.cpp,102,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-j/main.cpp,103,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-j/main.cpp,104,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-j/main.cpp,105,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-j/main.cpp,106,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-j/main.cpp,125,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/gpt-j/main.cpp,138,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,22,,
ggml/examples/gpt-j/quantize.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/gpt-j/quantize.cpp,3,information,missingInclude,"Include file: ""common.h"" not found.","Include file: ""common.h"" not found.",,0,,
ggml/examples/gpt-j/quantize.cpp,4,information,missingInclude,"Include file: ""common-ggml.h"" not found.","Include file: ""common-ggml.h"" not found.",,0,,
ggml/examples/gpt-j/quantize.cpp,6,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/quantize.cpp,7,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/quantize.cpp,8,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/quantize.cpp,9,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/quantize.cpp,10,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/quantize.cpp,11,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/quantize.cpp,12,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/quantize.cpp,13,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/quantize.cpp,14,information,missingIncludeSystem,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/gpt-j/quantize.cpp,110,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/examples/gpt-j/quantize.cpp,111,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/examples/gpt-j/quantize.cpp,48,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-j/quantize.cpp,54,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-j/quantize.cpp,61,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-j/quantize.cpp,62,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-j/quantize.cpp,63,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-j/quantize.cpp,64,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-j/quantize.cpp,65,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-j/quantize.cpp,66,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-j/quantize.cpp,67,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/examples/gpt-j/quantize.cpp,82,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-j/quantize.cpp,83,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-j/quantize.cpp,84,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-j/quantize.cpp,85,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-j/quantize.cpp,86,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-j/quantize.cpp,87,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-j/quantize.cpp,88,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-j/quantize.cpp,94,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-j/quantize.cpp,95,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/examples/gpt-j/quantize.cpp,106,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,24,,
ggml/examples/gpt-j/quantize.cpp,107,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,24,,
ggml/examples/magika/main.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/magika/main.cpp,2,information,missingInclude,"Include file: ""gguf.h"" not found.","Include file: ""gguf.h"" not found.",,0,,
ggml/examples/magika/main.cpp,3,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/examples/magika/main.cpp,4,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/examples/magika/main.cpp,5,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/magika/main.cpp,7,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/magika/main.cpp,8,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/magika/main.cpp,9,information,missingIncludeSystem,Include file: <numeric> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <numeric> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/magika/main.cpp,10,information,missingIncludeSystem,Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/magika/main.cpp,11,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/magika/main.cpp,12,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/magika/main.cpp,41,style,unusedStructMember,struct member 'magika_hparams::block_size' is never used.,struct member 'magika_hparams::block_size' is never used.,563,15,,magika_hparams::block_size
ggml/examples/magika/main.cpp,45,style,unusedStructMember,struct member 'magika_hparams::min_file_size_for_dl' is never used.,struct member 'magika_hparams::min_file_size_for_dl' is never used.,563,15,,magika_hparams::min_file_size_for_dl
ggml/examples/mnist/mnist-common.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/mnist/mnist-common.cpp,2,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/examples/mnist/mnist-common.cpp,3,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/mnist/mnist-common.cpp,4,information,missingInclude,"Include file: ""ggml-opt.h"" not found.","Include file: ""ggml-opt.h"" not found.",,0,,
ggml/examples/mnist/mnist-common.h,1,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.h,2,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.h,3,information,missingIncludeSystem,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.h,4,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.h,5,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.h,6,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.h,8,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/examples/mnist/mnist-common.h,9,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/mnist/mnist-common.h,10,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/mnist/mnist-common.h,11,information,missingInclude,"Include file: ""gguf.h"" not found.","Include file: ""gguf.h"" not found.",,0,,
ggml/examples/mnist/mnist-common.h,12,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/examples/mnist/mnist-common.h,13,information,missingInclude,"Include file: ""ggml-opt.h"" not found.","Include file: ""ggml-opt.h"" not found.",,0,,
ggml/examples/mnist/mnist-common.cpp,8,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.cpp,9,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.cpp,10,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.cpp,11,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.cpp,12,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.cpp,13,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.cpp,14,information,missingIncludeSystem,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.cpp,15,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.cpp,16,information,missingIncludeSystem,Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-common.cpp,32,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,18,,
ggml/examples/mnist/mnist-common.cpp,75,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,18,,
ggml/examples/mnist/mnist-common.cpp,42,style,funcArgNamesDifferent,Function 'mnist_image_print' argument 1 names different: declaration 'f' definition 'stream'.,Function 'mnist_image_print' argument 1 names different: declaration 'f' definition 'stream'.,628,31,,mnist_image_print
ggml/examples/mnist/mnist-common.h,158,style,funcArgNamesDifferent,Function 'mnist_image_print' argument 1 names different: declaration 'f' definition 'stream'.,Function 'mnist_image_print' argument 1 names different: declaration 'f' definition 'stream'.,628,31,,mnist_image_print
ggml/examples/mnist/mnist-common.cpp,458,style,unreadVariable,Variable 'digit' is assigned a value that is never used.,Variable 'digit' is assigned a value that is never used.,563,29,,digit
ggml/examples/mnist/mnist-eval.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/mnist/mnist-eval.cpp,2,information,missingInclude,"Include file: ""ggml-opt.h"" not found.","Include file: ""ggml-opt.h"" not found.",,0,,
ggml/examples/mnist/mnist-eval.cpp,6,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-eval.cpp,7,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-eval.cpp,8,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-eval.cpp,9,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-eval.cpp,10,information,missingIncludeSystem,Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-eval.cpp,11,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-eval.cpp,12,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-eval.cpp,13,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-train.cpp,1,information,missingInclude,"Include file: ""ggml-opt.h"" not found.","Include file: ""ggml-opt.h"" not found.",,0,,
ggml/examples/mnist/mnist-train.cpp,4,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-train.cpp,5,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-train.cpp,6,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-train.cpp,7,information,missingIncludeSystem,Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/mnist/mnist-train.cpp,8,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/perf-metal/perf-metal.cpp,12,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/perf-metal/perf-metal.cpp,13,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/examples/perf-metal/perf-metal.cpp,14,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/perf-metal/perf-metal.cpp,15,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/examples/perf-metal/perf-metal.cpp,17,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/perf-metal/perf-metal.cpp,18,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/perf-metal/perf-metal.cpp,19,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,4,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/sam/sam.cpp,5,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/examples/sam/sam.cpp,6,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/examples/sam/sam.cpp,7,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/sam/sam.cpp,9,information,missingInclude,"Include file: ""stb_image.h"" not found.","Include file: ""stb_image.h"" not found.",,0,,
ggml/examples/sam/sam.cpp,11,information,missingInclude,"Include file: ""stb_image_write.h"" not found.","Include file: ""stb_image_write.h"" not found.",,0,,
ggml/examples/sam/sam.cpp,13,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,14,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,15,information,missingIncludeSystem,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,16,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,17,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,18,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,19,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,20,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,21,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,22,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,23,information,missingIncludeSystem,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/sam/sam.cpp,46,performance,functionStatic,Technically the member function 'sam_hparams::n_img_size' can be static (but you may consider moving to unnamed namespace).,The member function 'sam_hparams::n_img_size' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,13,,sam_hparams::n_img_size
ggml/examples/sam/sam.cpp,47,performance,functionStatic,Technically the member function 'sam_hparams::n_window_size' can be static (but you may consider moving to unnamed namespace).,The member function 'sam_hparams::n_window_size' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,13,,sam_hparams::n_window_size
ggml/examples/sam/sam.cpp,48,performance,functionStatic,Technically the member function 'sam_hparams::n_patch_size' can be static (but you may consider moving to unnamed namespace).,The member function 'sam_hparams::n_patch_size' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,13,,sam_hparams::n_patch_size
ggml/examples/sam/sam.cpp,2034,style,knownConditionTrueFalse,"Condition '!sam_decode_mask(model,enc_res,pe_img_dense,ctx0,gf,state,multimask_output)' is always false","Condition '!sam_decode_mask(model,enc_res,pe_img_dense,ctx0,gf,state,multimask_output)' is always false",570,9,"Condition '!sam_decode_mask(model,enc_res,pe_img_dense,ctx0,gf,state,multimask_output)' is always false",
ggml/examples/sam/sam.cpp,2034,style,knownConditionTrueFalse,"Condition '!sam_decode_mask(model,enc_res,pe_img_dense,ctx0,gf,state,multimask_output)' is always false","Condition '!sam_decode_mask(model,enc_res,pe_img_dense,ctx0,gf,state,multimask_output)' is always false",570,25,Calling function 'sam_decode_mask' returns 1,
ggml/examples/sam/sam.cpp,2242,style,knownConditionTrueFalse,"Condition 'sam_params_parse(argc,argv,params)==false' is always false","Condition 'sam_params_parse(argc,argv,params)==false' is always false",570,46,"Condition 'sam_params_parse(argc,argv,params)==false' is always false",
ggml/examples/sam/sam.cpp,2242,style,knownConditionTrueFalse,"Condition 'sam_params_parse(argc,argv,params)==false' is always false","Condition 'sam_params_parse(argc,argv,params)==false' is always false",570,25,Calling function 'sam_params_parse' returns 1,
ggml/examples/sam/sam.cpp,2261,style,knownConditionTrueFalse,"Condition '!sam_image_preprocess(img0,img1)' is always false","Condition '!sam_image_preprocess(img0,img1)' is always false",570,9,"Condition '!sam_image_preprocess(img0,img1)' is always false",
ggml/examples/sam/sam.cpp,2261,style,knownConditionTrueFalse,"Condition '!sam_image_preprocess(img0,img1)' is always false","Condition '!sam_image_preprocess(img0,img1)' is always false",570,30,Calling function 'sam_image_preprocess' returns 1,
ggml/examples/sam/sam.cpp,337,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/examples/sam/sam.cpp,1391,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/examples/sam/sam.cpp,1877,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/examples/sam/sam.cpp,1887,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/examples/sam/sam.cpp,2044,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,19,,
ggml/examples/sam/sam.cpp,2081,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/examples/sam/sam.cpp,520,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/sam/sam.cpp,539,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/sam/sam.cpp,540,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/sam/sam.cpp,541,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/sam/sam.cpp,542,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/sam/sam.cpp,543,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/sam/sam.cpp,544,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/examples/sam/sam.cpp,1537,style,redundantInitialization,Redundant initialization for 'Qcur'. The initialized value is overwritten before it is read.,Redundant initialization for 'Qcur'. The initialized value is overwritten before it is read.,563,10,Qcur is overwritten,Qcur
ggml/examples/sam/sam.cpp,1533,style,redundantInitialization,Redundant initialization for 'Qcur'. The initialized value is overwritten before it is read.,Redundant initialization for 'Qcur'. The initialized value is overwritten before it is read.,563,31,Qcur is initialized,Qcur
ggml/examples/sam/sam.cpp,1540,style,redundantInitialization,Redundant initialization for 'Kcur'. The initialized value is overwritten before it is read.,Redundant initialization for 'Kcur'. The initialized value is overwritten before it is read.,563,10,Kcur is overwritten,Kcur
ggml/examples/sam/sam.cpp,1534,style,redundantInitialization,Redundant initialization for 'Kcur'. The initialized value is overwritten before it is read.,Redundant initialization for 'Kcur'. The initialized value is overwritten before it is read.,563,31,Kcur is initialized,Kcur
ggml/examples/sam/sam.cpp,1543,style,redundantInitialization,Redundant initialization for 'Vcur'. The initialized value is overwritten before it is read.,Redundant initialization for 'Vcur'. The initialized value is overwritten before it is read.,563,10,Vcur is overwritten,Vcur
ggml/examples/sam/sam.cpp,1535,style,redundantInitialization,Redundant initialization for 'Vcur'. The initialized value is overwritten before it is read.,Redundant initialization for 'Vcur'. The initialized value is overwritten before it is read.,563,31,Vcur is initialized,Vcur
ggml/examples/sam/sam.cpp,1550,style,redundantInitialization,Redundant initialization for 'Q'. The initialized value is overwritten before it is read.,Redundant initialization for 'Q'. The initialized value is overwritten before it is read.,563,7,Q is overwritten,Q
ggml/examples/sam/sam.cpp,1546,style,redundantInitialization,Redundant initialization for 'Q'. The initialized value is overwritten before it is read.,Redundant initialization for 'Q'. The initialized value is overwritten before it is read.,563,28,Q is initialized,Q
ggml/examples/sam/sam.cpp,1553,style,redundantInitialization,Redundant initialization for 'K'. The initialized value is overwritten before it is read.,Redundant initialization for 'K'. The initialized value is overwritten before it is read.,563,7,K is overwritten,K
ggml/examples/sam/sam.cpp,1547,style,redundantInitialization,Redundant initialization for 'K'. The initialized value is overwritten before it is read.,Redundant initialization for 'K'. The initialized value is overwritten before it is read.,563,28,K is initialized,K
ggml/examples/sam/sam.cpp,1556,style,redundantInitialization,Redundant initialization for 'V'. The initialized value is overwritten before it is read.,Redundant initialization for 'V'. The initialized value is overwritten before it is read.,563,7,V is overwritten,V
ggml/examples/sam/sam.cpp,1548,style,redundantInitialization,Redundant initialization for 'V'. The initialized value is overwritten before it is read.,Redundant initialization for 'V'. The initialized value is overwritten before it is read.,563,28,V is initialized,V
ggml/examples/sam/sam.cpp,1588,style,redundantInitialization,Redundant initialization for 'cur'. The initialized value is overwritten before it is read.,Redundant initialization for 'cur'. The initialized value is overwritten before it is read.,563,9,cur is overwritten,cur
ggml/examples/sam/sam.cpp,1587,style,redundantInitialization,Redundant initialization for 'cur'. The initialized value is overwritten before it is read.,Redundant initialization for 'cur'. The initialized value is overwritten before it is read.,563,30,cur is initialized,cur
ggml/examples/sam/sam.cpp,1623,style,redundantInitialization,Redundant initialization for 'tokens'. The initialized value is overwritten before it is read.,Redundant initialization for 'tokens'. The initialized value is overwritten before it is read.,563,16,tokens is overwritten,tokens
ggml/examples/sam/sam.cpp,1617,style,redundantInitialization,Redundant initialization for 'tokens'. The initialized value is overwritten before it is read.,Redundant initialization for 'tokens'. The initialized value is overwritten before it is read.,563,33,tokens is initialized,tokens
ggml/examples/sam/sam.cpp,1639,style,redundantInitialization,Redundant initialization for 'src'. The initialized value is overwritten before it is read.,Redundant initialization for 'src'. The initialized value is overwritten before it is read.,563,13,src is overwritten,src
ggml/examples/sam/sam.cpp,1633,style,redundantInitialization,Redundant initialization for 'src'. The initialized value is overwritten before it is read.,Redundant initialization for 'src'. The initialized value is overwritten before it is read.,563,30,src is initialized,src
ggml/examples/sam/sam.cpp,1665,style,redundantInitialization,Redundant initialization for 'pos_src'. The initialized value is overwritten before it is read.,Redundant initialization for 'pos_src'. The initialized value is overwritten before it is read.,563,17,pos_src is overwritten,pos_src
ggml/examples/sam/sam.cpp,1634,style,redundantInitialization,Redundant initialization for 'pos_src'. The initialized value is overwritten before it is read.,Redundant initialization for 'pos_src'. The initialized value is overwritten before it is read.,563,34,pos_src is initialized,pos_src
ggml/examples/sam/sam.cpp,1800,style,redundantInitialization,Redundant initialization for 'upscaled_embedding'. The initialized value is overwritten before it is read.,Redundant initialization for 'upscaled_embedding'. The initialized value is overwritten before it is read.,563,28,upscaled_embedding is overwritten,upscaled_embedding
ggml/examples/sam/sam.cpp,1780,style,redundantInitialization,Redundant initialization for 'upscaled_embedding'. The initialized value is overwritten before it is read.,Redundant initialization for 'upscaled_embedding'. The initialized value is overwritten before it is read.,563,45,upscaled_embedding is initialized,upscaled_embedding
ggml/examples/sam/sam.cpp,1481,style,duplicateBreak,"Consecutive return, break, continue, goto or throw statements are unnecessary.","Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed.",561,11,,
ggml/examples/sam/sam.cpp,1497,style,duplicateBreak,"Consecutive return, break, continue, goto or throw statements are unnecessary.","Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed.",561,11,,
ggml/examples/sam/sam.cpp,1501,style,duplicateBreak,"Consecutive return, break, continue, goto or throw statements are unnecessary.","Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed.",561,11,,
ggml/examples/sam/sam.cpp,720,style,shadowArgument,Local variable 'params' shadows outer argument,Local variable 'params' shadows outer argument,398,33,Shadow variable,params
ggml/examples/sam/sam.cpp,508,style,shadowArgument,Local variable 'params' shadows outer argument,Local variable 'params' shadows outer argument,398,40,Shadowed declaration,params
ggml/examples/sam/sam.cpp,1390,style,shadowVariable,Local variable 'inp' shadows outer variable,Local variable 'inp' shadows outer variable,398,30,Shadow variable,inp
ggml/examples/sam/sam.cpp,1215,style,shadowVariable,Local variable 'inp' shadows outer variable,Local variable 'inp' shadows outer variable,398,26,Shadowed declaration,inp
ggml/examples/sam/sam.cpp,2081,style,shadowVariable,Local variable 'data' shadows outer variable,Local variable 'data' shadows outer variable,398,17,Shadow variable,data
ggml/examples/sam/sam.cpp,2044,style,shadowVariable,Local variable 'data' shadows outer variable,Local variable 'data' shadows outer variable,398,12,Shadowed declaration,data
ggml/examples/sam/sam.cpp,2196,style,shadowVariable,Local variable 'val' shadows outer variable,Local variable 'val' shadows outer variable,398,24,Shadow variable,val
ggml/examples/sam/sam.cpp,2188,style,shadowVariable,Local variable 'val' shadows outer variable,Local variable 'val' shadows outer variable,398,20,Shadowed declaration,val
ggml/examples/sam/sam.cpp,1135,style,constParameterReference,Parameter 'state' can be declared as reference to const,Parameter 'state' can be declared as reference to const,398,33,Parameter 'state' can be declared as reference to const,state
ggml/examples/sam/sam.cpp,1453,style,constParameterReference,Parameter 'state' can be declared as reference to const,Parameter 'state' can be declared as reference to const,398,31,Parameter 'state' can be declared as reference to const,state
ggml/examples/sam/sam.cpp,337,style,constVariablePointer,Variable 'data' can be declared as pointer to const,Variable 'data' can be declared as pointer to const,398,13,Variable 'data' can be declared as pointer to const,data
ggml/examples/sam/sam.cpp,379,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'ggml_sam_sin' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'ggml_sam_sin' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,110,Parameter 'userdata' can be declared as pointer to const,userdata
ggml/examples/sam/sam.cpp,1429,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'ggml_sam_sin' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'ggml_sam_sin' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,66,You might need to cast the function pointer here,userdata
ggml/examples/sam/sam.cpp,398,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'ggml_sam_cos' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'ggml_sam_cos' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,110,Parameter 'userdata' can be declared as pointer to const,userdata
ggml/examples/sam/sam.cpp,1430,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'ggml_sam_cos' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'ggml_sam_cos' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,66,You might need to cast the function pointer here,userdata
ggml/examples/sam/sam.cpp,1877,style,constVariablePointer,Variable 'iou_data' can be declared as pointer to const,Variable 'iou_data' can be declared as pointer to const,398,16,Variable 'iou_data' can be declared as pointer to const,iou_data
ggml/examples/sam/sam.cpp,2170,style,constVariablePointer,Variable 'coord' can be declared as pointer to const,Variable 'coord' can be declared as pointer to const,398,19,Variable 'coord' can be declared as pointer to const,coord
ggml/examples/sam/sam.cpp,2188,style,constVariablePointer,Variable 'val' can be declared as pointer to const,Variable 'val' can be declared as pointer to const,398,20,Variable 'val' can be declared as pointer to const,val
ggml/examples/sam/sam.cpp,2196,style,constVariablePointer,Variable 'val' can be declared as pointer to const,Variable 'val' can be declared as pointer to const,398,24,Variable 'val' can be declared as pointer to const,val
ggml/examples/sam/sam.cpp,68,style,useStlAlgorithm,Consider using std::any_of algorithm instead of a raw loop.,Consider using std::any_of algorithm instead of a raw loop.,398,9,,
ggml/examples/simple/simple-backend.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/simple/simple-backend.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/examples/simple/simple-backend.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/examples/simple/simple-backend.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/simple/simple-backend.cpp,14,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-backend.cpp,15,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-backend.cpp,16,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-backend.cpp,17,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-backend.cpp,18,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-backend.cpp,19,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-backend.cpp,20,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-backend.cpp,21,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-backend.cpp,130,style,variableScope,The scope of the variable 'n_threads' can be reduced.,"The scope of the variable 'n_threads' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,9,,n_threads
ggml/examples/simple/simple-backend.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/examples/simple/simple-backend.cpp,67,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,9,Second condition,
ggml/examples/simple/simple-backend.cpp,53,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,9,First condition,
ggml/examples/simple/simple-backend.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/examples/simple/simple-backend.cpp,67,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,9,Second condition,
ggml/examples/simple/simple-backend.cpp,61,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,9,First condition,
ggml/examples/simple/simple-ctx.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/simple/simple-ctx.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/examples/simple/simple-ctx.cpp,4,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-ctx.cpp,5,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-ctx.cpp,6,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-ctx.cpp,7,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-ctx.cpp,8,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-ctx.cpp,9,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-ctx.cpp,10,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-ctx.cpp,11,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/simple/simple-ctx.cpp,23,style,constParameterPointer,Parameter 'a' can be declared as pointer to const,Parameter 'a' can be declared as pointer to const,398,47,Parameter 'a' can be declared as pointer to const,a
ggml/examples/simple/simple-ctx.cpp,23,style,constParameterPointer,Parameter 'b' can be declared as pointer to const,Parameter 'b' can be declared as pointer to const,398,58,Parameter 'b' can be declared as pointer to const,b
ggml/examples/test-cmake/test-cmake.cpp,1,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/yolo/yolo-image.cpp,2,information,missingInclude,"Include file: ""stb_image.h"" not found.","Include file: ""stb_image.h"" not found.",,0,,
ggml/examples/yolo/yolo-image.cpp,4,information,missingInclude,"Include file: ""stb_image_write.h"" not found.","Include file: ""stb_image_write.h"" not found.",,0,,
ggml/examples/yolo/yolo-image.h,3,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolo-image.h,4,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolo-image.h,5,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolo-image.cpp,54,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: data","If memory allocation fails, then there is a possible null pointer dereference: data",476,13,Null pointer dereference,data
ggml/examples/yolo/yolo-image.cpp,51,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: data","If memory allocation fails, then there is a possible null pointer dereference: data",476,21,"Assignment 'data=(uint8_t*)calloc(im.w*im.h*im.c,sizeof(uint8_t))', assigned value is 0",data
ggml/examples/yolo/yolo-image.cpp,51,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: data","If memory allocation fails, then there is a possible null pointer dereference: data",476,37,Assuming allocation function fails,data
ggml/examples/yolo/yolo-image.cpp,51,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/examples/yolo/yolo-image.cpp,149,style,redundantInitialization,Redundant initialization for 'new_w'. The initialized value is overwritten before it is read.,Redundant initialization for 'new_w'. The initialized value is overwritten before it is read.,563,15,new_w is overwritten,new_w
ggml/examples/yolo/yolo-image.cpp,146,style,redundantInitialization,Redundant initialization for 'new_w'. The initialized value is overwritten before it is read.,Redundant initialization for 'new_w'. The initialized value is overwritten before it is read.,563,15,new_w is initialized,new_w
ggml/examples/yolo/yolo-image.cpp,150,style,redundantInitialization,Redundant initialization for 'new_h'. The initialized value is overwritten before it is read.,Redundant initialization for 'new_h'. The initialized value is overwritten before it is read.,563,15,new_h is overwritten,new_h
ggml/examples/yolo/yolo-image.cpp,147,style,redundantInitialization,Redundant initialization for 'new_h'. The initialized value is overwritten before it is read.,Redundant initialization for 'new_h'. The initialized value is overwritten before it is read.,563,15,new_h is initialized,new_h
ggml/examples/yolo/yolov3-tiny.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/examples/yolo/yolov3-tiny.cpp,2,information,missingInclude,"Include file: ""gguf.h"" not found.","Include file: ""gguf.h"" not found.",,0,,
ggml/examples/yolo/yolov3-tiny.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/examples/yolo/yolov3-tiny.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/examples/yolo/yolov3-tiny.cpp,8,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolov3-tiny.cpp,9,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolov3-tiny.cpp,10,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolov3-tiny.cpp,11,information,missingIncludeSystem,Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolov3-tiny.cpp,12,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolov3-tiny.cpp,13,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolov3-tiny.cpp,14,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolov3-tiny.cpp,15,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolov3-tiny.cpp,16,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolov3-tiny.cpp,17,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/examples/yolo/yolov3-tiny.cpp,310,style,shadowVariable,Local variable 'k' shadows outer variable,Local variable 'k' shadows outer variable,398,14,Shadow variable,k
ggml/examples/yolo/yolov3-tiny.cpp,301,style,shadowVariable,Local variable 'k' shadows outer variable,Local variable 'k' shadows outer variable,398,9,Shadowed declaration,k
ggml/examples/yolo/yolov3-tiny.cpp,536,style,shadowVariable,Local variable 'i' shadows outer variable,Local variable 'i' shadows outer variable,398,29,Shadow variable,i
ggml/examples/yolo/yolov3-tiny.cpp,505,style,shadowVariable,Local variable 'i' shadows outer variable,Local variable 'i' shadows outer variable,398,14,Shadowed declaration,i
ggml/examples/yolo/yolov3-tiny.cpp,331,style,constVariable,Variable 'colors' can be declared as const array,Variable 'colors' can be declared as const array,398,11,Variable 'colors' can be declared as const array,colors
ggml/examples/yolo/yolov3-tiny.cpp,241,style,unusedVariable,Unused variable: result,Unused variable: result,563,28,,result
ggml/src/ggml-alloc.c,1,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/src/ggml-backend-impl.h,5,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-alloc.c,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-impl.h,5,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-impl.h,6,information,missingInclude,"Include file: ""gguf.h"" not found.","Include file: ""gguf.h"" not found.",,0,,
ggml/src/ggml-impl.h,8,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-impl.h,9,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-impl.h,10,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-impl.h,11,information,missingIncludeSystem,Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-impl.h,12,information,missingIncludeSystem,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-impl.h,13,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-alloc.c,5,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-alloc.c,6,information,missingIncludeSystem,Include file: <limits.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <limits.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-alloc.c,7,information,missingIncludeSystem,Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-alloc.c,8,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-alloc.c,9,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-alloc.c,10,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-impl.h,109,error,unknownMacro,There is an unknown macro here somewhere. Configuration is required. If GGML_ATTRIBUTE_FORMAT is a macro then please configure it.,There is an unknown macro here somewhere. Configuration is required. If GGML_ATTRIBUTE_FORMAT is a macro then please configure it.,,1,,
ggml/src/ggml-impl.h,16,information,missingIncludeSystem,Include file: <arm_sve.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <arm_sve.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-impl.h,28,information,missingIncludeSystem,Include file: <immintrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <immintrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-backend-reg.cpp,2,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-impl.h,643,information,missingIncludeSystem,Include file: <initializer_list> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <initializer_list> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-impl.h,644,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,4,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,5,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,6,information,missingIncludeSystem,Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,7,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,8,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,9,information,missingIncludeSystem,Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,10,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,11,information,missingIncludeSystem,Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,23,information,missingIncludeSystem,Include file: <dlfcn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <dlfcn.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,24,information,missingIncludeSystem,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend-reg.cpp,61,information,missingInclude,"Include file: ""ggml-blas.h"" not found.","Include file: ""ggml-blas.h"" not found.",,0,,
ggml/src/ggml-backend-reg.cpp,69,information,missingInclude,"Include file: ""ggml-cann.h"" not found.","Include file: ""ggml-cann.h"" not found.",,0,,
ggml/src/ggml-backend-reg.cpp,29,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-backend-reg.cpp,33,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/src/ggml-backend-reg.cpp,37,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/src/ggml-backend-reg.cpp,57,information,missingInclude,"Include file: ""ggml-opencl.h"" not found.","Include file: ""ggml-opencl.h"" not found.",,0,,
ggml/src/ggml-backend-reg.cpp,65,information,missingInclude,"Include file: ""ggml-rpc.h"" not found.","Include file: ""ggml-rpc.h"" not found.",,0,,
ggml/src/ggml-backend-reg.cpp,41,information,missingInclude,"Include file: ""ggml-sycl.h"" not found.","Include file: ""ggml-sycl.h"" not found.",,0,,
ggml/src/ggml-backend-reg.cpp,45,information,missingInclude,"Include file: ""ggml-vulkan.h"" not found.","Include file: ""ggml-vulkan.h"" not found.",,0,,
ggml/src/ggml-backend.cpp,11,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-backend.cpp,13,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/src/ggml-backend.cpp,16,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend.cpp,17,information,missingIncludeSystem,Include file: <limits.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <limits.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend.cpp,18,information,missingIncludeSystem,Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend.cpp,19,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend.cpp,20,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend.cpp,21,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend.cpp,22,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend.cpp,23,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend.cpp,8,information,missingIncludeSystem,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend.cpp,26,information,missingIncludeSystem,Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-backend.cpp,27,information,missingIncludeSystem,Include file: <sys/sysctl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/sysctl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-blas/ggml-blas.cpp,1,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-blas/ggml-blas.cpp,2,information,missingInclude,"Include file: ""ggml-blas.h"" not found.","Include file: ""ggml-blas.h"" not found.",,0,,
ggml/src/ggml-blas/ggml-blas.cpp,3,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-blas/ggml-blas.cpp,5,information,missingIncludeSystem,Include file: <future> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <future> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-blas/ggml-blas.cpp,6,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-blas/ggml-blas.cpp,7,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-blas/ggml-blas.cpp,18,information,missingIncludeSystem,Include file: <cblas.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cblas.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-blas/ggml-blas.cpp,73,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-blas/ggml-blas.cpp,74,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-blas/ggml-blas.cpp,92,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-blas/ggml-blas.cpp,102,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-blas/ggml-blas.cpp,135,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-blas/ggml-blas.cpp,136,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-blas/ggml-blas.cpp,137,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-blas/ggml-blas.cpp,140,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-blas/ggml-blas.cpp,204,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-blas/ggml-blas.cpp,205,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-blas/ggml-blas.cpp,206,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-blas/ggml-blas.cpp,222,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,39,,
ggml/src/ggml-blas/ggml-blas.cpp,228,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,39,,
ggml/src/ggml-blas/ggml-blas.cpp,311,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,39,,
ggml/src/ggml-blas/ggml-blas.cpp,204,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,17,,
ggml/src/ggml-blas/ggml-blas.cpp,205,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,17,,
ggml/src/ggml-blas/ggml-blas.cpp,206,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,17,,
ggml/src/ggml-blas/ggml-blas.cpp,204,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,17,,
ggml/src/ggml-blas/ggml-blas.cpp,205,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,17,,
ggml/src/ggml-blas/ggml-blas.cpp,206,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,17,,
ggml/src/ggml-blas/ggml-blas.cpp,218,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,256,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,320,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,338,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,352,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,371,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,378,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,384,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,441,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,467,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,473,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,487,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,497,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-blas/ggml-blas.cpp,403,style,shadowVariable,Local variable 'src0' shadows outer variable,Local variable 'src0' shadows outer variable,398,40,Shadow variable,src0
ggml/src/ggml-blas/ggml-blas.cpp,389,style,shadowVariable,Local variable 'src0' shadows outer variable,Local variable 'src0' shadows outer variable,398,32,Shadowed declaration,src0
ggml/src/ggml-blas/ggml-blas.cpp,404,style,shadowVariable,Local variable 'src1' shadows outer variable,Local variable 'src1' shadows outer variable,398,40,Shadow variable,src1
ggml/src/ggml-blas/ggml-blas.cpp,390,style,shadowVariable,Local variable 'src1' shadows outer variable,Local variable 'src1' shadows outer variable,398,32,Shadowed declaration,src1
ggml/src/ggml-blas/ggml-blas.cpp,83,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-blas/ggml-blas.cpp,78,style,unreadVariable,Variable 'n_threads' is assigned a value that is never used.,Variable 'n_threads' is assigned a value that is never used.,563,37,,n_threads
ggml/src/ggml-blas/ggml-blas.cpp,78,style,unreadVariable,Variable 'n_threads' is assigned a value that is never used.,Variable 'n_threads' is assigned a value that is never used.,563,27,,n_threads
ggml/src/ggml-blas/ggml-blas.cpp,10,information,missingIncludeSystem,Include file: <Accelerate/Accelerate.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <Accelerate/Accelerate.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-blas/ggml-blas.cpp,14,information,missingIncludeSystem,Include file: <blis.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <blis.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-blas/ggml-blas.cpp,12,information,missingIncludeSystem,Include file: <mkl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <mkl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-blas/ggml-blas.cpp,16,information,missingIncludeSystem,Include file: <nvpl_blas.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <nvpl_blas.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/acl_tensor.h,26,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/acl_tensor.h,27,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/acl_tensor.h,29,information,missingIncludeSystem,Include file: <aclnn/aclnn_base.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnn/aclnn_base.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,26,information,missingIncludeSystem,Include file: <acl/acl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <acl/acl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,28,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,29,information,missingIncludeSystem,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,30,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,31,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,32,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,33,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,34,information,missingIncludeSystem,Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,35,information,missingIncludeSystem,Include file: <condition_variable> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <condition_variable> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,36,information,missingIncludeSystem,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,37,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,38,information,missingIncludeSystem,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,39,information,missingIncludeSystem,Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,40,information,missingIncludeSystem,Include file: <optional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <optional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,41,information,missingIncludeSystem,Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/common.h,43,information,missingInclude,"Include file: ""../include/ggml-cann.h"" not found.","Include file: ""../include/ggml-cann.h"" not found.",,0,,
ggml/src/ggml-cann/common.h,44,information,missingInclude,"Include file: ""../include/ggml.h"" not found.","Include file: ""../include/ggml.h"" not found.",,0,,
ggml/src/ggml-cann/acl_tensor.cpp,25,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/acl_tensor.cpp,26,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cann/aclnn_ops.h,26,information,missingIncludeSystem,Include file: <unordered_set> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unordered_set> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,27,information,missingIncludeSystem,Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,28,information,missingIncludeSystem,Include file: <aclnnop/aclnn_abs.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_abs.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,29,information,missingIncludeSystem,Include file: <aclnnop/aclnn_neg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_neg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,30,information,missingIncludeSystem,Include file: <aclnnop/aclnn_exp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_exp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,31,information,missingIncludeSystem,Include file: <aclnnop/aclnn_arange.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_arange.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,32,information,missingIncludeSystem,Include file: <aclnnop/aclnn_argsort.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_argsort.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,33,information,missingIncludeSystem,Include file: <aclnnop/aclnn_cat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_cat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,34,information,missingIncludeSystem,Include file: <aclnnop/aclnn_clamp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_clamp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,35,information,missingIncludeSystem,Include file: <aclnnop/aclnn_gelu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_gelu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,36,information,missingIncludeSystem,Include file: <aclnnop/aclnn_gelu_v2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_gelu_v2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,37,information,missingIncludeSystem,Include file: <aclnnop/aclnn_sigmoid.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_sigmoid.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,38,information,missingIncludeSystem,Include file: <aclnnop/aclnn_hardsigmoid.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_hardsigmoid.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,39,information,missingIncludeSystem,Include file: <aclnnop/aclnn_hardswish.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_hardswish.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,40,information,missingIncludeSystem,Include file: <aclnnop/aclnn_leaky_relu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_leaky_relu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,41,information,missingIncludeSystem,Include file: <aclnnop/aclnn_relu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_relu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,42,information,missingIncludeSystem,Include file: <aclnnop/aclnn_silu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_silu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,43,information,missingIncludeSystem,Include file: <aclnnop/aclnn_tanh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_tanh.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,44,information,missingIncludeSystem,Include file: <aclnnop/aclnn_sqrt.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_sqrt.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,45,information,missingIncludeSystem,Include file: <aclnnop/aclnn_sin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_sin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,46,information,missingIncludeSystem,Include file: <aclnnop/aclnn_cos.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_cos.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,47,information,missingIncludeSystem,Include file: <aclnnop/aclnn_log.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_log.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.h,48,information,missingIncludeSystem,Include file: <aclnnop/aclnn_sign.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_sign.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,25,information,missingIncludeSystem,Include file: <aclnnop/aclnn_addcdiv.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_addcdiv.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,26,information,missingIncludeSystem,Include file: <aclnnop/aclnn_avgpool2d.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_avgpool2d.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,27,information,missingIncludeSystem,Include file: <aclnnop/aclnn_batch_matmul.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_batch_matmul.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,28,information,missingIncludeSystem,Include file: <aclnnop/aclnn_cast.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_cast.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,29,information,missingIncludeSystem,Include file: <aclnnop/aclnn_constant_pad_nd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_constant_pad_nd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,30,information,missingIncludeSystem,Include file: <aclnnop/aclnn_copy.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_copy.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,31,information,missingIncludeSystem,Include file: <aclnnop/aclnn_div.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_div.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,32,information,missingIncludeSystem,Include file: <aclnnop/aclnn_embedding.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_embedding.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,33,information,missingIncludeSystem,Include file: <aclnnop/aclnn_exp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_exp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,34,information,missingIncludeSystem,Include file: <aclnnop/aclnn_fill_scalar.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_fill_scalar.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,35,information,missingIncludeSystem,Include file: <aclnnop/aclnn_group_norm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_group_norm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,36,information,missingIncludeSystem,Include file: <aclnnop/aclnn_index_fill_tensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_index_fill_tensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,37,information,missingIncludeSystem,Include file: <aclnnop/aclnn_layer_norm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_layer_norm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,38,information,missingIncludeSystem,Include file: <aclnnop/aclnn_matmul.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_matmul.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,39,information,missingIncludeSystem,Include file: <aclnnop/aclnn_max_pool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_max_pool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,40,information,missingIncludeSystem,Include file: <aclnnop/aclnn_mm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_mm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,41,information,missingIncludeSystem,Include file: <aclnnop/aclnn_permute.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_permute.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,42,information,missingIncludeSystem,Include file: <aclnnop/aclnn_pow_tensor_tensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_pow_tensor_tensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,43,information,missingIncludeSystem,Include file: <aclnnop/aclnn_reduce_sum.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_reduce_sum.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,44,information,missingIncludeSystem,Include file: <aclnnop/aclnn_repeat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_repeat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,45,information,missingIncludeSystem,Include file: <aclnnop/aclnn_repeat_interleave.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_repeat_interleave.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,46,information,missingIncludeSystem,Include file: <aclnnop/aclnn_roll.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_roll.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,47,information,missingIncludeSystem,Include file: <aclnnop/aclnn_softmax.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_softmax.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,48,information,missingIncludeSystem,Include file: <aclnnop/aclnn_tril.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_tril.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,49,information,missingIncludeSystem,Include file: <aclnnop/aclnn_triu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_triu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,50,information,missingIncludeSystem,Include file: <aclnnop/aclnn_upsample_nearest_2d.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_upsample_nearest_2d.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,51,information,missingIncludeSystem,Include file: <aclnnop/aclnn_weight_quant_batch_matmul_v2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_weight_quant_batch_matmul_v2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,52,information,missingIncludeSystem,Include file: <aclnnop/aclnn_argmax.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_argmax.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,53,information,missingIncludeSystem,Include file: <aclnnop/aclnn_sum.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_sum.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,54,information,missingIncludeSystem,Include file: <aclnnop/aclnn_rms_norm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_rms_norm.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,55,information,missingIncludeSystem,Include file: <aclnnop/aclnn_im2col.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_im2col.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,56,information,missingIncludeSystem,Include file: <aclnnop/aclnn_add.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_add.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,57,information,missingIncludeSystem,Include file: <aclnnop/aclnn_sub.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_sub.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,58,information,missingIncludeSystem,Include file: <aclnnop/aclnn_mul.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_mul.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,59,information,missingIncludeSystem,Include file: <aclnnop/aclnn_div.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_div.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,60,information,missingIncludeSystem,Include file: <aclnnop/aclnn_convolution.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_convolution.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,61,information,missingIncludeSystem,Include file: <aclnnop/aclnn_elu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_elu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,62,information,missingIncludeSystem,Include file: <aclnnop/aclnn_log.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_log.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,63,information,missingIncludeSystem,Include file: <aclnnop/aclnn_mean.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_mean.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,64,information,missingIncludeSystem,Include file: <aclnnop/aclnn_reflection_pad1d.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_reflection_pad1d.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,65,information,missingIncludeSystem,Include file: <aclnnop/aclnn_eq_tensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_eq_tensor.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,66,information,missingIncludeSystem,Include file: <aclnnop/aclnn_gt_scalar.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_gt_scalar.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,67,information,missingIncludeSystem,Include file: <aclnnop/aclnn_pow.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_pow.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,68,information,missingIncludeSystem,Include file: <aclnnop/aclnn_grouped_matmul_v3.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_grouped_matmul_v3.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,69,information,missingIncludeSystem,Include file: <aclnnop/aclnn_fused_infer_attention_score_v2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_fused_infer_attention_score_v2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,70,information,missingIncludeSystem,Include file: <aclnnop/aclnn_zero.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_zero.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,71,information,missingIncludeSystem,Include file: <aclnnop/aclnn_index_copy.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_index_copy.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,72,information,missingIncludeSystem,Include file: <aclnnop/aclnn_index_select.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_index_select.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,73,information,missingIncludeSystem,Include file: <aclnnop/aclnn_clamp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_clamp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,74,information,missingIncludeSystem,Include file: <aclnnop/aclnn_threshold.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_threshold.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,75,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,77,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,78,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,79,information,missingIncludeSystem,Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,80,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,82,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cann/aclnn_ops.cpp,83,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-common.h,4,information,missingIncludeSystem,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,438,information,missingIncludeSystem,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,445,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,459,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,23,information,missingInclude,"Include file: ""ggml-cann.h"" not found.","Include file: ""ggml-cann.h"" not found.",,0,,
ggml/src/ggml-cann/ggml-cann.cpp,25,information,missingIncludeSystem,Include file: <acl/acl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <acl/acl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,26,information,missingIncludeSystem,Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,27,information,missingIncludeSystem,Include file: <aclnnop/aclnn_trans_matmul_weight.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <aclnnop/aclnn_trans_matmul_weight.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,29,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,30,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,31,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,32,information,missingIncludeSystem,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,33,information,missingIncludeSystem,Include file: <queue> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <queue> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,34,information,missingIncludeSystem,Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,35,information,missingIncludeSystem,Include file: <unordered_set> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unordered_set> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,36,information,missingIncludeSystem,Include file: <optional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <optional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cann/ggml-cann.cpp,38,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cann/ggml-cann.cpp,39,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cann/ggml-cann.cpp,40,information,missingInclude,"Include file: ""ggml-cann/aclnn_ops.h"" not found.","Include file: ""ggml-cann/aclnn_ops.h"" not found.",,0,,
ggml/src/ggml-cann/ggml-cann.cpp,41,information,missingInclude,"Include file: ""ggml-cann/common.h"" not found.","Include file: ""ggml-cann/common.h"" not found.",,0,,
ggml/src/ggml-cann/ggml-cann.cpp,42,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cann/ggml-cann.cpp,46,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cann/ggml-cann.cpp,147,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-cann/ggml-cann.cpp,716,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cann/ggml-cann.cpp,720,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cann/ggml-cann.cpp,734,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-cann/ggml-cann.cpp,760,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,36,,
ggml/src/ggml-cann/ggml-cann.cpp,844,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,860,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,885,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-cann/ggml-cann.cpp,886,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-cann/ggml-cann.cpp,890,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-cann/ggml-cann.cpp,910,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-cann/ggml-cann.cpp,911,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-cann/ggml-cann.cpp,936,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-cann/ggml-cann.cpp,937,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-cann/ggml-cann.cpp,939,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-cann/ggml-cann.cpp,942,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/src/ggml-cann/ggml-cann.cpp,945,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cann/ggml-cann.cpp,985,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-cann/ggml-cann.cpp,986,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-cann/ggml-cann.cpp,990,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-cann/ggml-cann.cpp,1018,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cann/ggml-cann.cpp,1020,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-cann/ggml-cann.cpp,1023,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cann/ggml-cann.cpp,1129,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cann/ggml-cann.cpp,1245,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,1255,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-cann/ggml-cann.cpp,1266,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-cann/ggml-cann.cpp,1290,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,1295,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cann/ggml-cann.cpp,1300,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-cann/ggml-cann.cpp,1324,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cann/ggml-cann.cpp,1326,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cann/ggml-cann.cpp,1331,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cann/ggml-cann.cpp,1332,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cann/ggml-cann.cpp,1347,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,39,,
ggml/src/ggml-cann/ggml-cann.cpp,1348,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,39,,
ggml/src/ggml-cann/ggml-cann.cpp,1369,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,1416,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,1435,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,1654,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,36,,
ggml/src/ggml-cann/ggml-cann.cpp,1961,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,1976,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,2002,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,2010,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cann/ggml-cann.cpp,2029,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,2037,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-cann/ggml-cann.cpp,2074,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,2076,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,2088,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cann/ggml-cann.cpp,2090,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cann/ggml-cann.cpp,2143,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,2351,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,2533,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-cann/ggml-cann.cpp,2559,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,36,,
ggml/src/ggml-cann/ggml-cann.cpp,2616,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-cann/ggml-cann.cpp,2652,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cann/ggml-cann.cpp,2712,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,2729,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,2784,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cann/ggml-cann.cpp,2789,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cann/ggml-cann.cpp,2794,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cann/ggml-cann.cpp,2821,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cann/ggml-cann.cpp,2841,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,54,,
ggml/src/ggml-cann/ggml-cann.cpp,2843,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-cann/ggml-cann.cpp,2850,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cann/ggml-cann.cpp,2871,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,50,,
ggml/src/ggml-cann/ggml-cann.cpp,2942,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cann/ggml-cann.cpp,2947,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cann/ggml-cann.cpp,886,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,30,,
ggml/src/ggml-cann/ggml-cann.cpp,890,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,13,,
ggml/src/ggml-cann/ggml-cann.cpp,937,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,30,,
ggml/src/ggml-cann/ggml-cann.cpp,945,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cann/ggml-cann.cpp,986,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,30,,
ggml/src/ggml-cann/ggml-cann.cpp,990,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,13,,
ggml/src/ggml-cann/ggml-cann.cpp,1020,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,9,,
ggml/src/ggml-cann/ggml-cann.cpp,1023,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cann/ggml-cann.cpp,1257,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cann/ggml-cann.cpp,1513,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,49,,
ggml/src/ggml-cann/ggml-cann.cpp,2061,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,35,,
ggml/src/ggml-cann/ggml-cann.cpp,1477,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cann/ggml-cann.cpp,1529,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cann/ggml-cann.cpp,1535,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cann/ggml-cann.cpp,1605,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cann/ggml-cann.cpp,1620,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cann/ggml-cann.cpp,2515,style,duplicateBreak,"Consecutive return, break, continue, goto or throw statements are unnecessary.","Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed.",561,11,,
ggml/src/ggml-cann/ggml-cann.cpp,2969,style,variableScope,The scope of the variable 'initialized' can be reduced.,"The scope of the variable 'initialized' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,17,,initialized
ggml/src/ggml-cann/ggml-cann.cpp,2298,style,constParameterReference,Parameter 'use_cann_graph' can be declared as reference to const,Parameter 'use_cann_graph' can be declared as reference to const,398,12,Parameter 'use_cann_graph' can be declared as reference to const,use_cann_graph
ggml/src/ggml-cann/ggml-cann.cpp,2298,style,constParameterReference,Parameter 'cann_graph_update_required' can be declared as reference to const,Parameter 'cann_graph_update_required' can be declared as reference to const,398,36,Parameter 'cann_graph_update_required' can be declared as reference to const,cann_graph_update_required
ggml/src/ggml-cann/ggml-cann.cpp,859,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,39,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-cann/ggml-cann.cpp,937,style,constVariablePointer,Variable 'scale_offset' can be declared as pointer to const,Variable 'scale_offset' can be declared as pointer to const,398,15,Variable 'scale_offset' can be declared as pointer to const,scale_offset
ggml/src/ggml-cann/ggml-cann.cpp,1244,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,39,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-cann/ggml-cann.cpp,1289,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,39,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-cann/ggml-cann.cpp,2087,style,constVariablePointer,Variable 'buf_ctx_src' can be declared as pointer to const,Variable 'buf_ctx_src' can be declared as pointer to const,398,43,Variable 'buf_ctx_src' can be declared as pointer to const,buf_ctx_src
ggml/src/ggml-cann/ggml-cann.cpp,2089,style,constVariablePointer,Variable 'buf_ctx_dst' can be declared as pointer to const,Variable 'buf_ctx_dst' can be declared as pointer to const,398,43,Variable 'buf_ctx_dst' can be declared as pointer to const,buf_ctx_dst
ggml/src/ggml-cann/ggml-cann.cpp,2507,style,constVariablePointer,Variable 'src' can be declared as pointer to const,Variable 'src' can be declared as pointer to const,398,26,Variable 'src' can be declared as pointer to const,src
ggml/src/ggml-cann/ggml-cann.cpp,2794,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,40,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-cann/ggml-cann.cpp,2821,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,40,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-cann/ggml-cann.cpp,2841,style,constVariablePointer,Variable 'dev_ctx' can be declared as pointer to const,Variable 'dev_ctx' can be declared as pointer to const,398,44,Variable 'dev_ctx' can be declared as pointer to const,dev_ctx
ggml/src/ggml-cann/ggml-cann.cpp,2842,style,constVariablePointer,Variable 'buft_ctx' can be declared as pointer to const,Variable 'buft_ctx' can be declared as pointer to const,398,49,Variable 'buft_ctx' can be declared as pointer to const,buft_ctx
ggml/src/ggml-cann/ggml-cann.cpp,2850,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,40,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-cann/ggml-cann.cpp,1341,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,13,,
ggml/src/ggml-cann/ggml-cann.cpp,2087,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,9,,
ggml/src/ggml-cann/ggml-cann.cpp,2463,style,duplicateBreak,"Consecutive return, break, continue, goto or throw statements are unnecessary.","Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed.",561,21,,
ggml/src/ggml-cann/ggml-cann.cpp,2481,style,duplicateBreak,"Consecutive return, break, continue, goto or throw statements are unnecessary.","Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed.",561,21,,
ggml/src/ggml-cann/ggml-cann.cpp,2630,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,13,,
ggml/src/ggml-cann/ggml-cann.cpp,2073,style,unreadVariable,Variable 'cann_ctx_src' is assigned a value that is never used.,Variable 'cann_ctx_src' is assigned a value that is never used.,563,45,,cann_ctx_src
ggml/src/ggml-cann/ggml-cann.cpp,2209,style,constParameterPointer,Parameter 'node' can be declared as pointer to const,Parameter 'node' can be declared as pointer to const,398,67,Parameter 'node' can be declared as pointer to const,node
ggml/src/ggml-cann/ggml-cann.cpp,2209,style,constParameterPointer,Parameter 'graph_node_properties' can be declared as pointer to const,Parameter 'graph_node_properties' can be declared as pointer to const,398,102,Parameter 'graph_node_properties' can be declared as pointer to const,graph_node_properties
ggml/src/ggml-cpu/amx/amx.h,1,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/amx.h,2,information,missingInclude,"Include file: ""ggml-cpu-impl.h"" not found.","Include file: ""ggml-cpu-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/common.h,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/common.h,4,information,missingInclude,"Include file: ""ggml-cpu-impl.h"" not found.","Include file: ""ggml-cpu-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/common.h,6,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/common.h,7,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/common.h,8,information,missingIncludeSystem,Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/amx.cpp,4,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/amx.cpp,5,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/amx.cpp,6,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/amx.cpp,7,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/amx.cpp,8,information,missingInclude,"Include file: ""traits.h"" not found.","Include file: ""traits.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/amx.cpp,15,information,missingIncludeSystem,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/amx.cpp,16,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/amx.cpp,17,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/common.h,11,information,missingIncludeSystem,Include file: <omp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <omp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/amx.cpp,216,style,knownConditionTrueFalse,Condition '!ggml_amx_init()' is always false,Condition '!ggml_amx_init()' is always false,570,9,Condition '!ggml_amx_init()' is always false,
ggml/src/ggml-cpu/amx/amx.cpp,216,style,knownConditionTrueFalse,Condition '!ggml_amx_init()' is always false,Condition '!ggml_amx_init()' is always false,570,23,Calling function 'ggml_amx_init' returns 1,
ggml/src/ggml-cpu/amx/amx.cpp,54,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-cpu/amx/amx.cpp,62,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,12,,
ggml/src/ggml-cpu/amx/amx.cpp,73,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,16,,
ggml/src/ggml-cpu/amx/amx.cpp,122,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/amx/amx.cpp,138,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/amx/amx.cpp,180,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/amx/amx.cpp,216,style,knownConditionTrueFalse,Condition '!ggml_amx_init()' is always true,Condition '!ggml_amx_init()' is always true,571,9,Condition '!ggml_amx_init()' is always true,
ggml/src/ggml-cpu/amx/amx.cpp,216,style,knownConditionTrueFalse,Condition '!ggml_amx_init()' is always true,Condition '!ggml_amx_init()' is always true,571,23,Calling function 'ggml_amx_init' returns 0,
ggml/src/ggml-cpu/amx/amx.cpp,11,information,missingIncludeSystem,Include file: <sys/syscall.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/syscall.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/amx.cpp,12,information,missingIncludeSystem,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/mmq.cpp,9,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/mmq.cpp,10,information,missingInclude,"Include file: ""ggml-cpu-impl.h"" not found.","Include file: ""ggml-cpu-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/mmq.cpp,11,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/mmq.cpp,12,information,missingInclude,"Include file: ""quants.h"" not found.","Include file: ""quants.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/mmq.cpp,13,information,missingInclude,"Include file: ""ggml-quants.h"" not found.","Include file: ""ggml-quants.h"" not found.",,0,,
ggml/src/ggml-cpu/amx/mmq.cpp,14,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/mmq.cpp,15,information,missingIncludeSystem,Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/mmq.cpp,478,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-cpu/amx/mmq.cpp,489,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,521,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cpu/amx/mmq.cpp,529,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cpu/amx/mmq.cpp,538,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cpu/amx/mmq.cpp,549,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cpu/amx/mmq.cpp,644,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/amx/mmq.cpp,652,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cpu/amx/mmq.cpp,656,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/amx/mmq.cpp,659,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cpu/amx/mmq.cpp,663,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/amx/mmq.cpp,671,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/amx/mmq.cpp,694,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/amx/mmq.cpp,695,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/amx/mmq.cpp,735,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/amx/mmq.cpp,736,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/amx/mmq.cpp,769,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/amx/mmq.cpp,790,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-cpu/amx/mmq.cpp,798,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-cpu/amx/mmq.cpp,815,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,59,,
ggml/src/ggml-cpu/amx/mmq.cpp,818,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,37,,
ggml/src/ggml-cpu/amx/mmq.cpp,823,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-cpu/amx/mmq.cpp,853,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-cpu/amx/mmq.cpp,884,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-cpu/amx/mmq.cpp,913,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-cpu/amx/mmq.cpp,931,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,50,,
ggml/src/ggml-cpu/amx/mmq.cpp,959,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,58,,
ggml/src/ggml-cpu/amx/mmq.cpp,971,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,62,,
ggml/src/ggml-cpu/amx/mmq.cpp,983,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cpu/amx/mmq.cpp,998,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-cpu/amx/mmq.cpp,1002,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-cpu/amx/mmq.cpp,1029,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-cpu/amx/mmq.cpp,1033,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-cpu/amx/mmq.cpp,1072,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-cpu/amx/mmq.cpp,1091,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,81,,
ggml/src/ggml-cpu/amx/mmq.cpp,1113,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,81,,
ggml/src/ggml-cpu/amx/mmq.cpp,1114,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,81,,
ggml/src/ggml-cpu/amx/mmq.cpp,1138,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,81,,
ggml/src/ggml-cpu/amx/mmq.cpp,1159,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,68,,
ggml/src/ggml-cpu/amx/mmq.cpp,1180,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,55,,
ggml/src/ggml-cpu/amx/mmq.cpp,1201,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,68,,
ggml/src/ggml-cpu/amx/mmq.cpp,1222,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,55,,
ggml/src/ggml-cpu/amx/mmq.cpp,1243,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,68,,
ggml/src/ggml-cpu/amx/mmq.cpp,1269,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,66,,
ggml/src/ggml-cpu/amx/mmq.cpp,1302,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,64,,
ggml/src/ggml-cpu/amx/mmq.cpp,1353,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,63,,
ggml/src/ggml-cpu/amx/mmq.cpp,1467,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-cpu/amx/mmq.cpp,1532,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-cpu/amx/mmq.cpp,1603,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-cpu/amx/mmq.cpp,1652,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,77,,
ggml/src/ggml-cpu/amx/mmq.cpp,1654,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,59,,
ggml/src/ggml-cpu/amx/mmq.cpp,1703,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-cpu/amx/mmq.cpp,1745,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,77,,
ggml/src/ggml-cpu/amx/mmq.cpp,1747,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,59,,
ggml/src/ggml-cpu/amx/mmq.cpp,1809,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-cpu/amx/mmq.cpp,1849,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-cpu/amx/mmq.cpp,1850,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-cpu/amx/mmq.cpp,1851,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-cpu/amx/mmq.cpp,1852,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-cpu/amx/mmq.cpp,1854,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,59,,
ggml/src/ggml-cpu/amx/mmq.cpp,1967,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-cpu/amx/mmq.cpp,1968,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-cpu/amx/mmq.cpp,1969,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-cpu/amx/mmq.cpp,1970,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-cpu/amx/mmq.cpp,1973,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,59,,
ggml/src/ggml-cpu/amx/mmq.cpp,2016,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-cpu/amx/mmq.cpp,2334,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,5,,
ggml/src/ggml-cpu/amx/mmq.cpp,2392,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/amx/mmq.cpp,2428,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cpu/amx/mmq.cpp,2455,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/amx/mmq.cpp,2488,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-cpu/amx/mmq.cpp,1392,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-cpu/amx/mmq.cpp,499,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-cpu/amx/mmq.cpp,504,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-cpu/amx/mmq.cpp,511,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,30,,
ggml/src/ggml-cpu/amx/mmq.cpp,522,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,530,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,539,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,551,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,557,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,41,,
ggml/src/ggml-cpu/amx/mmq.cpp,565,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,44,,
ggml/src/ggml-cpu/amx/mmq.cpp,578,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,47,,
ggml/src/ggml-cpu/amx/mmq.cpp,579,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cpu/amx/mmq.cpp,598,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,48,,
ggml/src/ggml-cpu/amx/mmq.cpp,599,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,48,,
ggml/src/ggml-cpu/amx/mmq.cpp,600,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,48,,
ggml/src/ggml-cpu/amx/mmq.cpp,629,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,636,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,641,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,41,,
ggml/src/ggml-cpu/amx/mmq.cpp,642,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,41,,
ggml/src/ggml-cpu/amx/mmq.cpp,644,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,656,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,663,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,683,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,33,,
ggml/src/ggml-cpu/amx/mmq.cpp,710,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,33,,
ggml/src/ggml-cpu/amx/mmq.cpp,725,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,33,,
ggml/src/ggml-cpu/amx/mmq.cpp,750,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,33,,
ggml/src/ggml-cpu/amx/mmq.cpp,761,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,33,,
ggml/src/ggml-cpu/amx/mmq.cpp,781,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,33,,
ggml/src/ggml-cpu/amx/mmq.cpp,815,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,41,,
ggml/src/ggml-cpu/amx/mmq.cpp,818,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/amx/mmq.cpp,959,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,40,,
ggml/src/ggml-cpu/amx/mmq.cpp,962,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/amx/mmq.cpp,963,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/amx/mmq.cpp,971,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,44,,
ggml/src/ggml-cpu/amx/mmq.cpp,974,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,975,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,989,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,990,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,1020,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,1021,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,1047,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/amx/mmq.cpp,1048,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/amx/mmq.cpp,1058,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/amx/mmq.cpp,1059,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/amx/mmq.cpp,1079,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,1080,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,1091,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,63,,
ggml/src/ggml-cpu/amx/mmq.cpp,1113,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,63,,
ggml/src/ggml-cpu/amx/mmq.cpp,1114,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,63,,
ggml/src/ggml-cpu/amx/mmq.cpp,1138,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,63,,
ggml/src/ggml-cpu/amx/mmq.cpp,1164,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,63,,
ggml/src/ggml-cpu/amx/mmq.cpp,1165,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,65,,
ggml/src/ggml-cpu/amx/mmq.cpp,1187,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/amx/mmq.cpp,1206,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,63,,
ggml/src/ggml-cpu/amx/mmq.cpp,1207,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,65,,
ggml/src/ggml-cpu/amx/mmq.cpp,1229,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/amx/mmq.cpp,1246,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,63,,
ggml/src/ggml-cpu/amx/mmq.cpp,1272,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,63,,
ggml/src/ggml-cpu/amx/mmq.cpp,1303,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,65,,
ggml/src/ggml-cpu/amx/mmq.cpp,1314,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/amx/mmq.cpp,1448,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,52,,
ggml/src/ggml-cpu/amx/mmq.cpp,1455,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,67,,
ggml/src/ggml-cpu/amx/mmq.cpp,1509,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,52,,
ggml/src/ggml-cpu/amx/mmq.cpp,1514,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,67,,
ggml/src/ggml-cpu/amx/mmq.cpp,1515,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,67,,
ggml/src/ggml-cpu/amx/mmq.cpp,1581,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,44,,
ggml/src/ggml-cpu/amx/mmq.cpp,1584,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,67,,
ggml/src/ggml-cpu/amx/mmq.cpp,1586,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,54,,
ggml/src/ggml-cpu/amx/mmq.cpp,1670,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,56,,
ggml/src/ggml-cpu/amx/mmq.cpp,1679,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,77,,
ggml/src/ggml-cpu/amx/mmq.cpp,1682,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,67,,
ggml/src/ggml-cpu/amx/mmq.cpp,1690,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/amx/mmq.cpp,1693,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,69,,
ggml/src/ggml-cpu/amx/mmq.cpp,1762,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,52,,
ggml/src/ggml-cpu/amx/mmq.cpp,1767,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,56,,
ggml/src/ggml-cpu/amx/mmq.cpp,1785,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,77,,
ggml/src/ggml-cpu/amx/mmq.cpp,1788,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,67,,
ggml/src/ggml-cpu/amx/mmq.cpp,1796,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/amx/mmq.cpp,1799,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,69,,
ggml/src/ggml-cpu/amx/mmq.cpp,1906,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,77,,
ggml/src/ggml-cpu/amx/mmq.cpp,1909,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,67,,
ggml/src/ggml-cpu/amx/mmq.cpp,1919,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,30,,
ggml/src/ggml-cpu/amx/mmq.cpp,2003,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,77,,
ggml/src/ggml-cpu/amx/mmq.cpp,2006,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,67,,
ggml/src/ggml-cpu/amx/mmq.cpp,2046,style,variableScope,The scope of the variable 'Tile23' can be reduced.,"The scope of the variable 'Tile23' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,32,,Tile23
ggml/src/ggml-cpu/amx/mmq.cpp,2053,style,variableScope,The scope of the variable 'C_pre' can be reduced.,"The scope of the variable 'C_pre' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,15,,C_pre
ggml/src/ggml-cpu/amx/mmq.cpp,486,style,shadowArgument,Local variable 'k' shadows outer argument,Local variable 'k' shadows outer argument,398,18,Shadow variable,k
ggml/src/ggml-cpu/amx/mmq.cpp,428,style,shadowArgument,Local variable 'k' shadows outer argument,Local variable 'k' shadows outer argument,398,83,Shadowed declaration,k
ggml/src/ggml-cpu/amx/mmq.cpp,2099,style,shadowVariable,Local variable 'B_blk0' shadows outer variable,Local variable 'B_blk0' shadows outer variable,398,26,Shadow variable,B_blk0
ggml/src/ggml-cpu/amx/mmq.cpp,2062,style,shadowVariable,Local variable 'B_blk0' shadows outer variable,Local variable 'B_blk0' shadows outer variable,398,22,Shadowed declaration,B_blk0
ggml/src/ggml-cpu/amx/mmq.cpp,2100,style,shadowVariable,Local variable 'B_blk1' shadows outer variable,Local variable 'B_blk1' shadows outer variable,398,26,Shadow variable,B_blk1
ggml/src/ggml-cpu/amx/mmq.cpp,2063,style,shadowVariable,Local variable 'B_blk1' shadows outer variable,Local variable 'B_blk1' shadows outer variable,398,22,Shadowed declaration,B_blk1
ggml/src/ggml-cpu/amx/mmq.cpp,164,style,unusedStructMember,struct member 'tile_config_t::reserved_0' is never used.,struct member 'tile_config_t::reserved_0' is never used.,563,13,,tile_config_t::reserved_0
ggml/src/ggml-cpu/amx/mmq.cpp,622,style,unassignedVariable,Variable 'tmp' is not assigned a value.,Variable 'tmp' is not assigned a value.,665,12,,tmp
ggml/src/ggml-cpu/amx/mmq.cpp,2311,style,unreadVariable,Variable 'blck_size' is assigned a value that is never used.,Variable 'blck_size' is assigned a value that is never used.,563,9,,blck_size
ggml/src/ggml-cpu/amx/mmq.cpp,18,information,missingIncludeSystem,Include file: <sys/syscall.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/syscall.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/amx/mmq.cpp,19,information,missingIncludeSystem,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/cpu-feats.cpp,1,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/cpu-feats.cpp,62,style,unusedVariable,Unused variable: af,Unused variable: af,563,22,,af
ggml/src/ggml-cpu/arch/arm/cpu-feats.cpp,8,information,missingIncludeSystem,Include file: <sys/sysctl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/sysctl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/cpu-feats.cpp,6,information,missingIncludeSystem,Include file: <sys/auxv.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/auxv.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,2,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,3,information,missingInclude,"Include file: ""ggml-quants.h"" not found.","Include file: ""ggml-quants.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,4,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,5,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,6,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/quants.h,4,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/quants.h,6,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu-impl.h,5,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu-impl.h,6,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu-impl.h,8,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu-impl.h,10,information,missingIncludeSystem,Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu-impl.h,11,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu-impl.h,12,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,11,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,12,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,13,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,14,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,15,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,16,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,41,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/quants.h,19,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/arch/arm/quants.c,85,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/quants.h,20,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/ggml-cpu-impl.h,330,information,missingIncludeSystem,Include file: <intrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <intrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/quants.c,3473,style,unreadVariable,Variable 'scale.u16' is assigned a value that is never used.,Variable 'scale.u16' is assigned a value that is never used.,563,19,,scale.u16
ggml/src/ggml-cpu/ggml-cpu-impl.h,72,information,missingIncludeSystem,Include file: <sys/prctl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/prctl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,3,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,4,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,6,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,7,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,8,information,missingInclude,"Include file: ""ggml-cpu-impl.h"" not found.","Include file: ""ggml-cpu-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,9,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,10,information,missingInclude,"Include file: ""traits.h"" not found.","Include file: ""traits.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,12,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,13,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,14,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,15,information,missingIncludeSystem,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,16,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/repack.h,4,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/traits.h,2,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/traits.h,4,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/traits.h,7,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/repack.h,7,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,32,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/arch/arm/repack.cpp,100,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/ggml-cpu-impl.h,332,information,missingIncludeSystem,Include file: <immintrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <immintrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,2,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,3,information,missingInclude,"Include file: ""ggml-quants.h"" not found.","Include file: ""ggml-quants.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,4,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,5,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,6,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,11,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,12,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,13,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,14,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,15,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,16,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/loongarch/quants.c,448,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/quants.h,19,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/arch/loongarch/quants.c,523,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/quants.h,20,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/ggml-cpu-impl.h,326,information,missingIncludeSystem,Include file: <altivec.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <altivec.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/powerpc/cpu-feats.cpp,1,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/powerpc/cpu-feats.cpp,9,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/powerpc/cpu-feats.cpp,6,information,missingIncludeSystem,Include file: <sys/auxv.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/auxv.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,2,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,3,information,missingInclude,"Include file: ""ggml-quants.h"" not found.","Include file: ""ggml-quants.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,4,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,5,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,6,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,11,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,12,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,13,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,14,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,15,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,16,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/powerpc/quants.c,41,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/quants.h,19,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/arch/powerpc/quants.c,87,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/quants.h,20,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/arch/powerpc/quants.c,146,style,unreadVariable,Variable 'nb' is assigned a value that is never used.,Variable 'nb' is assigned a value that is never used.,563,18,,nb
ggml/src/ggml-cpu/arch/powerpc/quants.c,146,style,unreadVariable,Variable 'nb' is assigned a value that is never used.,Variable 'nb' is assigned a value that is never used.,563,15,,nb
ggml/src/ggml-cpu/arch/powerpc/quants.c,216,style,unreadVariable,Variable 'nb' is assigned a value that is never used.,Variable 'nb' is assigned a value that is never used.,563,18,,nb
ggml/src/ggml-cpu/arch/powerpc/quants.c,216,style,unreadVariable,Variable 'nb' is assigned a value that is never used.,Variable 'nb' is assigned a value that is never used.,563,15,,nb
ggml/src/ggml-cpu/arch/powerpc/quants.c,293,style,unreadVariable,Variable 'nb' is assigned a value that is never used.,Variable 'nb' is assigned a value that is never used.,563,18,,nb
ggml/src/ggml-cpu/arch/powerpc/quants.c,293,style,unreadVariable,Variable 'nb' is assigned a value that is never used.,Variable 'nb' is assigned a value that is never used.,563,15,,nb
ggml/src/ggml-cpu/arch/powerpc/quants.c,349,style,unreadVariable,Variable 'nb' is assigned a value that is never used.,Variable 'nb' is assigned a value that is never used.,563,18,,nb
ggml/src/ggml-cpu/arch/powerpc/quants.c,349,style,unreadVariable,Variable 'nb' is assigned a value that is never used.,Variable 'nb' is assigned a value that is never used.,563,15,,nb
ggml/src/ggml-cpu/arch/riscv/quants.c,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,2,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,3,information,missingInclude,"Include file: ""ggml-quants.h"" not found.","Include file: ""ggml-quants.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,4,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,5,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,6,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,11,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,12,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,13,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,14,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,15,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,16,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/riscv/quants.c,26,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/quants.h,19,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/arch/riscv/quants.c,67,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/quants.h,20,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/arch/riscv/repack.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,3,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,4,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,6,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,7,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,8,information,missingInclude,"Include file: ""ggml-cpu-impl.h"" not found.","Include file: ""ggml-cpu-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,9,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,10,information,missingInclude,"Include file: ""traits.h"" not found.","Include file: ""traits.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,12,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,13,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,14,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,15,information,missingIncludeSystem,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/riscv/repack.cpp,16,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,2,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,3,information,missingInclude,"Include file: ""ggml-quants.h"" not found.","Include file: ""ggml-quants.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,4,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,5,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,6,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,11,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,12,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,13,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,14,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,15,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,16,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/s390/quants.c,47,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/quants.h,19,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/arch/s390/quants.c,94,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/quants.h,20,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/arch/s390/quants.c,275,style,unreadVariable,Variable 'nb' is assigned a value that is never used.,Variable 'nb' is assigned a value that is never used.,563,18,,nb
ggml/src/ggml-cpu/arch/s390/quants.c,275,style,unreadVariable,Variable 'nb' is assigned a value that is never used.,Variable 'nb' is assigned a value that is never used.,563,15,,nb
ggml/src/ggml-cpu/arch/wasm/quants.c,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,2,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,3,information,missingInclude,"Include file: ""ggml-quants.h"" not found.","Include file: ""ggml-quants.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,4,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,5,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,6,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,11,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,12,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,13,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,14,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,15,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,16,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/wasm/quants.c,41,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/quants.h,19,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/arch/wasm/quants.c,88,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/quants.h,20,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,1,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,6,information,missingIncludeSystem,Include file: <intrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <intrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,9,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,10,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,11,information,missingIncludeSystem,Include file: <bitset> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <bitset> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,12,information,missingIncludeSystem,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,13,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,17,style,functionConst,Technically the member function 'cpuid_x86::SSE3' can be const.,The member function 'cpuid_x86::SSE3' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::SSE3
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,18,style,functionConst,Technically the member function 'cpuid_x86::PCLMULQDQ' can be const.,The member function 'cpuid_x86::PCLMULQDQ' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::PCLMULQDQ
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,19,style,functionConst,Technically the member function 'cpuid_x86::MONITOR' can be const.,The member function 'cpuid_x86::MONITOR' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::MONITOR
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,20,style,functionConst,Technically the member function 'cpuid_x86::SSSE3' can be const.,The member function 'cpuid_x86::SSSE3' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::SSSE3
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,21,style,functionConst,Technically the member function 'cpuid_x86::FMA' can be const.,The member function 'cpuid_x86::FMA' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::FMA
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,22,style,functionConst,Technically the member function 'cpuid_x86::CMPXCHG16B' can be const.,The member function 'cpuid_x86::CMPXCHG16B' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::CMPXCHG16B
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,23,style,functionConst,Technically the member function 'cpuid_x86::SSE41' can be const.,The member function 'cpuid_x86::SSE41' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::SSE41
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,24,style,functionConst,Technically the member function 'cpuid_x86::SSE42' can be const.,The member function 'cpuid_x86::SSE42' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::SSE42
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,25,style,functionConst,Technically the member function 'cpuid_x86::MOVBE' can be const.,The member function 'cpuid_x86::MOVBE' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::MOVBE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,26,style,functionConst,Technically the member function 'cpuid_x86::POPCNT' can be const.,The member function 'cpuid_x86::POPCNT' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::POPCNT
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,27,style,functionConst,Technically the member function 'cpuid_x86::AES' can be const.,The member function 'cpuid_x86::AES' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AES
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,28,style,functionConst,Technically the member function 'cpuid_x86::XSAVE' can be const.,The member function 'cpuid_x86::XSAVE' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::XSAVE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,29,style,functionConst,Technically the member function 'cpuid_x86::OSXSAVE' can be const.,The member function 'cpuid_x86::OSXSAVE' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::OSXSAVE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,30,style,functionConst,Technically the member function 'cpuid_x86::AVX' can be const.,The member function 'cpuid_x86::AVX' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,31,style,functionConst,Technically the member function 'cpuid_x86::F16C' can be const.,The member function 'cpuid_x86::F16C' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::F16C
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,32,style,functionConst,Technically the member function 'cpuid_x86::RDRAND' can be const.,The member function 'cpuid_x86::RDRAND' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::RDRAND
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,34,style,functionConst,Technically the member function 'cpuid_x86::MSR' can be const.,The member function 'cpuid_x86::MSR' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::MSR
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,35,style,functionConst,Technically the member function 'cpuid_x86::CX8' can be const.,The member function 'cpuid_x86::CX8' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::CX8
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,36,style,functionConst,Technically the member function 'cpuid_x86::SEP' can be const.,The member function 'cpuid_x86::SEP' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::SEP
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,37,style,functionConst,Technically the member function 'cpuid_x86::CMOV' can be const.,The member function 'cpuid_x86::CMOV' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::CMOV
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,38,style,functionConst,Technically the member function 'cpuid_x86::CLFSH' can be const.,The member function 'cpuid_x86::CLFSH' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::CLFSH
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,39,style,functionConst,Technically the member function 'cpuid_x86::MMX' can be const.,The member function 'cpuid_x86::MMX' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::MMX
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,40,style,functionConst,Technically the member function 'cpuid_x86::FXSR' can be const.,The member function 'cpuid_x86::FXSR' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::FXSR
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,41,style,functionConst,Technically the member function 'cpuid_x86::SSE' can be const.,The member function 'cpuid_x86::SSE' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::SSE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,42,style,functionConst,Technically the member function 'cpuid_x86::SSE2' can be const.,The member function 'cpuid_x86::SSE2' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::SSE2
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,44,style,functionConst,Technically the member function 'cpuid_x86::FSGSBASE' can be const.,The member function 'cpuid_x86::FSGSBASE' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::FSGSBASE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,45,style,functionConst,Technically the member function 'cpuid_x86::BMI1' can be const.,The member function 'cpuid_x86::BMI1' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::BMI1
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,46,style,functionConst,Technically the member function 'cpuid_x86::HLE' can be const.,The member function 'cpuid_x86::HLE' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::HLE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,47,style,functionConst,Technically the member function 'cpuid_x86::AVX2' can be const.,The member function 'cpuid_x86::AVX2' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX2
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,48,style,functionConst,Technically the member function 'cpuid_x86::BMI2' can be const.,The member function 'cpuid_x86::BMI2' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::BMI2
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,49,style,functionConst,Technically the member function 'cpuid_x86::ERMS' can be const.,The member function 'cpuid_x86::ERMS' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::ERMS
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,50,style,functionConst,Technically the member function 'cpuid_x86::INVPCID' can be const.,The member function 'cpuid_x86::INVPCID' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::INVPCID
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,51,style,functionConst,Technically the member function 'cpuid_x86::RTM' can be const.,The member function 'cpuid_x86::RTM' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::RTM
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,52,style,functionConst,Technically the member function 'cpuid_x86::AVX512F' can be const.,The member function 'cpuid_x86::AVX512F' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX512F
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,53,style,functionConst,Technically the member function 'cpuid_x86::AVX512DQ' can be const.,The member function 'cpuid_x86::AVX512DQ' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX512DQ
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,54,style,functionConst,Technically the member function 'cpuid_x86::RDSEED' can be const.,The member function 'cpuid_x86::RDSEED' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::RDSEED
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,55,style,functionConst,Technically the member function 'cpuid_x86::ADX' can be const.,The member function 'cpuid_x86::ADX' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::ADX
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,56,style,functionConst,Technically the member function 'cpuid_x86::AVX512PF' can be const.,The member function 'cpuid_x86::AVX512PF' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX512PF
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,57,style,functionConst,Technically the member function 'cpuid_x86::AVX512ER' can be const.,The member function 'cpuid_x86::AVX512ER' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX512ER
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,58,style,functionConst,Technically the member function 'cpuid_x86::AVX512CD' can be const.,The member function 'cpuid_x86::AVX512CD' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX512CD
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,59,style,functionConst,Technically the member function 'cpuid_x86::AVX512BW' can be const.,The member function 'cpuid_x86::AVX512BW' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX512BW
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,60,style,functionConst,Technically the member function 'cpuid_x86::AVX512VL' can be const.,The member function 'cpuid_x86::AVX512VL' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX512VL
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,62,style,functionConst,Technically the member function 'cpuid_x86::SHA' can be const.,The member function 'cpuid_x86::SHA' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::SHA
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,64,style,functionConst,Technically the member function 'cpuid_x86::PREFETCHWT1' can be const.,The member function 'cpuid_x86::PREFETCHWT1' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::PREFETCHWT1
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,66,style,functionConst,Technically the member function 'cpuid_x86::LAHF' can be const.,The member function 'cpuid_x86::LAHF' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::LAHF
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,67,style,functionConst,Technically the member function 'cpuid_x86::LZCNT' can be const.,The member function 'cpuid_x86::LZCNT' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::LZCNT
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,68,style,functionConst,Technically the member function 'cpuid_x86::ABM' can be const.,The member function 'cpuid_x86::ABM' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::ABM
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,69,style,functionConst,Technically the member function 'cpuid_x86::SSE4a' can be const.,The member function 'cpuid_x86::SSE4a' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::SSE4a
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,70,style,functionConst,Technically the member function 'cpuid_x86::XOP' can be const.,The member function 'cpuid_x86::XOP' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::XOP
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,71,style,functionConst,Technically the member function 'cpuid_x86::TBM' can be const.,The member function 'cpuid_x86::TBM' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::TBM
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,73,style,functionConst,Technically the member function 'cpuid_x86::SYSCALL' can be const.,The member function 'cpuid_x86::SYSCALL' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::SYSCALL
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,74,style,functionConst,Technically the member function 'cpuid_x86::MMXEXT' can be const.,The member function 'cpuid_x86::MMXEXT' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::MMXEXT
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,75,style,functionConst,Technically the member function 'cpuid_x86::RDTSCP' can be const.,The member function 'cpuid_x86::RDTSCP' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::RDTSCP
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,76,style,functionConst,Technically the member function 'cpuid_x86::_3DNOWEXT' can be const.,The member function 'cpuid_x86::_3DNOWEXT' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::_3DNOWEXT
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,77,style,functionConst,Technically the member function 'cpuid_x86::_3DNOW' can be const.,The member function 'cpuid_x86::_3DNOW' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::_3DNOW
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,79,style,functionConst,Technically the member function 'cpuid_x86::AVX512_VBMI' can be const.,The member function 'cpuid_x86::AVX512_VBMI' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX512_VBMI
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,80,style,functionConst,Technically the member function 'cpuid_x86::AVX512_VNNI' can be const.,The member function 'cpuid_x86::AVX512_VNNI' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX512_VNNI
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,81,style,functionConst,Technically the member function 'cpuid_x86::AVX512_FP16' can be const.,The member function 'cpuid_x86::AVX512_FP16' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX512_FP16
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,82,style,functionConst,Technically the member function 'cpuid_x86::AVX512_BF16' can be const.,The member function 'cpuid_x86::AVX512_BF16' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX512_BF16
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,83,style,functionConst,Technically the member function 'cpuid_x86::AVX_VNNI' can be const.,The member function 'cpuid_x86::AVX_VNNI' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AVX_VNNI
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,85,style,functionConst,Technically the member function 'cpuid_x86::AMX_TILE' can be const.,The member function 'cpuid_x86::AMX_TILE' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AMX_TILE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,86,style,functionConst,Technically the member function 'cpuid_x86::AMX_INT8' can be const.,The member function 'cpuid_x86::AMX_INT8' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AMX_INT8
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,87,style,functionConst,Technically the member function 'cpuid_x86::AMX_FP16' can be const.,The member function 'cpuid_x86::AMX_FP16' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AMX_FP16
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,88,style,functionConst,Technically the member function 'cpuid_x86::AMX_BF16' can be const.,The member function 'cpuid_x86::AMX_BF16' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,cpuid_x86::AMX_BF16
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,127,style,shadowVariable,Local variable 'vendor' shadows outer variable,Local variable 'vendor' shadows outer variable,398,14,Shadow variable,vendor
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,182,style,shadowVariable,Local variable 'vendor' shadows outer variable,Local variable 'vendor' shadows outer variable,398,17,Shadowed declaration,vendor
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,171,style,shadowVariable,Local variable 'brand' shadows outer variable,Local variable 'brand' shadows outer variable,398,14,Shadow variable,brand
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,183,style,shadowVariable,Local variable 'brand' shadows outer variable,Local variable 'brand' shadows outer variable,398,17,Shadowed declaration,brand
ggml/src/ggml-cpu/arch/x86/quants.c,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/arch/x86/quants.c,2,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/quants.c,3,information,missingInclude,"Include file: ""ggml-quants.h"" not found.","Include file: ""ggml-quants.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/quants.c,4,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/quants.c,5,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/quants.c,6,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/quants.c,11,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/quants.c,12,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/quants.c,13,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/quants.c,14,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/quants.c,15,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/quants.c,290,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/quants.h,19,style,funcArgNamesDifferent,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_0' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_0
ggml/src/ggml-cpu/arch/x86/quants.c,388,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/quants.h,20,style,funcArgNamesDifferent,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q8_1' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q8_1
ggml/src/ggml-cpu/arch/x86/quants.c,3457,style,unreadVariable,Variable 'scale.u16' is assigned a value that is never used.,Variable 'scale.u16' is assigned a value that is never used.,563,19,,scale.u16
ggml/src/ggml-cpu/arch/x86/repack.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,6,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,7,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,8,information,missingInclude,"Include file: ""ggml-cpu-impl.h"" not found.","Include file: ""ggml-cpu-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,9,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,10,information,missingInclude,"Include file: ""traits.h"" not found.","Include file: ""traits.h"" not found.",,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,12,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,13,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,14,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,15,information,missingIncludeSystem,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,16,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,183,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,295,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,256,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,422,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,503,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1429,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1430,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1461,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,59,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1532,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,81,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1533,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,81,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1534,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,81,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1535,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,81,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1617,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,68,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1665,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1666,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1807,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,80,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1808,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,80,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1809,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,80,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1810,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,80,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1811,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,80,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1812,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,80,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1813,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,80,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1814,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,80,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1907,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,54,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1981,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1982,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2360,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2722,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3069,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3398,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3414,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3447,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3448,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4212,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4940,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5627,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,6297,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,637,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,638,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,759,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,762,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,765,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,768,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,835,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,88,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,848,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,948,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,65,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,951,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,65,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,954,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,65,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,957,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,65,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1024,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,84,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1036,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1132,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,65,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1135,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,65,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1138,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,65,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1141,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,65,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1208,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1290,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,61,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1293,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,61,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1296,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,61,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1299,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,61,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1368,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,541,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,542,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,589,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,76,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,590,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,76,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1469,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1470,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1471,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1472,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1473,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1474,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1475,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1476,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1701,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1702,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1703,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1704,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1705,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1706,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1707,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1708,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1756,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1757,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1758,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1759,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2034,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2035,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2036,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2037,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2038,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2039,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2040,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2041,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2043,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2044,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2045,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2046,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2047,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2048,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2049,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2050,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2194,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2197,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2200,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2203,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2206,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2209,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2212,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2215,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2238,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2397,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2398,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2399,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2400,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2401,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2402,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2403,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2404,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2406,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2407,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2408,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2409,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2410,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2411,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2412,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2413,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2556,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2559,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2562,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2565,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2568,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2571,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2574,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2577,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2601,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,68,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2771,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2772,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2773,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2774,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2775,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2776,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2777,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2778,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2908,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2911,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2914,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2917,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2920,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2923,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2926,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2929,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2934,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3104,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3105,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3106,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3107,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3108,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3109,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3110,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3111,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3238,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3241,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3244,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3247,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3250,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3253,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3256,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3259,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3264,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,68,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3516,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3517,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3518,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3519,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3520,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3521,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3522,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3523,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3525,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3526,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3527,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3528,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3529,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3530,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3531,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3532,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3707,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3708,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3709,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3710,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3712,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3713,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3714,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3715,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3773,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3776,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3779,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3782,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3785,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3788,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3791,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3794,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3798,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3801,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3804,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3807,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3810,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3813,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3816,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3819,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3865,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,73,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3866,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,73,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3867,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,73,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3868,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,73,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4249,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4250,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4251,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4252,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4253,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4254,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4255,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4256,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4258,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4259,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4260,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4261,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4262,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4263,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4264,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4265,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4439,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4440,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4441,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4442,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4444,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4445,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4446,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4447,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4502,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4505,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4508,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4511,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4514,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4517,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4520,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4523,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4527,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4530,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4533,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4536,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4539,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4542,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4545,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4548,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4593,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4594,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4595,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4596,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4990,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4991,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4992,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4993,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4994,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4995,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4996,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4997,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5173,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5174,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5175,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5176,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5231,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5234,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5237,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5240,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5243,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5246,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5249,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5252,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5256,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5259,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5262,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5265,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5268,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5271,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5274,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5277,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,70,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5282,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,73,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5283,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,73,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5284,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,73,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5285,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,73,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5664,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5665,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5666,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5667,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5668,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5669,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5670,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5671,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,75,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5848,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5849,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5850,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5851,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,72,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5903,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5906,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5909,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5912,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5915,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5918,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5921,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5924,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5928,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5931,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5934,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5937,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5940,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5943,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5946,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5949,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5954,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5955,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5956,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5957,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,69,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,680,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,681,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,682,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,683,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,685,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,686,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,687,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,688,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,871,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,872,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,873,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,874,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,876,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,877,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,878,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,879,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1069,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1070,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1071,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1072,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1229,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1230,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1231,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1232,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,561,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,562,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,563,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,564,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,71,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1389,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1625,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1954,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3423,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,338,style,shadowVariable,Local variable 'v0' shadows outer variable,Local variable 'v0' shadows outer variable,398,24,Shadow variable,v0
ggml/src/ggml-cpu/arch/x86/repack.cpp,305,style,shadowVariable,Local variable 'v0' shadows outer variable,Local variable 'v0' shadows outer variable,398,20,Shadowed declaration,v0
ggml/src/ggml-cpu/arch/x86/repack.cpp,339,style,shadowVariable,Local variable 'v1' shadows outer variable,Local variable 'v1' shadows outer variable,398,24,Shadow variable,v1
ggml/src/ggml-cpu/arch/x86/repack.cpp,306,style,shadowVariable,Local variable 'v1' shadows outer variable,Local variable 'v1' shadows outer variable,398,20,Shadowed declaration,v1
ggml/src/ggml-cpu/arch/x86/repack.cpp,340,style,shadowVariable,Local variable 'v2' shadows outer variable,Local variable 'v2' shadows outer variable,398,24,Shadow variable,v2
ggml/src/ggml-cpu/arch/x86/repack.cpp,307,style,shadowVariable,Local variable 'v2' shadows outer variable,Local variable 'v2' shadows outer variable,398,20,Shadowed declaration,v2
ggml/src/ggml-cpu/arch/x86/repack.cpp,341,style,shadowVariable,Local variable 'v3' shadows outer variable,Local variable 'v3' shadows outer variable,398,24,Shadow variable,v3
ggml/src/ggml-cpu/arch/x86/repack.cpp,308,style,shadowVariable,Local variable 'v3' shadows outer variable,Local variable 'v3' shadows outer variable,398,20,Shadowed declaration,v3
ggml/src/ggml-cpu/arch/x86/repack.cpp,344,style,shadowVariable,Local variable 'abs0' shadows outer variable,Local variable 'abs0' shadows outer variable,398,24,Shadow variable,abs0
ggml/src/ggml-cpu/arch/x86/repack.cpp,312,style,shadowVariable,Local variable 'abs0' shadows outer variable,Local variable 'abs0' shadows outer variable,398,20,Shadowed declaration,abs0
ggml/src/ggml-cpu/arch/x86/repack.cpp,345,style,shadowVariable,Local variable 'abs1' shadows outer variable,Local variable 'abs1' shadows outer variable,398,24,Shadow variable,abs1
ggml/src/ggml-cpu/arch/x86/repack.cpp,313,style,shadowVariable,Local variable 'abs1' shadows outer variable,Local variable 'abs1' shadows outer variable,398,20,Shadowed declaration,abs1
ggml/src/ggml-cpu/arch/x86/repack.cpp,346,style,shadowVariable,Local variable 'abs2' shadows outer variable,Local variable 'abs2' shadows outer variable,398,24,Shadow variable,abs2
ggml/src/ggml-cpu/arch/x86/repack.cpp,314,style,shadowVariable,Local variable 'abs2' shadows outer variable,Local variable 'abs2' shadows outer variable,398,20,Shadowed declaration,abs2
ggml/src/ggml-cpu/arch/x86/repack.cpp,347,style,shadowVariable,Local variable 'abs3' shadows outer variable,Local variable 'abs3' shadows outer variable,398,24,Shadow variable,abs3
ggml/src/ggml-cpu/arch/x86/repack.cpp,315,style,shadowVariable,Local variable 'abs3' shadows outer variable,Local variable 'abs3' shadows outer variable,398,20,Shadowed declaration,abs3
ggml/src/ggml-cpu/arch/x86/repack.cpp,434,style,shadowArgument,Local variable 'k' shadows outer argument,Local variable 'k' shadows outer argument,398,18,Shadow variable,k
ggml/src/ggml-cpu/arch/x86/repack.cpp,290,style,shadowArgument,Local variable 'k' shadows outer argument,Local variable 'k' shadows outer argument,398,97,Shadowed declaration,k
ggml/src/ggml-cpu/arch/x86/repack.cpp,1196,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,50,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1357,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1455,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1456,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1691,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1692,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2026,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2029,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2389,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2392,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2762,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,2765,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3095,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3098,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3507,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,3510,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4240,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4243,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4981,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,4984,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5655,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,5658,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,751,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,37,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,943,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,37,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1125,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,37,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,1285,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,37,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,582,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,37,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,90,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,22,,
ggml/src/ggml-cpu/arch/x86/repack.cpp,90,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,74,,
ggml/src/ggml-cpu/binary-ops.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 29 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/common.h,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/common.h,6,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/common.h,11,information,missingIncludeSystem,Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/binary-ops.cpp,93,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,53,,
ggml/src/ggml-cpu/binary-ops.cpp,94,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,53,,
ggml/src/ggml-cpu/binary-ops.cpp,95,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,53,,
ggml/src/ggml-cpu/binary-ops.cpp,44,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,32,,
ggml/src/ggml-cpu/binary-ops.cpp,44,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,49,,
ggml/src/ggml-cpu/binary-ops.cpp,4,information,missingIncludeSystem,Include file: <Accelerate/Accelerate.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <Accelerate/Accelerate.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/simd-mappings.h,14,information,missingIncludeSystem,Include file: <arm_neon.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <arm_neon.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/simd-mappings.h,18,information,missingIncludeSystem,Include file: <immintrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <immintrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/simd-mappings.h,6,information,missingIncludeSystem,Include file: <arm_sve.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <arm_sve.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 80 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/ggml-cpu.c,4,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu.c,5,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu.c,8,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu.c,9,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu.c,11,information,missingInclude,"Include file: ""ggml-threading.h"" not found.","Include file: ""ggml-threading.h"" not found.",,0,,
ggml/src/ggml-cpu/vec.h,5,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/vec.h,7,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/vec.h,8,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/ops.h,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu.c,16,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu.c,21,information,missingIncludeSystem,Include file: <alloca.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <alloca.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,24,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,25,information,missingIncludeSystem,Include file: <errno.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <errno.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,26,information,missingIncludeSystem,Include file: <time.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <time.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,27,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,28,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,29,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,30,information,missingIncludeSystem,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,31,information,missingIncludeSystem,Include file: <inttypes.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <inttypes.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,32,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,33,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,34,information,missingIncludeSystem,Include file: <limits.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <limits.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,35,information,missingIncludeSystem,Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,36,information,missingIncludeSystem,Include file: <signal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <signal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,173,information,missingIncludeSystem,Include file: <pthread.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <pthread.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,174,information,missingIncludeSystem,Include file: <stdatomic.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdatomic.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,175,information,missingIncludeSystem,Include file: <sched.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sched.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,182,information,missingIncludeSystem,Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,183,information,missingIncludeSystem,Include file: <sys/stat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/stat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,184,information,missingIncludeSystem,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/vec.h,521,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,16,,
ggml/src/ggml-cpu/vec.h,521,portability,invalidPointerCast,Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms.,Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms.,704,33,,
ggml/src/ggml-cpu/vec.h,522,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,16,,
ggml/src/ggml-cpu/vec.h,522,portability,invalidPointerCast,Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms.,Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms.,704,33,,
ggml/src/ggml-cpu/ggml-cpu.c,766,portability,invalidPointerCast,Casting between signed char * const and float * which have an incompatible binary data representation.,Casting between signed char * const and float * which have an incompatible binary data representation.,704,42,,
ggml/src/ggml-cpu/ggml-cpu.c,825,portability,invalidPointerCast,Casting between signed char * const and float * which have an incompatible binary data representation.,Casting between signed char * const and float * which have an incompatible binary data representation.,704,42,,
ggml/src/ggml-cpu/ggml-cpu.c,2937,style,constVariablePointer,Variable 'threadpool' can be declared as pointer to const,Variable 'threadpool' can be declared as pointer to const,398,30,Variable 'threadpool' can be declared as pointer to const,threadpool
ggml/src/ggml-cpu/ggml-cpu.c,3048,style,constParameterPointer,Parameter 'tpp' can be declared as pointer to const,Parameter 'tpp' can be declared as pointer to const,398,37,Parameter 'tpp' can be declared as pointer to const,tpp
ggml/src/ggml-cpu/ggml-cpu.c,505,style,unusedStructMember,struct member 'ggml_numa_node::cpus' is never used.,struct member 'ggml_numa_node::cpus' is never used.,563,14,,ggml_numa_node::cpus
ggml/src/ggml-cpu/ggml-cpu.c,506,style,unusedStructMember,struct member 'ggml_numa_node::n_cpus' is never used.,struct member 'ggml_numa_node::n_cpus' is never used.,563,14,,ggml_numa_node::n_cpus
ggml/src/ggml-cpu/ggml-cpu.c,513,style,unusedStructMember,struct member 'ggml_numa_nodes::total_cpus' is never used.,struct member 'ggml_numa_nodes::total_cpus' is never used.,563,14,,ggml_numa_nodes::total_cpus
ggml/src/ggml-cpu/ggml-cpu.c,514,style,unusedStructMember,struct member 'ggml_numa_nodes::current_node' is never used.,struct member 'ggml_numa_nodes::current_node' is never used.,563,14,,ggml_numa_nodes::current_node
ggml/src/ggml-cpu/ggml-cpu.c,518,style,unusedStructMember,struct member 'ggml_numa_nodes::cpuset' is never used.,struct member 'ggml_numa_nodes::cpuset' is never used.,563,14,,ggml_numa_nodes::cpuset
ggml/src/ggml-cpu/ggml-cpu.c,3544,style,unusedStructMember,union member 'Anonymous0::u16' is never used.,union member 'Anonymous0::u16' is never used.,563,30,,Anonymous0::u16
ggml/src/ggml-cpu/ggml-cpu.c,951,style,unreadVariable,Variable '((int8_t*)(data))[0]' is assigned a value that is never used.,Variable '((int8_t*)(data))[0]' is assigned a value that is never used.,563,39,,((int8_t*)(data))[0]
ggml/src/ggml-cpu/ggml-cpu.c,955,style,unreadVariable,Variable '((int16_t*)(data))[0]' is assigned a value that is never used.,Variable '((int16_t*)(data))[0]' is assigned a value that is never used.,563,40,,((int16_t*)(data))[0]
ggml/src/ggml-cpu/ggml-cpu.c,959,style,unreadVariable,Variable '((int32_t*)(data))[0]' is assigned a value that is never used.,Variable '((int32_t*)(data))[0]' is assigned a value that is never used.,563,40,,((int32_t*)(data))[0]
ggml/src/ggml-cpu/ggml-cpu.c,963,style,unreadVariable,Variable '((ggml_fp16_t*)(data))[0]' is assigned a value that is never used.,Variable '((ggml_fp16_t*)(data))[0]' is assigned a value that is never used.,563,44,,((ggml_fp16_t*)(data))[0]
ggml/src/ggml-cpu/ggml-cpu.c,967,style,unreadVariable,Variable '((ggml_bf16_t*)(data))[0]' is assigned a value that is never used.,Variable '((ggml_bf16_t*)(data))[0]' is assigned a value that is never used.,563,44,,((ggml_bf16_t*)(data))[0]
ggml/src/ggml-cpu/ggml-cpu.c,971,style,unreadVariable,Variable '((float*)(data))[0]' is assigned a value that is never used.,Variable '((float*)(data))[0]' is assigned a value that is never used.,563,38,,((float*)(data))[0]
ggml/src/ggml-cpu/ggml-cpu.c,1082,style,unreadVariable,Variable '((int8_t*)(data))[0]' is assigned a value that is never used.,Variable '((int8_t*)(data))[0]' is assigned a value that is never used.,563,39,,((int8_t*)(data))[0]
ggml/src/ggml-cpu/ggml-cpu.c,1086,style,unreadVariable,Variable '((int16_t*)(data))[0]' is assigned a value that is never used.,Variable '((int16_t*)(data))[0]' is assigned a value that is never used.,563,40,,((int16_t*)(data))[0]
ggml/src/ggml-cpu/ggml-cpu.c,1090,style,unreadVariable,Variable '((int32_t*)(data))[0]' is assigned a value that is never used.,Variable '((int32_t*)(data))[0]' is assigned a value that is never used.,563,40,,((int32_t*)(data))[0]
ggml/src/ggml-cpu/ggml-cpu.c,1094,style,unreadVariable,Variable '((ggml_fp16_t*)(data))[0]' is assigned a value that is never used.,Variable '((ggml_fp16_t*)(data))[0]' is assigned a value that is never used.,563,44,,((ggml_fp16_t*)(data))[0]
ggml/src/ggml-cpu/ggml-cpu.c,1098,style,unreadVariable,Variable '((ggml_bf16_t*)(data))[0]' is assigned a value that is never used.,Variable '((ggml_bf16_t*)(data))[0]' is assigned a value that is never used.,563,44,,((ggml_bf16_t*)(data))[0]
ggml/src/ggml-cpu/ggml-cpu.c,1102,style,unreadVariable,Variable '((float*)(data))[0]' is assigned a value that is never used.,Variable '((float*)(data))[0]' is assigned a value that is never used.,563,38,,((float*)(data))[0]
ggml/src/ggml-cpu/vec.h,11,information,missingIncludeSystem,Include file: <Accelerate/Accelerate.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <Accelerate/Accelerate.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/llamafile/sgemm.h,2,information,missingIncludeSystem,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/llamafile/sgemm.h,3,information,missingIncludeSystem,Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,1313,style,knownConditionTrueFalse,Condition 'src1->type==vec_dot_type' is always false,Condition 'src1->type==vec_dot_type' is always false,570,41,Condition 'src1->type==vec_dot_type' is always false,
ggml/src/ggml-cpu/ggml-cpu.c,42,information,missingIncludeSystem,Include file: <omp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <omp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,38,information,missingIncludeSystem,Include file: <syscall.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <syscall.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,19,information,missingIncludeSystem,Include file: <malloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <malloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,91,information,missingIncludeSystem,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,142,information,missingIncludeSystem,Include file: <stdatomic.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdatomic.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.c,2378,information,missingInclude,"Include file: ""windows.h"" not found.","Include file: ""windows.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu.c,2381,style,constParameterPointer,Parameter 'mask' can be declared as pointer to const,Parameter 'mask' can be declared as pointer to const,398,47,Parameter 'mask' can be declared as pointer to const,mask
ggml/src/ggml-cpu/ggml-cpu.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 29 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/ggml-cpu.cpp,1,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu.cpp,2,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu.cpp,3,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu.cpp,6,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/ggml-cpu.cpp,9,information,missingIncludeSystem,Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.cpp,10,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.cpp,11,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.cpp,32,information,missingIncludeSystem,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ggml-cpu.cpp,117,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,49,,
ggml/src/ggml-cpu/ggml-cpu.cpp,129,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,49,,
ggml/src/ggml-cpu/ggml-cpu.cpp,151,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,47,,
ggml/src/ggml-cpu/ggml-cpu.cpp,160,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,47,,
ggml/src/ggml-cpu/ggml-cpu.cpp,168,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,49,,
ggml/src/ggml-cpu/ggml-cpu.cpp,181,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-cpu/ggml-cpu.cpp,249,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-cpu/ggml-cpu.cpp,256,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-cpu/ggml-cpu.cpp,268,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-cpu/ggml-cpu.cpp,346,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-cpu/ggml-cpu.cpp,422,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/ggml-cpu.cpp,446,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-cpu/ggml-cpu.cpp,85,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,113,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,164,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,342,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,373,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,392,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,399,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,405,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,464,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,490,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,496,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,621,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,659,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/ggml-cpu.cpp,89,style,useStlAlgorithm,Consider using std::any_of algorithm instead of a raw loop.,Consider using std::any_of algorithm instead of a raw loop.,398,5,,
ggml/src/ggml-cpu/hbm.h,3,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-cpu/hbm.h,4,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.h,7,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/src/ggml-cpu/spacemit/ime.h,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/src/ggml-cpu/hbm.cpp,3,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-cpu/hbm.cpp,4,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/hbm.cpp,5,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/hbm.cpp,6,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/hbm.cpp,12,information,missingIncludeSystem,Include file: <hbwmalloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <hbwmalloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/hbm.cpp,17,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,6,information,missingInclude,"Include file: ""kai_matmul_clamp_f32_qsi8d32p_qsi4c32p_interface.h"" not found.","Include file: ""kai_matmul_clamp_f32_qsi8d32p_qsi4c32p_interface.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,7,information,missingInclude,"Include file: ""kai_matmul_clamp_f32_qsi8d32p1x8_qsi4c32p4x8_1x4x32_neon_dotprod.h"" not found.","Include file: ""kai_matmul_clamp_f32_qsi8d32p1x8_qsi4c32p4x8_1x4x32_neon_dotprod.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,8,information,missingInclude,"Include file: ""kai_matmul_clamp_f32_qsi8d32p1x4_qsi4c32p4x4_1x4_neon_dotprod.h"" not found.","Include file: ""kai_matmul_clamp_f32_qsi8d32p1x4_qsi4c32p4x4_1x4_neon_dotprod.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,9,information,missingInclude,"Include file: ""kai_matmul_clamp_f32_qsi8d32p4x4_qsi4c32p4x4_16x4_neon_dotprod.h"" not found.","Include file: ""kai_matmul_clamp_f32_qsi8d32p4x4_qsi4c32p4x4_16x4_neon_dotprod.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,10,information,missingInclude,"Include file: ""kai_matmul_clamp_f32_qsi8d32p4x8_qsi4c32p4x8_16x4_neon_i8mm.h"" not found.","Include file: ""kai_matmul_clamp_f32_qsi8d32p4x8_qsi4c32p4x8_16x4_neon_i8mm.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,11,information,missingInclude,"Include file: ""kai_matmul_clamp_f32_qsi8d32p1vlx4_qsi4c32p4vlx4_1vlx4vl_sme2_mopa.h"" not found.","Include file: ""kai_matmul_clamp_f32_qsi8d32p1vlx4_qsi4c32p4vlx4_1vlx4vl_sme2_mopa.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,12,information,missingInclude,"Include file: ""kai_matmul_clamp_f32_qsi8d32p1x4_qsi4c32p4vlx4_1x4vl_sme2_sdot.h"" not found.","Include file: ""kai_matmul_clamp_f32_qsi8d32p1x4_qsi4c32p4vlx4_1x4vl_sme2_sdot.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,13,information,missingInclude,"Include file: ""kai_matmul_clamp_f32_bf16p2vlx2_bf16p2vlx2_2vlx2vl_sme2_mopa.h"" not found.","Include file: ""kai_matmul_clamp_f32_bf16p2vlx2_bf16p2vlx2_2vlx2vl_sme2_mopa.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,15,information,missingInclude,"Include file: ""kai_lhs_pack_bf16p2vlx2_f32_sme.h"" not found.","Include file: ""kai_lhs_pack_bf16p2vlx2_f32_sme.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,16,information,missingInclude,"Include file: ""kai_lhs_quant_pack_qsi8d32p_f32.h"" not found.","Include file: ""kai_lhs_quant_pack_qsi8d32p_f32.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,17,information,missingInclude,"Include file: ""kai_lhs_quant_pack_qsi8d32p4x8sb_f32_neon.h"" not found.","Include file: ""kai_lhs_quant_pack_qsi8d32p4x8sb_f32_neon.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,18,information,missingInclude,"Include file: ""kai_lhs_quant_pack_qsi8d32p_f32_neon.h"" not found.","Include file: ""kai_lhs_quant_pack_qsi8d32p_f32_neon.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,20,information,missingInclude,"Include file: ""kai_rhs_pack_kxn_bf16p2vlx2b_f32_x32_sme.h"" not found.","Include file: ""kai_rhs_pack_kxn_bf16p2vlx2b_f32_x32_sme.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,21,information,missingInclude,"Include file: ""kai_rhs_pack_nxk_qsi4c32pscalef16_qsu4c32s16s0.h"" not found.","Include file: ""kai_rhs_pack_nxk_qsi4c32pscalef16_qsu4c32s16s0.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,22,information,missingInclude,"Include file: ""kai_rhs_pack_nxk_qsi4c32ps1s0scalef16_qsu4c32s16s0_neon.h"" not found.","Include file: ""kai_rhs_pack_nxk_qsi4c32ps1s0scalef16_qsu4c32s16s0_neon.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,24,information,missingInclude,"Include file: ""kai_common.h"" not found.","Include file: ""kai_common.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,26,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.h,7,information,missingIncludeSystem,Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kernels.h,8,information,missingIncludeSystem,Include file: <variant> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <variant> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kernels.h,9,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,50,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,94,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,55,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,32,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,95,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,29,,
ggml/src/ggml-cpu/kleidiai/kernels.cpp,96,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,30,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,4,information,missingIncludeSystem,Include file: <arm_neon.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <arm_neon.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,5,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,6,information,missingIncludeSystem,Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,7,information,missingIncludeSystem,Include file: <cfloat> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cfloat> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,8,information,missingIncludeSystem,Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,9,information,missingIncludeSystem,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,10,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,25,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,26,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,27,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,28,information,missingInclude,"Include file: ""ggml-threading.h"" not found.","Include file: ""ggml-threading.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,29,information,missingInclude,"Include file: ""traits.h"" not found.","Include file: ""traits.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,33,information,missingInclude,"Include file: ""kai_common.h"" not found.","Include file: ""kai_common.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,36,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,511,style,knownConditionTrueFalse,Condition 'OK==0' is always true,Condition 'OK==0' is always true,571,20,Condition 'OK==0' is always true,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,509,style,knownConditionTrueFalse,Condition 'OK==0' is always true,Condition 'OK==0' is always true,571,47,"Assignment 'OK=tensor_traits->repack(tensor,data,size)', assigned value is 0",
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,509,style,knownConditionTrueFalse,Condition 'OK==0' is always true,Condition 'OK==0' is always true,571,47,Calling function 'repack' returns 0,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,378,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,419,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,56,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,460,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,463,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,36,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,483,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,89,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,497,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,508,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,295,portability,invalidPointerCast,Casting between unsigned char * and float * which have an incompatible binary data representation.,Casting between unsigned char * and float * which have an incompatible binary data representation.,704,41,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,330,portability,invalidPointerCast,Casting between unsigned char * and float * which have an incompatible binary data representation.,Casting between unsigned char * and float * which have an incompatible binary data representation.,704,44,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,404,portability,invalidPointerCast,Casting between const unsigned char * and const float * which have an incompatible binary data representation.,Casting between const unsigned char * and const float * which have an incompatible binary data representation.,704,46,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,420,portability,invalidPointerCast,Casting between unsigned char * and float * which have an incompatible binary data representation.,Casting between unsigned char * and float * which have an incompatible binary data representation.,704,42,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,486,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,9,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,500,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,518,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,539,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,553,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,595,style,shadowVariable,Local variable 'ctx' shadows outer variable,Local variable 'ctx' shadows outer variable,398,51,Shadow variable,ctx
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,41,style,shadowVariable,Local variable 'ctx' shadows outer variable,Local variable 'ctx' shadows outer variable,398,10,Shadowed declaration,ctx
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,19,information,missingIncludeSystem,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,20,information,missingIncludeSystem,Include file: <excpt.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <excpt.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,15,information,missingIncludeSystem,Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,16,information,missingIncludeSystem,Include file: <sys/sysctl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/sysctl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,17,information,missingIncludeSystem,Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,12,information,missingIncludeSystem,Include file: <asm/hwcap.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <asm/hwcap.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/kleidiai/kleidiai.cpp,13,information,missingIncludeSystem,Include file: <sys/auxv.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/auxv.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,52,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,53,information,missingInclude,"Include file: ""ggml-cpu-impl.h"" not found.","Include file: ""ggml-cpu-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,54,information,missingInclude,"Include file: ""ggml-quants.h"" not found.","Include file: ""ggml-quants.h"" not found.",,0,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,55,information,missingInclude,"Include file: ""simd-mappings.h"" not found.","Include file: ""simd-mappings.h"" not found.",,0,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,57,information,missingIncludeSystem,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,58,information,missingIncludeSystem,Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2712,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,16,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2713,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2714,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,570,style,unusedPrivateFunction,Unused private function: 'tinyBLAS_Q0_ARM < block_q8_0 >::gemm',Unused private function: 'tinyBLAS_Q0_ARM < block_q8_0 >::gemm',398,19,,tinyBLAS_Q0_ARM < block_q8_0 >::gemm
ggml/src/ggml-cpu/llamafile/sgemm.cpp,570,style,unusedPrivateFunction,Unused private function: 'tinyBLAS_Q0_ARM < block_q8_0 >::gemm',Unused private function: 'tinyBLAS_Q0_ARM < block_q8_0 >::gemm',398,19,,tinyBLAS_Q0_ARM < block_q8_0 >::gemm
ggml/src/ggml-cpu/llamafile/sgemm.cpp,512,performance,functionStatic,Technically the member function 'tinyBLAS_Q0_ARM < block_q8_0 >::mnpack' can be static (but you may consider moving to unnamed namespace).,The member function 'tinyBLAS_Q0_ARM < block_q8_0 >::mnpack' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,19,,tinyBLAS_Q0_ARM < block_q8_0 >::mnpack
ggml/src/ggml-cpu/llamafile/sgemm.cpp,601,performance,functionStatic,Technically the member function 'tinyBLAS_Q0_ARM < block_q8_0 >::load_lo' can be static (but you may consider moving to unnamed namespace).,The member function 'tinyBLAS_Q0_ARM < block_q8_0 >::load_lo' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,22,,tinyBLAS_Q0_ARM < block_q8_0 >::load_lo
ggml/src/ggml-cpu/llamafile/sgemm.cpp,605,performance,functionStatic,Technically the member function 'tinyBLAS_Q0_ARM < block_q8_0 >::load_hi' can be static (but you may consider moving to unnamed namespace).,The member function 'tinyBLAS_Q0_ARM < block_q8_0 >::load_hi' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,22,,tinyBLAS_Q0_ARM < block_q8_0 >::load_hi
ggml/src/ggml-cpu/llamafile/sgemm.cpp,609,performance,functionStatic,Technically the member function 'tinyBLAS_Q0_ARM < block_q8_0 >::load_lo' can be static (but you may consider moving to unnamed namespace).,The member function 'tinyBLAS_Q0_ARM < block_q8_0 >::load_lo' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,22,,tinyBLAS_Q0_ARM < block_q8_0 >::load_lo
ggml/src/ggml-cpu/llamafile/sgemm.cpp,615,performance,functionStatic,Technically the member function 'tinyBLAS_Q0_ARM < block_q8_0 >::load_hi' can be static (but you may consider moving to unnamed namespace).,The member function 'tinyBLAS_Q0_ARM < block_q8_0 >::load_hi' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,22,,tinyBLAS_Q0_ARM < block_q8_0 >::load_hi
ggml/src/ggml-cpu/llamafile/sgemm.cpp,601,performance,functionStatic,Technically the member function 'tinyBLAS_Q0_ARM < block_q4_0 >::load_lo' can be static (but you may consider moving to unnamed namespace).,The member function 'tinyBLAS_Q0_ARM < block_q4_0 >::load_lo' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,22,,tinyBLAS_Q0_ARM < block_q4_0 >::load_lo
ggml/src/ggml-cpu/llamafile/sgemm.cpp,605,performance,functionStatic,Technically the member function 'tinyBLAS_Q0_ARM < block_q4_0 >::load_hi' can be static (but you may consider moving to unnamed namespace).,The member function 'tinyBLAS_Q0_ARM < block_q4_0 >::load_hi' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,22,,tinyBLAS_Q0_ARM < block_q4_0 >::load_hi
ggml/src/ggml-cpu/llamafile/sgemm.cpp,609,performance,functionStatic,Technically the member function 'tinyBLAS_Q0_ARM < block_q4_0 >::load_lo' can be static (but you may consider moving to unnamed namespace).,The member function 'tinyBLAS_Q0_ARM < block_q4_0 >::load_lo' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,22,,tinyBLAS_Q0_ARM < block_q4_0 >::load_lo
ggml/src/ggml-cpu/llamafile/sgemm.cpp,615,performance,functionStatic,Technically the member function 'tinyBLAS_Q0_ARM < block_q4_0 >::load_hi' can be static (but you may consider moving to unnamed namespace).,The member function 'tinyBLAS_Q0_ARM < block_q4_0 >::load_hi' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,22,,tinyBLAS_Q0_ARM < block_q4_0 >::load_hi
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2842,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,16,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2843,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2844,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2879,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,16,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2880,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2881,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2802,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2803,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2804,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2810,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2811,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2812,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,243,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,22,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,246,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,34,,
ggml/src/ggml-cpu/llamafile/sgemm.h,6,information,missingIncludeSystem,Include file: <vecintrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vecintrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,916,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::gemm'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::gemm'",398,19,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::gemm"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,916,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::gemm'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::gemm'",398,19,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::gemm"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,965,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,965,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,977,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,977,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,991,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,991,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1021,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1021,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1035,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::updot'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::updot'",398,19,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::updot"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1035,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::updot'","Unused private function: 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::updot'",398,19,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::updot"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,916,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::gemm'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::gemm'",398,19,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::gemm"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,916,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::gemm'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::gemm'",398,19,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::gemm"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,965,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,965,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,977,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,977,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,991,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,991,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1021,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1021,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1035,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::updot'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::updot'",398,19,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::updot"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1035,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::updot'","Unused private function: 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::updot'",398,19,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::updot"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,916,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::gemm'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::gemm'",398,19,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::gemm"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,916,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::gemm'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::gemm'",398,19,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::gemm"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,965,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,965,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,977,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,977,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,991,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,991,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1021,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1021,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load'",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1035,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::updot'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::updot'",398,19,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::updot"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1035,style,unusedPrivateFunction,"Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::updot'","Unused private function: 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::updot'",398,19,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::updot"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,965,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,969,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,973,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,977,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,981,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,986,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,991,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,995,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1008,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q8_0 , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,965,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,969,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,973,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,977,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,981,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,986,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,991,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,995,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1008,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q4_0 , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,965,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,969,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,973,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,977,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,981,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,986,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,991,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,995,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1008,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_q5_0 , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,965,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,969,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,973,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,977,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,981,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,986,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,991,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,995,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load0' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load0' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load0"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1008,performance,functionStatic,"Technically the member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load1' can be static (but you may consider moving to unnamed namespace).","The member function 'tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load1' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,20,,"tinyBLAS_Q0_AVX < block_iq4_nl , block_q8_0 , float >::load1"
ggml/src/ggml-cpu/llamafile/sgemm.cpp,259,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2698,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,16,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2699,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2700,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2751,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2752,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2753,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2784,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2785,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2786,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2834,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,16,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2835,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2836,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2871,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,16,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2872,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2873,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2908,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,16,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2909,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2910,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2924,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,16,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2925,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2926,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,966,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,970,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,974,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,982,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,987,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,996,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1009,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1026,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1031,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,281,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,65,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,296,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,47,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,300,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,68,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,649,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,34,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,1048,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,37,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2704,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,16,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2705,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2706,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2759,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2760,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/llamafile/sgemm.cpp,2761,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-cpu/ops.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/ops.cpp,3,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/ops.cpp,4,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/ops.cpp,6,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/ops.cpp,10,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ops.cpp,11,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/ops.cpp,1184,error,unknownMacro,There is an unknown macro here somewhere. Configuration is required. If GGML_TENSOR_LOCALS is a macro then please configure it.,There is an unknown macro here somewhere. Configuration is required. If GGML_TENSOR_LOCALS is a macro then please configure it.,,5,,
ggml/src/ggml-cpu/ggml-cpu-impl.h,336,information,missingIncludeSystem,Include file: <riscv_vector.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <riscv_vector.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/simd-mappings.h,22,information,missingIncludeSystem,Include file: <riscv_vector.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <riscv_vector.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/quants.c,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 35 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/quants.c,2,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/quants.c,6,information,missingInclude,"Include file: ""ggml-quants.h"" not found.","Include file: ""ggml-quants.h"" not found.",,0,,
ggml/src/ggml-cpu/quants.c,11,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/quants.c,12,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/quants.c,13,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/quants.c,14,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/quants.c,15,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/quants.c,41,style,funcArgNamesDifferent,Function 'quantize_row_q8_0_generic' argument 2 names different: declaration 'vy' definition 'y'.,Function 'quantize_row_q8_0_generic' argument 2 names different: declaration 'vy' definition 'y'.,628,84,,quantize_row_q8_0_generic
ggml/src/ggml-cpu/quants.h,66,style,funcArgNamesDifferent,Function 'quantize_row_q8_0_generic' argument 2 names different: declaration 'vy' definition 'y'.,Function 'quantize_row_q8_0_generic' argument 2 names different: declaration 'vy' definition 'y'.,628,84,,quantize_row_q8_0_generic
ggml/src/ggml-cpu/quants.c,45,style,funcArgNamesDifferent,Function 'quantize_row_q8_1_generic' argument 2 names different: declaration 'vy' definition 'y'.,Function 'quantize_row_q8_1_generic' argument 2 names different: declaration 'vy' definition 'y'.,628,84,,quantize_row_q8_1_generic
ggml/src/ggml-cpu/quants.h,67,style,funcArgNamesDifferent,Function 'quantize_row_q8_1_generic' argument 2 names different: declaration 'vy' definition 'y'.,Function 'quantize_row_q8_1_generic' argument 2 names different: declaration 'vy' definition 'y'.,628,84,,quantize_row_q8_1_generic
ggml/src/ggml-cpu/quants.c,59,style,funcArgNamesDifferent,Function 'quantize_row_q2_K' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q2_K' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q2_K
ggml/src/ggml-cpu/quants.h,24,style,funcArgNamesDifferent,Function 'quantize_row_q2_K' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q2_K' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q2_K
ggml/src/ggml-cpu/quants.c,65,style,funcArgNamesDifferent,Function 'quantize_row_q3_K' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q3_K' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q3_K
ggml/src/ggml-cpu/quants.h,25,style,funcArgNamesDifferent,Function 'quantize_row_q3_K' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q3_K' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q3_K
ggml/src/ggml-cpu/quants.c,71,style,funcArgNamesDifferent,Function 'quantize_row_q4_K' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q4_K' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q4_K
ggml/src/ggml-cpu/quants.h,26,style,funcArgNamesDifferent,Function 'quantize_row_q4_K' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q4_K' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q4_K
ggml/src/ggml-cpu/quants.c,79,style,funcArgNamesDifferent,Function 'quantize_row_q5_K' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q5_K' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q5_K
ggml/src/ggml-cpu/quants.h,27,style,funcArgNamesDifferent,Function 'quantize_row_q5_K' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q5_K' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q5_K
ggml/src/ggml-cpu/quants.c,87,style,funcArgNamesDifferent,Function 'quantize_row_q6_K' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q6_K' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q6_K
ggml/src/ggml-cpu/quants.h,28,style,funcArgNamesDifferent,Function 'quantize_row_q6_K' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_q6_K' argument 2 names different: declaration 'y' definition 'vy'.,628,76,,quantize_row_q6_K
ggml/src/ggml-cpu/quants.c,95,style,funcArgNamesDifferent,Function 'quantize_row_tq1_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_tq1_0' argument 2 names different: declaration 'y' definition 'vy'.,628,77,,quantize_row_tq1_0
ggml/src/ggml-cpu/quants.h,31,style,funcArgNamesDifferent,Function 'quantize_row_tq1_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_tq1_0' argument 2 names different: declaration 'y' definition 'vy'.,628,77,,quantize_row_tq1_0
ggml/src/ggml-cpu/quants.c,101,style,funcArgNamesDifferent,Function 'quantize_row_tq2_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_tq2_0' argument 2 names different: declaration 'y' definition 'vy'.,628,77,,quantize_row_tq2_0
ggml/src/ggml-cpu/quants.h,32,style,funcArgNamesDifferent,Function 'quantize_row_tq2_0' argument 2 names different: declaration 'y' definition 'vy'.,Function 'quantize_row_tq2_0' argument 2 names different: declaration 'y' definition 'vy'.,628,77,,quantize_row_tq2_0
ggml/src/ggml-cpu/quants.c,514,style,clarifyCalculation,Clarify calculation precedence for '&' and '?'.,Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.,783,61,,
ggml/src/ggml-cpu/quants.c,517,style,clarifyCalculation,Clarify calculation precedence for '&' and '?'.,Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.,783,61,,
ggml/src/ggml-cpu/quants.c,520,style,clarifyCalculation,Clarify calculation precedence for '&' and '?'.,Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.,783,61,,
ggml/src/ggml-cpu/quants.c,523,style,clarifyCalculation,Clarify calculation precedence for '&' and '?'.,Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.,783,61,,
ggml/src/ggml-cpu/quants.c,663,style,clarifyCalculation,Clarify calculation precedence for '&' and '?'.,Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.,783,61,,
ggml/src/ggml-cpu/quants.c,666,style,clarifyCalculation,Clarify calculation precedence for '&' and '?'.,Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''.,783,61,,
ggml/src/ggml-cpu/quants.c,1072,style,unreadVariable,Variable 'scale.u16' is assigned a value that is never used.,Variable 'scale.u16' is assigned a value that is never used.,563,19,,scale.u16
ggml/src/ggml-cpu/repack.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/repack.cpp,3,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/repack.cpp,4,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/repack.cpp,6,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/repack.cpp,7,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/repack.cpp,14,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/repack.cpp,15,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/repack.cpp,16,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/repack.cpp,17,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/repack.cpp,1603,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat"
ggml/src/ggml-cpu/repack.cpp,1674,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat_id' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat_id' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_q4_0 , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat_id"
ggml/src/ggml-cpu/repack.cpp,1603,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat"
ggml/src/ggml-cpu/repack.cpp,1674,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat_id' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat_id' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat_id"
ggml/src/ggml-cpu/repack.cpp,1603,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat"
ggml/src/ggml-cpu/repack.cpp,1674,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat_id' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat_id' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_q4_0 , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat_id"
ggml/src/ggml-cpu/repack.cpp,1603,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_q4_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_q4_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_q4_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat"
ggml/src/ggml-cpu/repack.cpp,1674,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_q4_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat_id' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_q4_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat_id' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_q4_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat_id"
ggml/src/ggml-cpu/repack.cpp,1603,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_q2_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_q2_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_q2_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat"
ggml/src/ggml-cpu/repack.cpp,1674,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_q2_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat_id' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_q2_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat_id' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_q2_K , 8 , 8 , GGML_TYPE_Q8_K >::forward_mul_mat_id"
ggml/src/ggml-cpu/repack.cpp,1603,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat"
ggml/src/ggml-cpu/repack.cpp,1674,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat_id' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat_id' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_iq4_nl , 4 , 4 , GGML_TYPE_Q8_0 >::forward_mul_mat_id"
ggml/src/ggml-cpu/repack.cpp,1603,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat"
ggml/src/ggml-cpu/repack.cpp,1674,performance,functionStatic,"Technically the member function 'ggml::cpu::repack::tensor_traits < block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat_id' can be static (but you may consider moving to unnamed namespace).","The member function 'ggml::cpu::repack::tensor_traits < block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat_id' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,10,,"ggml::cpu::repack::tensor_traits < block_iq4_nl , 8 , 8 , GGML_TYPE_Q8_0 >::forward_mul_mat_id"
ggml/src/ggml-cpu/repack.cpp,56,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,94,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,132,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,226,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/repack.cpp,228,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,270,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/repack.cpp,272,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,314,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/repack.cpp,316,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,365,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/repack.cpp,367,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,438,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/repack.cpp,440,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,506,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/repack.cpp,508,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-cpu/repack.cpp,544,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/repack.cpp,546,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-cpu/repack.cpp,591,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-cpu/repack.cpp,593,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cpu/repack.cpp,646,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,648,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-cpu/repack.cpp,700,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,702,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-cpu/repack.cpp,761,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,763,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-cpu/repack.cpp,845,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,847,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-cpu/repack.cpp,935,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-cpu/repack.cpp,937,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,48,,
ggml/src/ggml-cpu/repack.cpp,980,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,982,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-cpu/repack.cpp,1206,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-cpu/repack.cpp,1207,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-cpu/repack.cpp,1236,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-cpu/repack.cpp,1237,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-cpu/repack.cpp,1267,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-cpu/repack.cpp,1268,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-cpu/repack.cpp,1298,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-cpu/repack.cpp,1299,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-cpu/repack.cpp,1363,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/repack.cpp,1364,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/repack.cpp,1420,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/repack.cpp,1421,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/repack.cpp,1873,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-cpu/repack.cpp,1884,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-cpu/repack.cpp,1638,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,68,,
ggml/src/ggml-cpu/repack.cpp,1638,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,103,,
ggml/src/ggml-cpu/repack.cpp,1643,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cpu/repack.cpp,1643,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,70,,
ggml/src/ggml-cpu/repack.cpp,1661,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/repack.cpp,1662,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-cpu/repack.cpp,1663,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-cpu/repack.cpp,1667,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-cpu/repack.cpp,1668,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-cpu/repack.cpp,1669,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-cpu/repack.cpp,1721,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-cpu/repack.cpp,1722,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-cpu/repack.cpp,1725,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,36,,
ggml/src/ggml-cpu/repack.cpp,1731,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-cpu/repack.cpp,1732,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-cpu/repack.cpp,1747,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-cpu/repack.cpp,1767,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,37,,
ggml/src/ggml-cpu/repack.cpp,1793,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/repack.cpp,1796,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-cpu/repack.cpp,383,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,37,,
ggml/src/ggml-cpu/repack.cpp,384,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,37,,
ggml/src/ggml-cpu/repack.cpp,402,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,33,,
ggml/src/ggml-cpu/repack.cpp,780,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,41,,
ggml/src/ggml-cpu/repack.cpp,781,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,41,,
ggml/src/ggml-cpu/repack.cpp,801,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,37,,
ggml/src/ggml-cpu/repack.cpp,1661,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,21,,
ggml/src/ggml-cpu/repack.cpp,1726,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,49,,
ggml/src/ggml-cpu/repack.cpp,1661,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,21,,
ggml/src/ggml-cpu/repack.cpp,1229,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/repack.cpp,1259,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/repack.cpp,1290,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/repack.cpp,1321,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/repack.cpp,1389,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/repack.cpp,1446,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/repack.cpp,1894,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/repack.cpp,1915,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/repack.cpp,383,style,constVariablePointer,Variable 'scales_0' can be declared as pointer to const,Variable 'scales_0' can be declared as pointer to const,398,26,Variable 'scales_0' can be declared as pointer to const,scales_0
ggml/src/ggml-cpu/repack.cpp,384,style,constVariablePointer,Variable 'scales_1' can be declared as pointer to const,Variable 'scales_1' can be declared as pointer to const,398,26,Variable 'scales_1' can be declared as pointer to const,scales_1
ggml/src/ggml-cpu/repack.cpp,402,style,constVariablePointer,Variable 'mins' can be declared as pointer to const,Variable 'mins' can be declared as pointer to const,398,26,Variable 'mins' can be declared as pointer to const,mins
ggml/src/ggml-cpu/repack.cpp,780,style,constVariablePointer,Variable 'scales_0' can be declared as pointer to const,Variable 'scales_0' can be declared as pointer to const,398,30,Variable 'scales_0' can be declared as pointer to const,scales_0
ggml/src/ggml-cpu/repack.cpp,781,style,constVariablePointer,Variable 'scales_1' can be declared as pointer to const,Variable 'scales_1' can be declared as pointer to const,398,30,Variable 'scales_1' can be declared as pointer to const,scales_1
ggml/src/ggml-cpu/repack.cpp,801,style,constVariablePointer,Variable 'mins' can be declared as pointer to const,Variable 'mins' can be declared as pointer to const,398,30,Variable 'mins' can be declared as pointer to const,mins
ggml/src/ggml-cpu/repack.cpp,386,style,unreadVariable,Variable 'sumi1' is assigned a value that is never used.,Variable 'sumi1' is assigned a value that is never used.,563,27,,sumi1
ggml/src/ggml-cpu/repack.cpp,387,style,unreadVariable,Variable 'sumi2' is assigned a value that is never used.,Variable 'sumi2' is assigned a value that is never used.,563,27,,sumi2
ggml/src/ggml-cpu/repack.cpp,452,style,unreadVariable,Variable 'sumi1' is assigned a value that is never used.,Variable 'sumi1' is assigned a value that is never used.,563,27,,sumi1
ggml/src/ggml-cpu/repack.cpp,453,style,unreadVariable,Variable 'sumi2' is assigned a value that is never used.,Variable 'sumi2' is assigned a value that is never used.,563,27,,sumi2
ggml/src/ggml-cpu/repack.cpp,454,style,unreadVariable,Variable 'sumi3' is assigned a value that is never used.,Variable 'sumi3' is assigned a value that is never used.,563,27,,sumi3
ggml/src/ggml-cpu/repack.cpp,455,style,unreadVariable,Variable 'sumi4' is assigned a value that is never used.,Variable 'sumi4' is assigned a value that is never used.,563,27,,sumi4
ggml/src/ggml-cpu/repack.cpp,784,style,unreadVariable,Variable 'sumi1' is assigned a value that is never used.,Variable 'sumi1' is assigned a value that is never used.,563,35,,sumi1
ggml/src/ggml-cpu/repack.cpp,785,style,unreadVariable,Variable 'sumi2' is assigned a value that is never used.,Variable 'sumi2' is assigned a value that is never used.,563,35,,sumi2
ggml/src/ggml-cpu/repack.cpp,863,style,unreadVariable,Variable 'sumi1' is assigned a value that is never used.,Variable 'sumi1' is assigned a value that is never used.,563,35,,sumi1
ggml/src/ggml-cpu/repack.cpp,864,style,unreadVariable,Variable 'sumi2' is assigned a value that is never used.,Variable 'sumi2' is assigned a value that is never used.,563,35,,sumi2
ggml/src/ggml-cpu/repack.cpp,865,style,unreadVariable,Variable 'sumi3' is assigned a value that is never used.,Variable 'sumi3' is assigned a value that is never used.,563,35,,sumi3
ggml/src/ggml-cpu/repack.cpp,866,style,unreadVariable,Variable 'sumi4' is assigned a value that is never used.,Variable 'sumi4' is assigned a value that is never used.,563,35,,sumi4
ggml/src/ggml-cpu/spacemit/ime.cpp,6,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/spacemit/ime.cpp,7,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-cpu/spacemit/ime.cpp,8,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-cpu/spacemit/ime_kernels.h,3,information,missingIncludeSystem,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/spacemit/ime.cpp,10,information,missingInclude,"Include file: ""traits.h"" not found.","Include file: ""traits.h"" not found.",,0,,
ggml/src/ggml-cpu/spacemit/ime.cpp,12,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/spacemit/ime.cpp,13,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/spacemit/ime.cpp,14,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/spacemit/ime.cpp,15,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/spacemit/ime.cpp,16,information,missingIncludeSystem,Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/spacemit/ime.cpp,17,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/spacemit/ime.cpp,25,information,missingIncludeSystem,Include file: <riscv_vector.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <riscv_vector.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/spacemit/ime.cpp,23,error,preprocessorErrorDirective,"#error ""riscv v extension or v_intrinsic not enabled""","#error ""riscv v extension or v_intrinsic not enabled""",,2,,
ggml/src/ggml-cpu/spacemit/ime.cpp,0,information,noValidConfiguration,This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details.,"This file is not analyzed. Cppcheck failed to extract a valid configuration. The tested configurations have these preprocessor errors:\012'' : [ggml/src/ggml-cpu/spacemit/ime.cpp:39] #error ""riscv not enabled in this build""\012RISCV64_SPACEMIT_IME1 : [ggml/src/ggml-cpu/spacemit/ime.cpp:39] #error ""riscv not enabled in this build""\012RISCV64_SPACEMIT_IME1;__riscv : [ggml/src/ggml-cpu/spacemit/ime.cpp:23] #error ""riscv v extension or v_intrinsic not enabled""\012RISCV64_SPACEMIT_IME1;__riscv;__riscv : [ggml/src/ggml-cpu/spacemit/ime.cpp:23] #error ""riscv v extension or v_intrinsic not enabled""\012__GNUC__ : [ggml/src/ggml-cpu/spacemit/ime.cpp:39] #error ""riscv not enabled in this build""\012__riscv : [ggml/src/ggml-cpu/spacemit/ime.cpp:23] #error ""riscv v extension or v_intrinsic not enabled""\012__riscv;__riscv_v;__riscv_v_intrinsic : [ggml/src/ggml-cpu/spacemit/ime.cpp:29] #error ""riscv zfh extension not enabled""\012__riscv;__riscv_zfh : [ggml/src/ggml-cpu/spacemit/ime.cpp:23] #error ""riscv v extension or v_intrinsic not enabled""",,0,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,4,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,5,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,375,warning,incorrectLogicOperator,Logical disjunction always evaluates to true: BlkLen != 32 || BlkLen != 64.,Logical disjunction always evaluates to true: BlkLen != 32 || BlkLen != 64. Are these conditions necessary? Did you intend to use && instead? Are the numbers correct? Are you comparing the correct variables?,571,22,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,375,warning,incorrectLogicOperator,Logical disjunction always evaluates to true: BlkLen != 64 || BlkLen != 128.,Logical disjunction always evaluates to true: BlkLen != 64 || BlkLen != 128. Are these conditions necessary? Did you intend to use && instead? Are the numbers correct? Are you comparing the correct variables?,571,38,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2676,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2916,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2214,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2454,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1846,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2024,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1473,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1655,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,359,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,10,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,361,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,36,,
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1850,style,variableScope,The scope of the variable 'CPtr' can be reduced.,"The scope of the variable 'CPtr' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,21,,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1856,style,variableScope,The scope of the variable 'bias' can be reduced.,"The scope of the variable 'bias' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,31,,bias
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2027,style,variableScope,The scope of the variable 'CPtr' can be reduced.,"The scope of the variable 'CPtr' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,21,,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2033,style,variableScope,The scope of the variable 'bias' can be reduced.,"The scope of the variable 'bias' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,31,,bias
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1477,style,variableScope,The scope of the variable 'CPtr' can be reduced.,"The scope of the variable 'CPtr' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,21,,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1483,style,variableScope,The scope of the variable 'bias' can be reduced.,"The scope of the variable 'bias' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,31,,bias
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1658,style,variableScope,The scope of the variable 'CPtr' can be reduced.,"The scope of the variable 'CPtr' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,21,,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1664,style,variableScope,The scope of the variable 'bias' can be reduced.,"The scope of the variable 'bias' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,31,,bias
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,79,style,funcArgNamesDifferent,Function 'quantize_a_4row_i8' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,Function 'quantize_a_4row_i8' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,628,32,,quantize_a_4row_i8
ggml/src/ggml-cpu/spacemit/ime_kernels.h,23,style,funcArgNamesDifferent,Function 'quantize_a_4row_i8' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,Function 'quantize_a_4row_i8' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,628,32,,quantize_a_4row_i8
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,79,style,funcArgNamesDifferent,Function 'quantize_a_4row_i8' argument 2 names different: declaration 'a_ptr' definition 'A'.,Function 'quantize_a_4row_i8' argument 2 names different: declaration 'a_ptr' definition 'A'.,628,54,,quantize_a_4row_i8
ggml/src/ggml-cpu/spacemit/ime_kernels.h,23,style,funcArgNamesDifferent,Function 'quantize_a_4row_i8' argument 2 names different: declaration 'a_ptr' definition 'A'.,Function 'quantize_a_4row_i8' argument 2 names different: declaration 'a_ptr' definition 'A'.,628,55,,quantize_a_4row_i8
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,79,style,funcArgNamesDifferent,Function 'quantize_a_4row_i8' argument 3 names different: declaration 'count_k' definition 'CountK'.,Function 'quantize_a_4row_i8' argument 3 names different: declaration 'count_k' definition 'CountK'.,628,64,,quantize_a_4row_i8
ggml/src/ggml-cpu/spacemit/ime_kernels.h,23,style,funcArgNamesDifferent,Function 'quantize_a_4row_i8' argument 3 names different: declaration 'count_k' definition 'CountK'.,Function 'quantize_a_4row_i8' argument 3 names different: declaration 'count_k' definition 'CountK'.,628,69,,quantize_a_4row_i8
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,79,style,funcArgNamesDifferent,Function 'quantize_a_4row_i8' argument 4 names different: declaration 'quant_a_ptr' definition 'QuantA'.,Function 'quantize_a_4row_i8' argument 4 names different: declaration 'quant_a_ptr' definition 'QuantA'.,628,84,,quantize_a_4row_i8
ggml/src/ggml-cpu/spacemit/ime_kernels.h,23,style,funcArgNamesDifferent,Function 'quantize_a_4row_i8' argument 4 names different: declaration 'quant_a_ptr' definition 'QuantA'.,Function 'quantize_a_4row_i8' argument 4 names different: declaration 'quant_a_ptr' definition 'QuantA'.,628,90,,quantize_a_4row_i8
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,344,style,funcArgNamesDifferent,Function 'quantize_a_row_i8' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,Function 'quantize_a_row_i8' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,628,31,,quantize_a_row_i8
ggml/src/ggml-cpu/spacemit/ime_kernels.h,21,style,funcArgNamesDifferent,Function 'quantize_a_row_i8' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,Function 'quantize_a_row_i8' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,628,31,,quantize_a_row_i8
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,344,style,funcArgNamesDifferent,Function 'quantize_a_row_i8' argument 2 names different: declaration 'a_ptr' definition 'A'.,Function 'quantize_a_row_i8' argument 2 names different: declaration 'a_ptr' definition 'A'.,628,53,,quantize_a_row_i8
ggml/src/ggml-cpu/spacemit/ime_kernels.h,21,style,funcArgNamesDifferent,Function 'quantize_a_row_i8' argument 2 names different: declaration 'a_ptr' definition 'A'.,Function 'quantize_a_row_i8' argument 2 names different: declaration 'a_ptr' definition 'A'.,628,54,,quantize_a_row_i8
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,344,style,funcArgNamesDifferent,Function 'quantize_a_row_i8' argument 3 names different: declaration 'count_k' definition 'CountK'.,Function 'quantize_a_row_i8' argument 3 names different: declaration 'count_k' definition 'CountK'.,628,63,,quantize_a_row_i8
ggml/src/ggml-cpu/spacemit/ime_kernels.h,21,style,funcArgNamesDifferent,Function 'quantize_a_row_i8' argument 3 names different: declaration 'count_k' definition 'CountK'.,Function 'quantize_a_row_i8' argument 3 names different: declaration 'count_k' definition 'CountK'.,628,68,,quantize_a_row_i8
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,344,style,funcArgNamesDifferent,Function 'quantize_a_row_i8' argument 4 names different: declaration 'quant_a_ptr' definition 'QuantA'.,Function 'quantize_a_row_i8' argument 4 names different: declaration 'quant_a_ptr' definition 'QuantA'.,628,83,,quantize_a_row_i8
ggml/src/ggml-cpu/spacemit/ime_kernels.h,21,style,funcArgNamesDifferent,Function 'quantize_a_row_i8' argument 4 names different: declaration 'quant_a_ptr' definition 'QuantA'.,Function 'quantize_a_row_i8' argument 4 names different: declaration 'quant_a_ptr' definition 'QuantA'.,628,89,,quantize_a_row_i8
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3157,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,Function 'gemm_kernel_i8i4' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,7,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,Function 'gemm_kernel_i8i4' argument 1 names different: declaration 'blk_len' definition 'BlkLen'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3158,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 2 names different: declaration 'quant_a_ptr' definition 'QuantA'.,Function 'gemm_kernel_i8i4' argument 2 names different: declaration 'quant_a_ptr' definition 'QuantA'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,8,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 2 names different: declaration 'quant_a_ptr' definition 'QuantA'.,Function 'gemm_kernel_i8i4' argument 2 names different: declaration 'quant_a_ptr' definition 'QuantA'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3159,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 3 names different: declaration 'quant_b_data' definition 'QuantBData'.,Function 'gemm_kernel_i8i4' argument 3 names different: declaration 'quant_b_data' definition 'QuantBData'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,9,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 3 names different: declaration 'quant_b_data' definition 'QuantBData'.,Function 'gemm_kernel_i8i4' argument 3 names different: declaration 'quant_b_data' definition 'QuantBData'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3160,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 4 names different: declaration 'quant_b_scale' definition 'QuantBScale'.,Function 'gemm_kernel_i8i4' argument 4 names different: declaration 'quant_b_scale' definition 'QuantBScale'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,10,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 4 names different: declaration 'quant_b_scale' definition 'QuantBScale'.,Function 'gemm_kernel_i8i4' argument 4 names different: declaration 'quant_b_scale' definition 'QuantBScale'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3161,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 5 names different: declaration 'quant_b_zp' definition 'QuantBZeroPoint'.,Function 'gemm_kernel_i8i4' argument 5 names different: declaration 'quant_b_zp' definition 'QuantBZeroPoint'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,11,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 5 names different: declaration 'quant_b_zp' definition 'QuantBZeroPoint'.,Function 'gemm_kernel_i8i4' argument 5 names different: declaration 'quant_b_zp' definition 'QuantBZeroPoint'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3162,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 6 names different: declaration 'c_ptr' definition 'C'.,Function 'gemm_kernel_i8i4' argument 6 names different: declaration 'c_ptr' definition 'C'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,12,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 6 names different: declaration 'c_ptr' definition 'C'.,Function 'gemm_kernel_i8i4' argument 6 names different: declaration 'c_ptr' definition 'C'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3163,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 7 names different: declaration 'count_m' definition 'CountM'.,Function 'gemm_kernel_i8i4' argument 7 names different: declaration 'count_m' definition 'CountM'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,13,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 7 names different: declaration 'count_m' definition 'CountM'.,Function 'gemm_kernel_i8i4' argument 7 names different: declaration 'count_m' definition 'CountM'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3164,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 8 names different: declaration 'count_n' definition 'CountN'.,Function 'gemm_kernel_i8i4' argument 8 names different: declaration 'count_n' definition 'CountN'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,14,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 8 names different: declaration 'count_n' definition 'CountN'.,Function 'gemm_kernel_i8i4' argument 8 names different: declaration 'count_n' definition 'CountN'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3165,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 9 names different: declaration 'count_k' definition 'CountK'.,Function 'gemm_kernel_i8i4' argument 9 names different: declaration 'count_k' definition 'CountK'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,15,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 9 names different: declaration 'count_k' definition 'CountK'.,Function 'gemm_kernel_i8i4' argument 9 names different: declaration 'count_k' definition 'CountK'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3166,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 10 names different: declaration 'block_count_k' definition 'BlockCountK'.,Function 'gemm_kernel_i8i4' argument 10 names different: declaration 'block_count_k' definition 'BlockCountK'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,16,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 10 names different: declaration 'block_count_k' definition 'BlockCountK'.,Function 'gemm_kernel_i8i4' argument 10 names different: declaration 'block_count_k' definition 'BlockCountK'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3168,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 12 names different: declaration 'bias' definition 'Bias'.,Function 'gemm_kernel_i8i4' argument 12 names different: declaration 'bias' definition 'Bias'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,18,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 12 names different: declaration 'bias' definition 'Bias'.,Function 'gemm_kernel_i8i4' argument 12 names different: declaration 'bias' definition 'Bias'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3169,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 13 names different: declaration 'scale_stride' definition 'ScaleStride'.,Function 'gemm_kernel_i8i4' argument 13 names different: declaration 'scale_stride' definition 'ScaleStride'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime_kernels.h,19,style,funcArgNamesDifferent,Function 'gemm_kernel_i8i4' argument 13 names different: declaration 'scale_stride' definition 'ScaleStride'.,Function 'gemm_kernel_i8i4' argument 13 names different: declaration 'scale_stride' definition 'ScaleStride'.,628,43,,gemm_kernel_i8i4
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,86,style,constVariablePointer,Variable 'DST' can be declared as pointer to const,Variable 'DST' can be declared as pointer to const,398,27,Variable 'DST' can be declared as pointer to const,DST
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,141,style,constVariablePointer,Variable 'DST' can be declared as pointer to const,Variable 'DST' can be declared as pointer to const,398,27,Variable 'DST' can be declared as pointer to const,DST
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,211,style,constVariablePointer,Variable 'DST' can be declared as pointer to const,Variable 'DST' can be declared as pointer to const,398,27,Variable 'DST' can be declared as pointer to const,DST
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,349,style,constVariablePointer,Variable 'QuantA_offset' can be declared as pointer to const,Variable 'QuantA_offset' can be declared as pointer to const,398,21,Variable 'QuantA_offset' can be declared as pointer to const,QuantA_offset
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1473,style,constVariablePointer,Variable 'QuantBDataPtr' can be declared as pointer to const,Variable 'QuantBDataPtr' can be declared as pointer to const,398,25,Variable 'QuantBDataPtr' can be declared as pointer to const,QuantBDataPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1477,style,constVariablePointer,Variable 'CPtr' can be declared as pointer to const,Variable 'CPtr' can be declared as pointer to const,398,21,Variable 'CPtr' can be declared as pointer to const,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1655,style,constVariablePointer,Variable 'QuantBDataPtr' can be declared as pointer to const,Variable 'QuantBDataPtr' can be declared as pointer to const,398,25,Variable 'QuantBDataPtr' can be declared as pointer to const,QuantBDataPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1658,style,constVariablePointer,Variable 'CPtr' can be declared as pointer to const,Variable 'CPtr' can be declared as pointer to const,398,21,Variable 'CPtr' can be declared as pointer to const,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1801,style,constVariablePointer,Variable 'CPtr' can be declared as pointer to const,Variable 'CPtr' can be declared as pointer to const,398,22,Variable 'CPtr' can be declared as pointer to const,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1846,style,constVariablePointer,Variable 'QuantBDataPtr' can be declared as pointer to const,Variable 'QuantBDataPtr' can be declared as pointer to const,398,25,Variable 'QuantBDataPtr' can be declared as pointer to const,QuantBDataPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,1850,style,constVariablePointer,Variable 'CPtr' can be declared as pointer to const,Variable 'CPtr' can be declared as pointer to const,398,21,Variable 'CPtr' can be declared as pointer to const,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2024,style,constVariablePointer,Variable 'QuantBDataPtr' can be declared as pointer to const,Variable 'QuantBDataPtr' can be declared as pointer to const,398,25,Variable 'QuantBDataPtr' can be declared as pointer to const,QuantBDataPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2027,style,constVariablePointer,Variable 'CPtr' can be declared as pointer to const,Variable 'CPtr' can be declared as pointer to const,398,21,Variable 'CPtr' can be declared as pointer to const,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2172,style,constVariablePointer,Variable 'CPtr' can be declared as pointer to const,Variable 'CPtr' can be declared as pointer to const,398,22,Variable 'CPtr' can be declared as pointer to const,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2214,style,constVariablePointer,Variable 'QuantBDataPtr' can be declared as pointer to const,Variable 'QuantBDataPtr' can be declared as pointer to const,398,25,Variable 'QuantBDataPtr' can be declared as pointer to const,QuantBDataPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2218,style,constVariablePointer,Variable 'CPtr' can be declared as pointer to const,Variable 'CPtr' can be declared as pointer to const,398,21,Variable 'CPtr' can be declared as pointer to const,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2454,style,constVariablePointer,Variable 'QuantBDataPtr' can be declared as pointer to const,Variable 'QuantBDataPtr' can be declared as pointer to const,398,25,Variable 'QuantBDataPtr' can be declared as pointer to const,QuantBDataPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2457,style,constVariablePointer,Variable 'CPtr' can be declared as pointer to const,Variable 'CPtr' can be declared as pointer to const,398,21,Variable 'CPtr' can be declared as pointer to const,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2676,style,constVariablePointer,Variable 'QuantBDataPtr' can be declared as pointer to const,Variable 'QuantBDataPtr' can be declared as pointer to const,398,25,Variable 'QuantBDataPtr' can be declared as pointer to const,QuantBDataPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2680,style,constVariablePointer,Variable 'CPtr' can be declared as pointer to const,Variable 'CPtr' can be declared as pointer to const,398,21,Variable 'CPtr' can be declared as pointer to const,CPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2916,style,constVariablePointer,Variable 'QuantBDataPtr' can be declared as pointer to const,Variable 'QuantBDataPtr' can be declared as pointer to const,398,25,Variable 'QuantBDataPtr' can be declared as pointer to const,QuantBDataPtr
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,2919,style,constVariablePointer,Variable 'CPtr' can be declared as pointer to const,Variable 'CPtr' can be declared as pointer to const,398,21,Variable 'CPtr' can be declared as pointer to const,CPtr
ggml/src/ggml-cpu/traits.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/traits.cpp,3,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-cpu/traits.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-cpu/traits.cpp,15,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/traits.cpp,28,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-cpu/unary-ops.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/unary-ops.cpp,95,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,53,,
ggml/src/ggml-cpu/unary-ops.cpp,96,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,53,,
ggml/src/ggml-cpu/vec.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-cpu/vec.cpp,3,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-cpu/vec.cpp,488,warning,invalidFunctionArg,Invalid logf() argument nr 1. The value is 0 but the valid values are '1.4013e-45:'.,Invalid logf() argument nr 1. The value is 0 but the valid values are '1.4013e-45:'.,628,35,Invalid argument,logf
ggml/src/ggml-cpu/vec.cpp,483,warning,invalidFunctionArg,Invalid logf() argument nr 1. The value is 0 but the valid values are '1.4013e-45:'.,Invalid logf() argument nr 1. The value is 0 but the valid values are '1.4013e-45:'.,628,14,Assuming condition is false,logf
ggml/src/ggml-cpu/vec.cpp,482,warning,invalidFunctionArg,Invalid logf() argument nr 1. The value is 0 but the valid values are '1.4013e-45:'.,Invalid logf() argument nr 1. The value is 0 but the valid values are '1.4013e-45:'.,628,22,"Assignment 'sum=0', assigned value is 0",logf
ggml/src/ggml-cpu/vec.h,118,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-cpu/vec.h,118,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,16,,
ggml/src/ggml-cpu/vec.h,521,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,16,,
ggml/src/ggml-cpu/vec.h,521,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,33,,
ggml/src/ggml-cpu/vec.h,522,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,16,,
ggml/src/ggml-cpu/vec.h,522,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,33,,
ggml/src/ggml-cpu/vec.h,876,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,28,,
ggml/src/ggml-cpu/vec.h,1348,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,28,,
ggml/src/ggml-cpu/vec.h,1398,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,28,,
ggml/src/ggml-cpu/vec.h,217,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cpu/vec.h,218,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-cpu/vec.h,219,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,44,,
ggml/src/ggml-cpu/vec.h,471,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,44,,
ggml/src/ggml-cpu/vec.h,472,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,44,,
ggml/src/ggml-cpu/vec.h,474,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-cpu/vec.h,723,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,44,,
ggml/src/ggml-cpu/vec.h,725,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-cpu/vec.cpp,274,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,44,,
ggml/src/ggml-cpu/vec.cpp,275,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,44,,
ggml/src/ggml-cpu/vec.cpp,470,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-cpu/vec.cpp,409,style,unreadVariable,Variable 'sum' is assigned a value that is never used.,Variable 'sum' is assigned a value that is never used.,563,20,,sum
ggml/src/ggml-cpu/vec.cpp,290,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,51,,
ggml/src/ggml-cpu/vec.cpp,291,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,51,,
ggml/src/ggml-cpu/vec.h,246,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-cpu/vec.h,243,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/vec.h,493,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/vec.h,494,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/vec.h,497,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,17,,
ggml/src/ggml-cpu/vec.h,742,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/vec.h,745,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,17,,
ggml/src/ggml-cpu/vec.cpp,165,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,42,,
ggml/src/ggml-cpu/vec.cpp,165,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,55,,
ggml/src/ggml-cpu/vec.cpp,166,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,42,,
ggml/src/ggml-cpu/vec.cpp,166,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,60,,
ggml/src/ggml-cpu/vec.cpp,313,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-cpu/vec.cpp,314,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-metal/ggml-metal-common.h,5,information,missingIncludeSystem,Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdbool.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-metal/ggml-metal-common.cpp,3,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-metal/ggml-metal-common.cpp,4,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-metal/ggml-metal-common.cpp,6,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-metal/ggml-metal-common.cpp,214,style,knownConditionTrueFalse,"Condition '!ggml_mem_ranges_add_src(mrs,node.node->src[i])' is always false","Condition '!ggml_mem_ranges_add_src(mrs,node.node->src[i])' is always false",570,21,"Condition '!ggml_mem_ranges_add_src(mrs,node.node->src[i])' is always false",
ggml/src/ggml-metal/ggml-metal-common.cpp,214,style,knownConditionTrueFalse,"Condition '!ggml_mem_ranges_add_src(mrs,node.node->src[i])' is always false","Condition '!ggml_mem_ranges_add_src(mrs,node.node->src[i])' is always false",570,45,Calling function 'ggml_mem_ranges_add_src' returns 1,
ggml/src/ggml-metal/ggml-metal-common.cpp,99,style,knownConditionTrueFalse,"Condition '!ggml_mem_ranges_add_src(mrs,node.node->src[i])' is always false","Condition '!ggml_mem_ranges_add_src(mrs,node.node->src[i])' is always false",570,31,Calling function 'ggml_mem_ranges_add' returns 1,
ggml/src/ggml-metal/ggml-metal-common.cpp,224,style,knownConditionTrueFalse,"Condition '!ggml_mem_ranges_add_src(mrs,fused->src[i])' is always false","Condition '!ggml_mem_ranges_add_src(mrs,fused->src[i])' is always false",570,25,"Condition '!ggml_mem_ranges_add_src(mrs,fused->src[i])' is always false",
ggml/src/ggml-metal/ggml-metal-common.cpp,224,style,knownConditionTrueFalse,"Condition '!ggml_mem_ranges_add_src(mrs,fused->src[i])' is always false","Condition '!ggml_mem_ranges_add_src(mrs,fused->src[i])' is always false",570,49,Calling function 'ggml_mem_ranges_add_src' returns 1,
ggml/src/ggml-metal/ggml-metal-common.cpp,99,style,knownConditionTrueFalse,"Condition '!ggml_mem_ranges_add_src(mrs,fused->src[i])' is always false","Condition '!ggml_mem_ranges_add_src(mrs,fused->src[i])' is always false",570,31,Calling function 'ggml_mem_ranges_add' returns 1,
ggml/src/ggml-metal/ggml-metal-common.cpp,42,performance,passedByValue,Function parameter 'mr' should be passed by const reference.,Parameter 'mr' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,71,Function parameter 'mr' should be passed by const reference.,mr
ggml/src/ggml-metal/ggml-metal-device.h,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-metal/ggml-metal-device.cpp,5,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-metal/ggml-metal-device.cpp,7,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-metal/ggml-metal-device.cpp,8,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-metal/ggml-metal-device.cpp,9,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-metal/ggml-metal-device.cpp,10,information,missingIncludeSystem,Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-metal/ggml-metal-device.cpp,13,style,functionConst,Technically the member function 'ggml_metal_device_deleter::operator()' can be const.,The member function 'ggml_metal_device_deleter::operator()' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,10,,ggml_metal_device_deleter::operator()
ggml/src/ggml-metal/ggml-metal-device.cpp,1204,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-metal/ggml-metal-device.cpp,1068,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,4,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,5,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,11,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,12,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,1958,style,knownConditionTrueFalse,Condition 'nqptg%8==0' is always true,Condition 'nqptg%8==0' is always true,571,33,Condition 'nqptg%8==0' is always true,
ggml/src/ggml-metal/ggml-metal-ops.cpp,1959,style,knownConditionTrueFalse,Condition 'ncpsg%32==0' is always true,Condition 'ncpsg%32==0' is always true,571,33,Condition 'ncpsg%32==0' is always true,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2056,style,knownConditionTrueFalse,Condition 'nqptg%1==0' is always true,Condition 'nqptg%1==0' is always true,571,33,Condition 'nqptg%1==0' is always true,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2057,style,knownConditionTrueFalse,Condition 'ncpsg%32==0' is always true,Condition 'ncpsg%32==0' is always true,571,33,Condition 'ncpsg%32==0' is always true,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2164,style,knownConditionTrueFalse,Condition 'nwg==1' is always false,Condition 'nwg==1' is always false,570,17,Condition 'nwg==1' is always false,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2098,style,knownConditionTrueFalse,Condition 'nwg==1' is always false,Condition 'nwg==1' is always false,570,19,"Assignment 'nwg=32', assigned value is 32",
ggml/src/ggml-metal/ggml-metal-ops.cpp,21,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,455,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,564,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,565,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,566,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,567,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,569,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,667,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,668,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,706,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,19,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,707,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,19,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,1010,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,1011,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,1251,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,1252,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,1253,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,1254,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,1931,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,1932,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,1933,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2438,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2635,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2636,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2639,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2648,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2649,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2650,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2651,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2652,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2653,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2656,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2657,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2658,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2659,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2722,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2723,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2724,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2725,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2726,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2727,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2729,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2794,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2951,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2952,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2981,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2982,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-metal/ggml-metal-ops.cpp,2096,style,redundantAssignment,Variable 'nsg' is reassigned a value before the old one has been used.,Variable 'nsg' is reassigned a value before the old one has been used.,563,17,nsg is overwritten,nsg
ggml/src/ggml-metal/ggml-metal-ops.cpp,2087,style,redundantAssignment,Variable 'nsg' is reassigned a value before the old one has been used.,Variable 'nsg' is reassigned a value before the old one has been used.,563,13,nsg is assigned,nsg
ggml/src/ggml-metal/ggml-metal-ops.cpp,2533,style,constVariablePointer,Variable 'f0' can be declared as pointer to const,Variable 'f0' can be declared as pointer to const,398,27,Variable 'f0' can be declared as pointer to const,f0
ggml/src/ggml-metal/ggml-metal-ops.cpp,2056,style,moduloofone,Modulo of one is always equal to zero,Modulo of one is always equal to zero,,28,,
ggml/src/ggml-metal/ggml-metal.cpp,1,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/src/ggml-metal/ggml-metal.cpp,3,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-metal/ggml-metal.cpp,4,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-metal/ggml-metal.cpp,23,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,31,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,39,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,47,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,55,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,63,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,75,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,97,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,105,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,113,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,121,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,129,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,137,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,149,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-metal/ggml-metal.cpp,174,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-metal/ggml-metal.cpp,228,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-metal/ggml-metal.cpp,279,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-metal/ggml-metal.cpp,331,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-metal/ggml-metal.cpp,374,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal.cpp,385,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal.cpp,391,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal.cpp,397,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal.cpp,412,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal.cpp,418,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal.cpp,426,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal.cpp,460,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-metal/ggml-metal.cpp,489,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal.cpp,497,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal.cpp,505,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-metal/ggml-metal.cpp,519,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-metal/ggml-metal.cpp,525,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-metal/ggml-metal.cpp,552,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-metal/ggml-metal.cpp,577,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-metal/ggml-metal.cpp,585,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-metal/ggml-metal.cpp,593,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-metal/ggml-metal.cpp,206,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,214,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,224,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,240,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,265,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,275,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,291,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,316,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,327,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,343,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,370,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,405,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,515,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,533,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,573,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,604,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,625,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,652,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,658,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,666,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,680,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-metal/ggml-metal.cpp,690,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-opencl/ggml-opencl.cpp,10,information,missingInclude,"Include file: ""ggml-opencl.h"" not found.","Include file: ""ggml-opencl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,11,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,12,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,13,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,14,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,16,information,missingIncludeSystem,Include file: <CL/cl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <CL/cl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,18,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,20,information,missingIncludeSystem,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,21,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,22,information,missingIncludeSystem,Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,23,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,24,information,missingIncludeSystem,Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,25,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,26,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,27,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,28,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,29,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,30,information,missingIncludeSystem,Include file: <charconv> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <charconv> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,31,information,missingIncludeSystem,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,4043,error,unknownMacro,There is an unknown macro here somewhere. Configuration is required. If GGML_BACKEND_DL_IMPL is a macro then please configure it.,There is an unknown macro here somewhere. Configuration is required. If GGML_BACKEND_DL_IMPL is a macro then please configure it.,,1,,
ggml/src/ggml-opencl/ggml-opencl.cpp,696,information,missingInclude,"Include file: ""add.cl.h"" not found.","Include file: ""add.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,715,information,missingInclude,"Include file: ""add_id.cl.h"" not found.","Include file: ""add_id.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,731,information,missingInclude,"Include file: ""clamp.cl.h"" not found.","Include file: ""clamp.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,747,information,missingInclude,"Include file: ""cpy.cl.h"" not found.","Include file: ""cpy.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,766,information,missingInclude,"Include file: ""cvt.cl.h"" not found.","Include file: ""cvt.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,788,information,missingInclude,"Include file: ""diag_mask_inf.cl.h"" not found.","Include file: ""diag_mask_inf.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,805,information,missingInclude,"Include file: ""gelu.cl.h"" not found.","Include file: ""gelu.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,826,information,missingInclude,"Include file: ""glu.cl.h"" not found.","Include file: ""glu.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,852,information,missingInclude,"Include file: ""get_rows.cl.h"" not found.","Include file: ""get_rows.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,870,information,missingInclude,"Include file: ""im2col_f32.cl.h"" not found.","Include file: ""im2col_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,886,information,missingInclude,"Include file: ""im2col_f16.cl.h"" not found.","Include file: ""im2col_f16.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,902,information,missingInclude,"Include file: ""mul_mv_q4_0_f32.cl.h"" not found.","Include file: ""mul_mv_q4_0_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,918,information,missingInclude,"Include file: ""mul_mv_q4_0_f32_v.cl.h"" not found.","Include file: ""mul_mv_q4_0_f32_v.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,934,information,missingInclude,"Include file: ""mul_mv_q4_0_f32_8x_flat.cl.h"" not found.","Include file: ""mul_mv_q4_0_f32_8x_flat.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,954,information,missingInclude,"Include file: ""mul_mv_q4_0_f32_1d_8x_flat.cl.h"" not found.","Include file: ""mul_mv_q4_0_f32_1d_8x_flat.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,974,information,missingInclude,"Include file: ""mul_mv_q4_0_f32_1d_16x_flat.cl.h"" not found.","Include file: ""mul_mv_q4_0_f32_1d_16x_flat.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,990,information,missingInclude,"Include file: ""mul_mv_q6_k.cl.h"" not found.","Include file: ""mul_mv_q6_k.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1006,information,missingInclude,"Include file: ""mul_mv_q8_0_f32.cl.h"" not found.","Include file: ""mul_mv_q8_0_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1022,information,missingInclude,"Include file: ""mul_mv_q8_0_f32_flat.cl.h"" not found.","Include file: ""mul_mv_q8_0_f32_flat.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1038,information,missingInclude,"Include file: ""mul_mv_mxfp4_f32.cl.h"" not found.","Include file: ""mul_mv_mxfp4_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1054,information,missingInclude,"Include file: ""mul_mv_mxfp4_f32_flat.cl.h"" not found.","Include file: ""mul_mv_mxfp4_f32_flat.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1070,information,missingInclude,"Include file: ""mul_mv_f16_f16.cl.h"" not found.","Include file: ""mul_mv_f16_f16.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1086,information,missingInclude,"Include file: ""mul_mv_f16_f32_1row.cl.h"" not found.","Include file: ""mul_mv_f16_f32_1row.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1102,information,missingInclude,"Include file: ""mul_mv_f16_f32_l4.cl.h"" not found.","Include file: ""mul_mv_f16_f32_l4.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1118,information,missingInclude,"Include file: ""mul_mv_f16_f32.cl.h"" not found.","Include file: ""mul_mv_f16_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1134,information,missingInclude,"Include file: ""mul_mv_f32_f32.cl.h"" not found.","Include file: ""mul_mv_f32_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1150,information,missingInclude,"Include file: ""mul_mat_f16_f32.cl.h"" not found.","Include file: ""mul_mat_f16_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1166,information,missingInclude,"Include file: ""mul_mm_f32_f32_l4_lm.cl.h"" not found.","Include file: ""mul_mm_f32_f32_l4_lm.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1182,information,missingInclude,"Include file: ""mul_mm_f16_f32_l4_lm.cl.h"" not found.","Include file: ""mul_mm_f16_f32_l4_lm.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1198,information,missingInclude,"Include file: ""mul.cl.h"" not found.","Include file: ""mul.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1217,information,missingInclude,"Include file: ""norm.cl.h"" not found.","Include file: ""norm.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1234,information,missingInclude,"Include file: ""relu.cl.h"" not found.","Include file: ""relu.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1250,information,missingInclude,"Include file: ""rms_norm.cl.h"" not found.","Include file: ""rms_norm.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1267,information,missingInclude,"Include file: ""rope.cl.h"" not found.","Include file: ""rope.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1290,information,missingInclude,"Include file: ""scale.cl.h"" not found.","Include file: ""scale.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1306,information,missingInclude,"Include file: ""silu.cl.h"" not found.","Include file: ""silu.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1323,information,missingInclude,"Include file: ""softmax_f32.cl.h"" not found.","Include file: ""softmax_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1339,information,missingInclude,"Include file: ""softmax_f16.cl.h"" not found.","Include file: ""softmax_f16.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1355,information,missingInclude,"Include file: ""softmax_4_f32.cl.h"" not found.","Include file: ""softmax_4_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1371,information,missingInclude,"Include file: ""softmax_4_f16.cl.h"" not found.","Include file: ""softmax_4_f16.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1387,information,missingInclude,"Include file: ""flash_attn_f16.cl.h"" not found.","Include file: ""flash_attn_f16.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1390,information,missingInclude,"Include file: ""flash_attn_f32.cl.h"" not found.","Include file: ""flash_attn_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1393,information,missingInclude,"Include file: ""flash_attn_f32_f16.cl.h"" not found.","Include file: ""flash_attn_f32_f16.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1454,information,missingInclude,"Include file: ""argsort.cl.h"" not found.","Include file: ""argsort.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1470,information,missingInclude,"Include file: ""div.cl.h"" not found.","Include file: ""div.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1492,information,missingInclude,"Include file: ""sub.cl.h"" not found.","Include file: ""sub.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1511,information,missingInclude,"Include file: ""sum_rows.cl.h"" not found.","Include file: ""sum_rows.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1527,information,missingInclude,"Include file: ""sigmoid.cl.h"" not found.","Include file: ""sigmoid.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1544,information,missingInclude,"Include file: ""group_norm.cl.h"" not found.","Include file: ""group_norm.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1561,information,missingInclude,"Include file: ""repeat.cl.h"" not found.","Include file: ""repeat.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1582,information,missingInclude,"Include file: ""pad.cl.h"" not found.","Include file: ""pad.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1603,information,missingInclude,"Include file: ""tanh.cl.h"" not found.","Include file: ""tanh.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1626,information,missingInclude,"Include file: ""upscale.cl.h"" not found.","Include file: ""upscale.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1658,information,missingInclude,"Include file: ""concat.cl.h"" not found.","Include file: ""concat.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1683,information,missingInclude,"Include file: ""tsembd.cl.h"" not found.","Include file: ""tsembd.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1705,information,missingInclude,"Include file: ""set_rows.cl.h"" not found.","Include file: ""set_rows.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1724,information,missingInclude,"Include file: ""conv2d.cl.h"" not found.","Include file: ""conv2d.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1727,information,missingInclude,"Include file: ""conv2d_f16_f32.cl.h"" not found.","Include file: ""conv2d_f16_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1765,information,missingInclude,"Include file: ""mul_mv_id_q4_0_f32_8x_flat.cl.h"" not found.","Include file: ""mul_mv_id_q4_0_f32_8x_flat.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1781,information,missingInclude,"Include file: ""mul_mv_id_q8_0_f32.cl.h"" not found.","Include file: ""mul_mv_id_q8_0_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1797,information,missingInclude,"Include file: ""mul_mv_id_q8_0_f32_flat.cl.h"" not found.","Include file: ""mul_mv_id_q8_0_f32_flat.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1813,information,missingInclude,"Include file: ""mul_mv_id_mxfp4_f32.cl.h"" not found.","Include file: ""mul_mv_id_mxfp4_f32.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1829,information,missingInclude,"Include file: ""mul_mv_id_mxfp4_f32_flat.cl.h"" not found.","Include file: ""mul_mv_id_mxfp4_f32_flat.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1847,information,missingInclude,"Include file: ""transpose.cl.h"" not found.","Include file: ""transpose.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1874,information,missingInclude,"Include file: ""gemv_noshuffle_general.cl.h"" not found.","Include file: ""gemv_noshuffle_general.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1902,information,missingInclude,"Include file: ""gemv_noshuffle.cl.h"" not found.","Include file: ""gemv_noshuffle.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/ggml-opencl.cpp,1967,information,missingInclude,"Include file: ""mul_mat_Ab_Bi_8x4.cl.h"" not found.","Include file: ""mul_mat_Ab_Bi_8x4.cl.h"" not found.",,0,,
ggml/src/ggml-opencl/kernels/add_id.cl,35,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,31,,
ggml/src/ggml-opencl/kernels/argsort.cl,46,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,29,,
ggml/src/ggml-opencl/kernels/clamp.cl,14,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/clamp.cl,15,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/cpy.cl,75,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/cpy.cl,88,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,49,,
ggml/src/ggml-opencl/kernels/cpy.cl,118,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/cpy.cl,135,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,53,,
ggml/src/ggml-opencl/kernels/cpy.cl,163,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/cpy.cl,164,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/cpy.cl,177,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,49,,
ggml/src/ggml-opencl/kernels/cpy.cl,180,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,53,,
ggml/src/ggml-opencl/kernels/diag_mask_inf.cl,15,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/diag_mask_inf.cl,16,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/gelu.cl,17,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/gelu.cl,18,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/gelu.cl,45,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/gelu.cl,46,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/gelu.cl,71,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/gelu.cl,72,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl,259,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,Second condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl,258,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,First condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl,260,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,Second condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl,259,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,First condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl,263,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,Second condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl,260,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,First condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl,264,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,31,,
ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl,196,style,constParameterPointer,Parameter 'src0_d' can be declared as pointer to const,Parameter 'src0_d' can be declared as pointer to const,398,25,Parameter 'src0_d' can be declared as pointer to const,src0_d
ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl,265,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,Second condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl,264,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,First condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl,266,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,Second condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl,265,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,First condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl,269,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,Second condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl,266,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,17,First condition,
ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl,270,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,31,,
ggml/src/ggml-opencl/kernels/gemv_noshuffle_general.cl,196,style,constParameterPointer,Parameter 'src0_d' can be declared as pointer to const,Parameter 'src0_d' can be declared as pointer to const,398,25,Parameter 'src0_d' can be declared as pointer to const,src0_d
ggml/src/ggml-opencl/kernels/get_rows.cl,80,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/get_rows.cl,90,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/get_rows.cl,113,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/get_rows.cl,123,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/get_rows.cl,146,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/get_rows.cl,161,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,32,,
ggml/src/ggml-opencl/kernels/group_norm.cl,36,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,30,,
ggml/src/ggml-opencl/kernels/group_norm.cl,37,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,29,,
ggml/src/ggml-opencl/kernels/group_norm.cl,91,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,29,,
ggml/src/ggml-opencl/kernels/group_norm.cl,92,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,29,,
ggml/src/ggml-opencl/kernels/group_norm.cl,93,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,29,,
ggml/src/ggml-opencl/kernels/group_norm.cl,94,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,29,,
ggml/src/ggml-opencl/kernels/im2col_f16.cl,31,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/im2col_f32.cl,31,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/im2col_f32.cl,32,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mat_Ab_Bi_8x4.cl,31,style,unreadVariable,Variable 'm_4' is assigned a value that is never used.,Variable 'm_4' is assigned a value that is never used.,563,13,,m_4
ggml/src/ggml-opencl/kernels/mul_mat_Ab_Bi_8x4.cl,31,style,unreadVariable,Variable 'm_4' is assigned a value that is never used.,Variable 'm_4' is assigned a value that is never used.,563,9,,m_4
ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl,69,warning,identicalInnerCondition,Identical inner 'if' condition is always true.,Identical inner 'if' condition is always true (outer condition is 'k_vec_start_a<K' and inner condition is 'k_vec_start_a<K').,398,35,identical inner condition: k_vec_start_a<K,
ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl,64,warning,identicalInnerCondition,Identical inner 'if' condition is always true.,Identical inner 'if' condition is always true (outer condition is 'k_vec_start_a<K' and inner condition is 'k_vec_start_a<K').,398,47,outer condition: k_vec_start_a<K,
ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl,83,warning,identicalInnerCondition,Identical inner 'if' condition is always true.,Identical inner 'if' condition is always true (outer condition is 'k_vec_start_b<K' and inner condition is 'k_vec_start_b<K').,398,35,identical inner condition: k_vec_start_b<K,
ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl,78,warning,identicalInnerCondition,Identical inner 'if' condition is always true.,Identical inner 'if' condition is always true (outer condition is 'k_vec_start_b<K' and inner condition is 'k_vec_start_b<K').,398,47,outer condition: k_vec_start_b<K,
ggml/src/ggml-opencl/kernels/mul_mm_f16_f32_l4_lm.cl,39,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mm_f32_f32_l4_lm.cl,39,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_f16_f16.cl,54,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_f16_f32.cl,54,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_f16_f32_1row.cl,52,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_f16_f32_l4.cl,53,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_f32_f32.cl,54,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32.cl,71,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,31,,
ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32.cl,124,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,30,,
ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl,262,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,29,,
ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl,264,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,29,,
ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl,279,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,50,,
ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl,44,style,constParameterPointer,Parameter 'dh' can be declared as pointer to const,Parameter 'dh' can be declared as pointer to const,398,24,Parameter 'dh' can be declared as pointer to const,dh
ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32_flat.cl,137,style,variableScope,The scope of the variable 'sumq' can be reduced.,"The scope of the variable 'sumq' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,12,,sumq
ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32_flat.cl,24,style,unusedStructMember,struct member 'block_q8_0::qs' is never used.,struct member 'block_q8_0::qs' is never used.,563,10,,block_q8_0::qs
ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32_flat.cl,137,style,unreadVariable,Variable 'sumq' is assigned a value that is never used.,Variable 'sumq' is assigned a value that is never used.,563,17,,sumq
ggml/src/ggml-opencl/kernels/mul_mv_mxfp4_f32.cl,83,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,31,,
ggml/src/ggml-opencl/kernels/mul_mv_mxfp4_f32.cl,136,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,30,,
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl,188,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl,189,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl,60,style,constParameterPointer,Parameter 'yl' can be declared as pointer to const,Parameter 'yl' can be declared as pointer to const,398,25,Parameter 'yl' can be declared as pointer to const,yl
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl,155,style,constVariable,Variable 'tot' can be declared as const array,Variable 'tot' can be declared as const array,398,11,Variable 'tot' can be declared as const array,tot
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl,303,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl,304,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl,52,style,constParameterPointer,Parameter 'dh' can be declared as pointer to const,Parameter 'dh' can be declared as pointer to const,398,24,Parameter 'dh' can be declared as pointer to const,dh
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl,261,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl,262,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl,52,style,constParameterPointer,Parameter 'dh' can be declared as pointer to const,Parameter 'dh' can be declared as pointer to const,398,24,Parameter 'dh' can be declared as pointer to const,dh
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_8x_flat.cl,268,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_8x_flat.cl,269,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_8x_flat.cl,55,style,constParameterPointer,Parameter 'dh' can be declared as pointer to const,Parameter 'dh' can be declared as pointer to const,398,24,Parameter 'dh' can be declared as pointer to const,dh
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl,250,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl,251,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_q6_k.cl,98,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/mul_mv_q6_k.cl,99,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32.cl,116,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,30,,
ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl,179,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,30,,
ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl,117,style,variableScope,The scope of the variable 'sumq' can be reduced.,"The scope of the variable 'sumq' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,12,,sumq
ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl,24,style,unusedStructMember,struct member 'block_q8_0::qs' is never used.,struct member 'block_q8_0::qs' is never used.,563,10,,block_q8_0::qs
ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl,117,style,unreadVariable,Variable 'sumq' is assigned a value that is never used.,Variable 'sumq' is assigned a value that is never used.,563,17,,sumq
ggml/src/ggml-opencl/kernels/norm.cl,34,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,26,,
ggml/src/ggml-opencl/kernels/relu.cl,12,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/relu.cl,13,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/rms_norm.cl,46,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/rope.cl,425,style,knownConditionTrueFalse,Condition 'sector>=sections.s0' is always true,Condition 'sector>=sections.s0' is always true,571,29,Condition 'sector>=sections.s0' is always true,
ggml/src/ggml-opencl/kernels/rope.cl,422,style,knownConditionTrueFalse,Condition 'sector>=sections.s0' is always true,Condition 'sector>=sections.s0' is always true,571,24,Assuming that condition 'sector<sections.s0' is not redundant,
ggml/src/ggml-opencl/kernels/rope.cl,523,style,knownConditionTrueFalse,Condition 'sector>=sections.s0' is always true,Condition 'sector>=sections.s0' is always true,571,29,Condition 'sector>=sections.s0' is always true,
ggml/src/ggml-opencl/kernels/rope.cl,520,style,knownConditionTrueFalse,Condition 'sector>=sections.s0' is always true,Condition 'sector>=sections.s0' is always true,571,24,Assuming that condition 'sector<sections.s0' is not redundant,
ggml/src/ggml-opencl/kernels/rope.cl,620,style,knownConditionTrueFalse,Condition 'sector>=sections.s0' is always true,Condition 'sector>=sections.s0' is always true,571,27,Condition 'sector>=sections.s0' is always true,
ggml/src/ggml-opencl/kernels/rope.cl,617,style,knownConditionTrueFalse,Condition 'sector>=sections.s0' is always true,Condition 'sector>=sections.s0' is always true,571,20,Assuming that condition 'sector<sections.s0' is not redundant,
ggml/src/ggml-opencl/kernels/rope.cl,703,style,knownConditionTrueFalse,Condition 'sector>=sections.s0' is always true,Condition 'sector>=sections.s0' is always true,571,27,Condition 'sector>=sections.s0' is always true,
ggml/src/ggml-opencl/kernels/rope.cl,700,style,knownConditionTrueFalse,Condition 'sector>=sections.s0' is always true,Condition 'sector>=sections.s0' is always true,571,20,Assuming that condition 'sector<sections.s0' is not redundant,
ggml/src/ggml-opencl/kernels/rope.cl,82,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/rope.cl,83,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/rope.cl,107,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,57,,
ggml/src/ggml-opencl/kernels/rope.cl,116,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,56,,
ggml/src/ggml-opencl/kernels/rope.cl,161,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/rope.cl,162,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/rope.cl,186,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,55,,
ggml/src/ggml-opencl/kernels/rope.cl,195,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,54,,
ggml/src/ggml-opencl/kernels/rope.cl,240,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/rope.cl,241,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/rope.cl,265,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,56,,
ggml/src/ggml-opencl/kernels/rope.cl,274,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,57,,
ggml/src/ggml-opencl/kernels/rope.cl,319,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/rope.cl,320,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/rope.cl,344,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,55,,
ggml/src/ggml-opencl/kernels/rope.cl,353,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,55,,
ggml/src/ggml-opencl/kernels/rope.cl,399,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/rope.cl,400,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/rope.cl,442,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,56,,
ggml/src/ggml-opencl/kernels/rope.cl,451,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,57,,
ggml/src/ggml-opencl/kernels/rope.cl,497,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/rope.cl,595,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/rope.cl,596,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/rope.cl,630,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,52,,
ggml/src/ggml-opencl/kernels/rope.cl,678,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/sigmoid.cl,13,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/sigmoid.cl,14,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/silu.cl,12,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,28,,
ggml/src/ggml-opencl/kernels/silu.cl,13,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,27,,
ggml/src/ggml-opencl/kernels/softmax_4_f16.cl,66,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,44,,
ggml/src/ggml-opencl/kernels/softmax_4_f32.cl,66,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,44,,
ggml/src/ggml-opencl/kernels/softmax_f16.cl,66,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,43,,
ggml/src/ggml-opencl/kernels/softmax_f32.cl,66,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,43,,
ggml/src/ggml-opencl/kernels/sum_rows.cl,18,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,29,,
ggml/src/ggml-opencl/kernels/sum_rows.cl,19,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,29,,
ggml/src/ggml-opencl/kernels/sum_rows.cl,29,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,48,,
ggml/src/ggml-opencl/kernels/sum_rows.cl,30,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,48,,
ggml/src/ggml-opencl/kernels/tsembd.cl,27,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,28,,
ggml/src/ggml-opt.cpp,1,information,missingInclude,"Include file: ""ggml-opt.h"" not found.","Include file: ""ggml-opt.h"" not found.",,0,,
ggml/src/ggml-opt.cpp,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-opt.cpp,4,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/src/ggml-opt.cpp,5,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml-opt.cpp,8,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opt.cpp,9,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opt.cpp,10,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opt.cpp,11,information,missingIncludeSystem,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opt.cpp,12,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opt.cpp,13,information,missingIncludeSystem,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-opt.cpp,14,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-quants.c,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-quants.h,6,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-quants.c,7,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-quants.c,9,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-quants.c,10,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-quants.c,11,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-quants.c,12,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-quants.c,13,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-quants.c,14,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,14,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,39,information,missingIncludeSystem,Include file: <cuda_fp16.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cuda_fp16.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,41,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,37,information,missingIncludeSystem,Include file: <musa_fp16.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <musa_fp16.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,51,information,missingIncludeSystem,Include file: <hip/hip_fp16.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <hip/hip_fp16.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,52,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,26,information,missingIncludeSystem,Include file: <metal_stdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <metal_stdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,62,information,missingIncludeSystem,Include file: <sycl/half_type.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/half_type.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-common.h,63,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1,information,missingInclude,"Include file: ""ggml-rpc.h"" not found.","Include file: ""ggml-rpc.h"" not found.",,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,2,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,3,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,4,information,missingInclude,"Include file: ""ggml-cpp.h"" not found.","Include file: ""ggml-cpp.h"" not found.",,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,6,information,missingIncludeSystem,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,7,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,8,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,9,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,10,information,missingIncludeSystem,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,11,information,missingIncludeSystem,Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,12,information,missingIncludeSystem,Include file: <unordered_set> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unordered_set> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,21,information,missingIncludeSystem,Include file: <arpa/inet.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <arpa/inet.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,22,information,missingIncludeSystem,Include file: <sys/socket.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/socket.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,23,information,missingIncludeSystem,Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,24,information,missingIncludeSystem,Include file: <netinet/in.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <netinet/in.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,25,information,missingIncludeSystem,Include file: <netinet/tcp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <netinet/tcp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,26,information,missingIncludeSystem,Include file: <netdb.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <netdb.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,27,information,missingIncludeSystem,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,29,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,30,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,31,information,missingIncludeSystem,Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <filesystem> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,32,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,914,performance,functionStatic,Technically the member function 'rpc_server::hello' can be static (but you may consider moving to unnamed namespace).,The member function 'rpc_server::hello' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,18,,rpc_server::hello
ggml/src/ggml-rpc/ggml-rpc.cpp,885,performance,functionStatic,Technically the member function 'rpc_server::hello' can be static (but you may consider moving to unnamed namespace).,The member function 'rpc_server::hello' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,10,,rpc_server::hello
ggml/src/ggml-rpc/ggml-rpc.cpp,54,style,noExplicitConstructor,Struct 'socket_t' has a constructor with 1 argument that is not explicit.,"Struct 'socket_t' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,socket_t
ggml/src/ggml-rpc/ggml-rpc.cpp,836,error,memleak,Memory leak: buft_ctx,Memory leak: buft_ctx,401,5,,buft_ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,851,error,memleak,Memory leak: ctx,Memory leak: ctx,401,5,,ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,1833,error,memleak,Memory leak: ctx,Memory leak: ctx,401,5,,ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,336,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-rpc/ggml-rpc.cpp,351,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-rpc/ggml-rpc.cpp,503,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,511,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,529,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,49,,
ggml/src/ggml-rpc/ggml-rpc.cpp,559,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,576,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,582,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-rpc/ggml-rpc.cpp,602,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,614,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,49,,
ggml/src/ggml-rpc/ggml-rpc.cpp,616,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,49,,
ggml/src/ggml-rpc/ggml-rpc.cpp,620,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,631,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,650,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,55,,
ggml/src/ggml-rpc/ggml-rpc.cpp,655,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,55,,
ggml/src/ggml-rpc/ggml-rpc.cpp,680,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,55,,
ggml/src/ggml-rpc/ggml-rpc.cpp,692,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,55,,
ggml/src/ggml-rpc/ggml-rpc.cpp,699,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,59,,
ggml/src/ggml-rpc/ggml-rpc.cpp,726,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-rpc/ggml-rpc.cpp,732,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-rpc/ggml-rpc.cpp,780,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-rpc/ggml-rpc.cpp,938,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1082,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1098,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1104,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,19,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1126,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,14,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1151,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1186,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1219,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1274,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1671,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1677,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1683,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1711,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1719,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,45,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1737,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,55,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1738,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,49,,
ggml/src/ggml-rpc/ggml-rpc.cpp,256,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,60,,
ggml/src/ggml-rpc/ggml-rpc.cpp,262,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,60,,
ggml/src/ggml-rpc/ggml-rpc.cpp,285,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,31,,
ggml/src/ggml-rpc/ggml-rpc.cpp,323,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,22,,
ggml/src/ggml-rpc/ggml-rpc.cpp,773,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,31,,
ggml/src/ggml-rpc/ggml-rpc.cpp,775,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,32,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1064,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,36,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1344,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,30,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1350,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,34,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1694,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1715,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1723,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1765,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1771,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1790,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-rpc/ggml-rpc.cpp,1433,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,42,Shadow variable,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1409,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,23,Shadowed declaration,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1445,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,44,Shadow variable,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1409,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,23,Shadowed declaration,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1458,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,43,Shadow variable,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1409,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,23,Shadowed declaration,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1469,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,42,Shadow variable,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1409,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,23,Shadowed declaration,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1481,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,45,Shadow variable,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1409,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,23,Shadowed declaration,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1531,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,45,Shadow variable,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1409,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,23,Shadowed declaration,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1558,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,38,Shadow variable,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1409,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,23,Shadowed declaration,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1572,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,41,Shadow variable,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1409,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,23,Shadowed declaration,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1586,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,43,Shadow variable,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1409,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,23,Shadowed declaration,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1599,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,47,Shadow variable,response
ggml/src/ggml-rpc/ggml-rpc.cpp,1409,style,shadowVariable,Local variable 'response' shadows outer variable,Local variable 'response' shadows outer variable,398,23,Shadowed declaration,response
ggml/src/ggml-rpc/ggml-rpc.cpp,279,style,constVariablePointer,Variable 'server' can be declared as pointer to const,Variable 'server' can be declared as pointer to const,398,22,Variable 'server' can be declared as pointer to const,server
ggml/src/ggml-rpc/ggml-rpc.cpp,529,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,43,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,559,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,39,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,575,style,constParameterCallback,"Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_buffer_set_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).","Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_buffer_set_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).",398,92,Parameter 'tensor' can be declared as pointer to const,tensor
ggml/src/ggml-rpc/ggml-rpc.cpp,642,style,constParameterCallback,"Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_buffer_set_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).","Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_buffer_set_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).",398,30,You might need to cast the function pointer here,tensor
ggml/src/ggml-rpc/ggml-rpc.cpp,576,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,39,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,602,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,39,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,611,style,constParameterCallback,"Parameter 'dst' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_buffer_cpy_tensor' is a callback function, if 'dst' is declared with const you might also need to cast function pointer(s).","Parameter 'dst' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_buffer_cpy_tensor' is a callback function, if 'dst' is declared with const you might also need to cast function pointer(s).",398,117,Parameter 'dst' can be declared as pointer to const,dst
ggml/src/ggml-rpc/ggml-rpc.cpp,644,style,constParameterCallback,"Parameter 'dst' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_buffer_cpy_tensor' is a callback function, if 'dst' is declared with const you might also need to cast function pointer(s).","Parameter 'dst' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_buffer_cpy_tensor' is a callback function, if 'dst' is declared with const you might also need to cast function pointer(s).",398,30,You might need to cast the function pointer here,dst
ggml/src/ggml-rpc/ggml-rpc.cpp,614,style,constVariablePointer,Variable 'src_ctx' can be declared as pointer to const,Variable 'src_ctx' can be declared as pointer to const,398,39,Variable 'src_ctx' can be declared as pointer to const,src_ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,616,style,constVariablePointer,Variable 'dst_ctx' can be declared as pointer to const,Variable 'dst_ctx' can be declared as pointer to const,398,39,Variable 'dst_ctx' can be declared as pointer to const,dst_ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,620,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,39,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,631,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,39,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,655,style,constVariablePointer,Variable 'buft_ctx' can be declared as pointer to const,Variable 'buft_ctx' can be declared as pointer to const,398,44,Variable 'buft_ctx' can be declared as pointer to const,buft_ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,680,style,constVariablePointer,Variable 'buft_ctx' can be declared as pointer to const,Variable 'buft_ctx' can be declared as pointer to const,398,44,Variable 'buft_ctx' can be declared as pointer to const,buft_ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,692,style,constVariablePointer,Variable 'buft_ctx' can be declared as pointer to const,Variable 'buft_ctx' can be declared as pointer to const,398,44,Variable 'buft_ctx' can be declared as pointer to const,buft_ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,699,style,constVariablePointer,Variable 'buft_ctx' can be declared as pointer to const,Variable 'buft_ctx' can be declared as pointer to const,398,48,Variable 'buft_ctx' can be declared as pointer to const,buft_ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,779,style,constParameterCallback,"Parameter 'cgraph' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_graph_compute' is a callback function, if 'cgraph' is declared with const you might also need to cast function pointer(s).","Parameter 'cgraph' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_graph_compute' is a callback function, if 'cgraph' is declared with const you might also need to cast function pointer(s).",398,94,Parameter 'cgraph' can be declared as pointer to const,cgraph
ggml/src/ggml-rpc/ggml-rpc.cpp,801,style,constParameterCallback,"Parameter 'cgraph' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_graph_compute' is a callback function, if 'cgraph' is declared with const you might also need to cast function pointer(s).","Parameter 'cgraph' can be declared as pointer to const. However it seems that 'ggml_backend_rpc_graph_compute' is a callback function, if 'cgraph' is declared with const you might also need to cast function pointer(s).",398,38,You might need to cast the function pointer here,cgraph
ggml/src/ggml-rpc/ggml-rpc.cpp,780,style,constVariablePointer,Variable 'rpc_ctx' can be declared as pointer to const,Variable 'rpc_ctx' can be declared as pointer to const,398,32,Variable 'rpc_ctx' can be declared as pointer to const,rpc_ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,1737,style,constVariablePointer,Variable 'buft_ctx' can be declared as pointer to const,Variable 'buft_ctx' can be declared as pointer to const,398,44,Variable 'buft_ctx' can be declared as pointer to const,buft_ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,1738,style,constVariablePointer,Variable 'dev_ctx' can be declared as pointer to const,Variable 'dev_ctx' can be declared as pointer to const,398,39,Variable 'dev_ctx' can be declared as pointer to const,dev_ctx
ggml/src/ggml-rpc/ggml-rpc.cpp,18,information,missingIncludeSystem,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-rpc/ggml-rpc.cpp,19,information,missingIncludeSystem,Include file: <winsock2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <winsock2.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/binbcast.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/common.hpp,16,information,missingIncludeSystem,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/common.hpp,17,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/common.hpp,18,information,missingIncludeSystem,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/common.hpp,19,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,16,information,missingIncludeSystem,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,17,information,missingIncludeSystem,Include file: <sycl/half_type.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/half_type.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,18,information,missingIncludeSystem,Include file: <syclcompat/math.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <syclcompat/math.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,19,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,28,information,missingIncludeSystem,Include file: <oneapi/math.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <oneapi/math.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,31,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,22,information,missingIncludeSystem,Include file: <oneapi/mkl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <oneapi/mkl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,39,information,missingIncludeSystem,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,52,information,missingIncludeSystem,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,2037,information,missingIncludeSystem,Include file: <sycl/info/aspects.def> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/info/aspects.def> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,2038,information,missingIncludeSystem,Include file: <sycl/info/aspects_deprecated.def> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/info/aspects_deprecated.def> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/common.hpp,22,information,missingInclude,"Include file: ""ggml-sycl.h"" not found.","Include file: ""ggml-sycl.h"" not found.",,0,,
ggml/src/ggml-sycl/sycl_hw.hpp,4,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/sycl_hw.hpp,5,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/sycl_hw.hpp,6,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/sycl_hw.hpp,7,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/sycl_hw.hpp,9,information,missingIncludeSystem,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/common.hpp,37,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-sycl/common.hpp,39,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-sycl/binbcast.cpp,3,information,missingIncludeSystem,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/binbcast.cpp,4,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/binbcast.cpp,5,information,missingIncludeSystem,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/binbcast.cpp,7,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,1658,error,returnDanglingLifetime,Returning object that points to local variable 'r' that will be invalid when returning.,Returning object that points to local variable 'r' that will be invalid when returning.,562,55,,
ggml/src/ggml-sycl/dpct/helper.hpp,1658,error,returnDanglingLifetime,Returning object that points to local variable 'r' that will be invalid when returning.,Returning object that points to local variable 'r' that will be invalid when returning.,562,43,Variable created here.,
ggml/src/ggml-sycl/dpct/helper.hpp,1658,error,returnDanglingLifetime,Returning object that points to local variable 'r' that will be invalid when returning.,Returning object that points to local variable 'r' that will be invalid when returning.,562,55,Address of variable taken here.,
ggml/src/ggml-sycl/dpct/helper.hpp,1659,error,returnDanglingLifetime,Returning pointer to local variable 'r' that will be invalid when returning.,Returning pointer to local variable 'r' that will be invalid when returning.,562,67,,
ggml/src/ggml-sycl/dpct/helper.hpp,1659,error,returnDanglingLifetime,Returning pointer to local variable 'r' that will be invalid when returning.,Returning pointer to local variable 'r' that will be invalid when returning.,562,55,Variable created here.,
ggml/src/ggml-sycl/dpct/helper.hpp,1659,error,returnDanglingLifetime,Returning pointer to local variable 'r' that will be invalid when returning.,Returning pointer to local variable 'r' that will be invalid when returning.,562,67,Address of variable taken here.,
ggml/src/ggml-sycl/dpct/helper.hpp,495,warning,uninitMemberVarPrivate,Member variable 'device_info::_name' is not initialized.,"Member variable 'device_info::_name' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_name
ggml/src/ggml-sycl/dpct/helper.hpp,496,warning,uninitMemberVarPrivate,Member variable 'device_info::_max_work_item_sizes_i' is not initialized.,"Member variable 'device_info::_max_work_item_sizes_i' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_max_work_item_sizes_i
ggml/src/ggml-sycl/dpct/helper.hpp,498,warning,uninitMemberVarPrivate,Member variable 'device_info::_major' is not initialized.,"Member variable 'device_info::_major' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_major
ggml/src/ggml-sycl/dpct/helper.hpp,499,warning,uninitMemberVarPrivate,Member variable 'device_info::_minor' is not initialized.,"Member variable 'device_info::_minor' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_minor
ggml/src/ggml-sycl/dpct/helper.hpp,501,warning,uninitMemberVarPrivate,Member variable 'device_info::_frequency' is not initialized.,"Member variable 'device_info::_frequency' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_frequency
ggml/src/ggml-sycl/dpct/helper.hpp,506,warning,uninitMemberVarPrivate,Member variable 'device_info::_global_mem_cache_size' is not initialized.,"Member variable 'device_info::_global_mem_cache_size' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,18,,device_info::_global_mem_cache_size
ggml/src/ggml-sycl/dpct/helper.hpp,507,warning,uninitMemberVarPrivate,Member variable 'device_info::_max_compute_units' is not initialized.,"Member variable 'device_info::_max_compute_units' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_max_compute_units
ggml/src/ggml-sycl/dpct/helper.hpp,508,warning,uninitMemberVarPrivate,Member variable 'device_info::_max_work_group_size' is not initialized.,"Member variable 'device_info::_max_work_group_size' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_max_work_group_size
ggml/src/ggml-sycl/dpct/helper.hpp,509,warning,uninitMemberVarPrivate,Member variable 'device_info::_max_sub_group_size' is not initialized.,"Member variable 'device_info::_max_sub_group_size' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_max_sub_group_size
ggml/src/ggml-sycl/dpct/helper.hpp,510,warning,uninitMemberVarPrivate,Member variable 'device_info::_max_work_items_per_compute_unit' is not initialized.,"Member variable 'device_info::_max_work_items_per_compute_unit' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_max_work_items_per_compute_unit
ggml/src/ggml-sycl/dpct/helper.hpp,511,warning,uninitMemberVarPrivate,Member variable 'device_info::_max_register_size_per_work_group' is not initialized.,"Member variable 'device_info::_max_register_size_per_work_group' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_max_register_size_per_work_group
ggml/src/ggml-sycl/dpct/helper.hpp,512,warning,uninitMemberVarPrivate,Member variable 'device_info::_global_mem_size' is not initialized.,"Member variable 'device_info::_global_mem_size' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_global_mem_size
ggml/src/ggml-sycl/dpct/helper.hpp,513,warning,uninitMemberVarPrivate,Member variable 'device_info::_local_mem_size' is not initialized.,"Member variable 'device_info::_local_mem_size' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_local_mem_size
ggml/src/ggml-sycl/dpct/helper.hpp,514,warning,uninitMemberVarPrivate,Member variable 'device_info::_max_mem_alloc_size' is not initialized.,"Member variable 'device_info::_max_mem_alloc_size' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_max_mem_alloc_size
ggml/src/ggml-sycl/dpct/helper.hpp,515,warning,uninitMemberVarPrivate,Member variable 'device_info::_max_nd_range_size' is not initialized.,"Member variable 'device_info::_max_nd_range_size' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_max_nd_range_size
ggml/src/ggml-sycl/dpct/helper.hpp,516,warning,uninitMemberVarPrivate,Member variable 'device_info::_max_nd_range_size_i' is not initialized.,"Member variable 'device_info::_max_nd_range_size_i' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_max_nd_range_size_i
ggml/src/ggml-sycl/dpct/helper.hpp,517,warning,uninitMemberVarPrivate,Member variable 'device_info::_device_id' is not initialized.,"Member variable 'device_info::_device_id' is not initialized. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,9,,device_info::_device_id
ggml/src/ggml-sycl/dpct/helper.hpp,2851,warning,uninitMemberVarPrivate,Member variable 'device_memory::_host_ptr' is not initialized in the constructor.,"Member variable 'device_memory::_host_ptr' is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,13,,device_memory::_host_ptr
ggml/src/ggml-sycl/common.hpp,300,performance,useInitializationList,Variable 'opt_feature' is assigned in constructor body. Consider performing initialization in initialization list.,"When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don't explicitly write them to the initialization list. You could avoid assigning 'opt_feature' a value by passing the value to the constructor in the initialization list.",398,9,,opt_feature
ggml/src/ggml-sycl/dpct/helper.hpp,291,style,functionConst,Technically the member function 'dpct::pitched_data::get_pitch' can be const.,The member function 'dpct::pitched_data::get_pitch' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,16,,dpct::pitched_data::get_pitch
ggml/src/ggml-sycl/dpct/helper.hpp,294,style,functionConst,Technically the member function 'dpct::pitched_data::get_x' can be const.,The member function 'dpct::pitched_data::get_x' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,16,,dpct::pitched_data::get_x
ggml/src/ggml-sycl/dpct/helper.hpp,297,style,functionConst,Technically the member function 'dpct::pitched_data::get_y' can be const.,The member function 'dpct::pitched_data::get_y' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,16,,dpct::pitched_data::get_y
ggml/src/ggml-sycl/dpct/helper.hpp,372,style,functionConst,Technically the member function 'dpct::device_info::get_max_nd_range_size' can be const.,The member function 'dpct::device_info::get_max_nd_range_size' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,14,,dpct::device_info::get_max_nd_range_size
ggml/src/ggml-sycl/dpct/helper.hpp,643,performance,functionStatic,"Either there is a missing 'override', or the member function 'dpct::device_ext::is_native_atomic_supported' can be static.","Unless it overrides a base class member, the member function 'dpct::device_ext::is_native_atomic_supported' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.",398,11,,dpct::device_ext::is_native_atomic_supported
ggml/src/ggml-sycl/dpct/helper.hpp,895,style,functionConst,Technically the member function 'dpct::dev_mgr::device_count' can be const.,The member function 'dpct::dev_mgr::device_count' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,22,,dpct::dev_mgr::device_count
ggml/src/ggml-sycl/dpct/helper.hpp,1658,performance,functionStatic,Technically the member function 'dpct::detail::deprecated::usm_allocator::address' can be static (but you may consider moving to unnamed namespace).,The member function 'dpct::detail::deprecated::usm_allocator::address' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,25,,dpct::detail::deprecated::usm_allocator::address
ggml/src/ggml-sycl/dpct/helper.hpp,1659,performance,functionStatic,Technically the member function 'dpct::detail::deprecated::usm_allocator::address' can be static (but you may consider moving to unnamed namespace).,The member function 'dpct::detail::deprecated::usm_allocator::address' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,31,,dpct::detail::deprecated::usm_allocator::address
ggml/src/ggml-sycl/dpct/helper.hpp,1734,style,functionConst,Technically the member function 'dpct::detail::vectorized_binary::operator()' can be const.,The member function 'dpct::detail::vectorized_binary::operator()' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,25,,dpct::detail::vectorized_binary::operator()
ggml/src/ggml-sycl/dpct/helper.hpp,2834,style,functionConst,"Either there is a missing 'override', or the member function 'dpct::detail::device_memory::get_size' can be const.","Unless it overrides a base class member, the member function 'dpct::detail::device_memory::get_size' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?",398,20,,dpct::detail::device_memory::get_size
ggml/src/ggml-sycl/dpct/helper.hpp,271,style,noExplicitConstructor,Class 'generic_error_type' has a constructor with 1 argument that is not explicit.,"Class 'generic_error_type' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,13,,generic_error_type
ggml/src/ggml-sycl/dpct/helper.hpp,638,style,noExplicitConstructor,Class 'device_ext' has a constructor with 1 argument that is not explicit.,"Class 'device_ext' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,7,,device_ext
ggml/src/ggml-sycl/dpct/helper.hpp,2696,style,noExplicitConstructor,Class 'accessor' has a constructor with 1 argument that is not explicit.,"Class 'accessor' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,9,,accessor
ggml/src/ggml-sycl/dpct/helper.hpp,2720,style,noExplicitConstructor,Class 'accessor' has a constructor with 1 argument that is not explicit.,"Class 'accessor' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,9,,accessor
ggml/src/ggml-sycl/dpct/helper.hpp,2777,style,noExplicitConstructor,Class 'device_memory' has a constructor with 1 argument that is not explicit.,"Class 'device_memory' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,13,,device_memory
ggml/src/ggml-sycl/dpct/helper.hpp,2889,style,noExplicitConstructor,Class 'device_memory' has a constructor with 1 argument that is not explicit.,"Class 'device_memory' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,13,,device_memory
ggml/src/ggml-sycl/dpct/helper.hpp,389,performance,returnByReference,Function 'get_uuid()' should return member '_uuid' by const reference.,Function 'get_uuid()' should return member '_uuid' by const reference.,,39,,
ggml/src/ggml-sycl/dpct/helper.hpp,2754,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: _host_ptr","If memory allocation fails, then there is a possible null pointer dereference: _host_ptr",476,29,Null pointer dereference,_host_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2753,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: _host_ptr","If memory allocation fails, then there is a possible null pointer dereference: _host_ptr",476,29,"Assignment '_host_ptr=(value_t*)std::malloc(_size)', assigned value is 0",_host_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2753,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: _host_ptr","If memory allocation fails, then there is a possible null pointer dereference: _host_ptr",476,51,Assuming allocation function fails,_host_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2755,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: _host_ptr","If memory allocation fails, then there is a possible null pointer dereference: _host_ptr",476,29,Null pointer dereference,_host_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2753,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: _host_ptr","If memory allocation fails, then there is a possible null pointer dereference: _host_ptr",476,29,"Assignment '_host_ptr=(value_t*)std::malloc(_size)', assigned value is 0",_host_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2753,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: _host_ptr","If memory allocation fails, then there is a possible null pointer dereference: _host_ptr",476,51,Assuming allocation function fails,_host_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2766,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: _host_ptr","If memory allocation fails, then there is a possible null pointer dereference: _host_ptr",476,29,Null pointer dereference,_host_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2765,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: _host_ptr","If memory allocation fails, then there is a possible null pointer dereference: _host_ptr",476,29,"Assignment '_host_ptr=(value_t*)std::malloc(_size)', assigned value is 0",_host_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2765,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: _host_ptr","If memory allocation fails, then there is a possible null pointer dereference: _host_ptr",476,51,Assuming allocation function fails,_host_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2770,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: tmp_data","If memory allocation fails, then there is a possible null pointer dereference: tmp_data",476,33,Null pointer dereference,tmp_data
ggml/src/ggml-sycl/dpct/helper.hpp,2768,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: tmp_data","If memory allocation fails, then there is a possible null pointer dereference: tmp_data",476,38,Assuming container is not empty,tmp_data
ggml/src/ggml-sycl/dpct/helper.hpp,2767,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: tmp_data","If memory allocation fails, then there is a possible null pointer dereference: tmp_data",476,33,"Assignment 'tmp_data=_host_ptr', assigned value is 0",tmp_data
ggml/src/ggml-sycl/dpct/helper.hpp,2765,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: tmp_data","If memory allocation fails, then there is a possible null pointer dereference: tmp_data",476,29,"Assignment '_host_ptr=(value_t*)std::malloc(_size)', assigned value is 0",tmp_data
ggml/src/ggml-sycl/dpct/helper.hpp,2765,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: tmp_data","If memory allocation fails, then there is a possible null pointer dereference: tmp_data",476,51,Assuming allocation function fails,tmp_data
ggml/src/ggml-sycl/common.hpp,115,error,nullPointer,Null pointer dereference: ptr,Null pointer dereference: ptr,476,4,Null pointer dereference,ptr
ggml/src/ggml-sycl/common.hpp,114,error,nullPointer,Null pointer dereference: ptr,Null pointer dereference: ptr,476,14,"Assignment 'ptr=NULL', assigned value is 0",ptr
ggml/src/ggml-sycl/dpct/helper.hpp,1170,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-sycl/dpct/helper.hpp,1361,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-sycl/dpct/helper.hpp,1492,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-sycl/dpct/helper.hpp,1494,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-sycl/dpct/helper.hpp,1700,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-sycl/dpct/helper.hpp,1700,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,54,,
ggml/src/ggml-sycl/dpct/helper.hpp,2137,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-sycl/dpct/helper.hpp,2139,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-sycl/dpct/helper.hpp,2753,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/dpct/helper.hpp,2765,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/dpct/helper.hpp,2858,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-sycl/dpct/helper.hpp,2871,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-sycl/binbcast.cpp,269,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,14,,
ggml/src/ggml-sycl/binbcast.cpp,269,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-sycl/binbcast.cpp,269,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,70,,
ggml/src/ggml-sycl/binbcast.cpp,273,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,14,,
ggml/src/ggml-sycl/binbcast.cpp,273,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,47,,
ggml/src/ggml-sycl/binbcast.cpp,273,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,80,,
ggml/src/ggml-sycl/binbcast.cpp,278,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,14,,
ggml/src/ggml-sycl/binbcast.cpp,278,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,47,,
ggml/src/ggml-sycl/binbcast.cpp,278,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,75,,
ggml/src/ggml-sycl/binbcast.cpp,282,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,14,,
ggml/src/ggml-sycl/binbcast.cpp,282,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-sycl/binbcast.cpp,282,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,74,,
ggml/src/ggml-sycl/binbcast.cpp,286,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,14,,
ggml/src/ggml-sycl/binbcast.cpp,286,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-sycl/binbcast.cpp,286,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,74,,
ggml/src/ggml-sycl/common.hpp,249,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,15,,
ggml/src/ggml-sycl/common.hpp,257,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,15,,
ggml/src/ggml-sycl/dpct/helper.hpp,2847,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,40,,
ggml/src/ggml-sycl/dpct/helper.hpp,1437,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,13,,
ggml/src/ggml-sycl/dpct/helper.hpp,2082,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,9,,
ggml/src/ggml-sycl/binbcast.hpp,8,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-sycl/binbcast.cpp,104,style,variableScope,The scope of the variable 'nr' can be reduced.,"The scope of the variable 'nr' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,13,,nr
ggml/src/ggml-sycl/binbcast.cpp,108,style,variableScope,The scope of the variable 'cne0' can be reduced.,"The scope of the variable 'cne0' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,17,,cne0
ggml/src/ggml-sycl/dpct/helper.hpp,138,style,shadowVariable,Local variable 'e' shadows outer variable,Local variable 'e' shadows outer variable,398,43,Shadow variable,e
ggml/src/ggml-sycl/dpct/helper.hpp,132,style,shadowVariable,Local variable 'e' shadows outer variable,Local variable 'e' shadows outer variable,398,40,Shadowed declaration,e
ggml/src/ggml-sycl/dpct/helper.hpp,1509,style,shadowArgument,Local variable 'to_ptr' shadows outer argument,Local variable 'to_ptr' shadows outer argument,398,36,Shadow variable,to_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,1456,style,shadowArgument,Local variable 'to_ptr' shadows outer argument,Local variable 'to_ptr' shadows outer argument,398,43,Shadowed declaration,to_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,1510,style,shadowArgument,Local variable 'from_ptr' shadows outer argument,Local variable 'from_ptr' shadows outer argument,398,42,Shadow variable,from_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,1456,style,shadowArgument,Local variable 'from_ptr' shadows outer argument,Local variable 'from_ptr' shadows outer argument,398,63,Shadowed declaration,from_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2154,style,shadowArgument,Local variable 'to_ptr' shadows outer argument,Local variable 'to_ptr' shadows outer argument,398,32,Shadow variable,to_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2101,style,shadowArgument,Local variable 'to_ptr' shadows outer argument,Local variable 'to_ptr' shadows outer argument,398,39,Shadowed declaration,to_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2155,style,shadowArgument,Local variable 'from_ptr' shadows outer argument,Local variable 'from_ptr' shadows outer argument,398,38,Shadow variable,from_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,2101,style,shadowArgument,Local variable 'from_ptr' shadows outer argument,Local variable 'from_ptr' shadows outer argument,398,59,Shadowed declaration,from_ptr
ggml/src/ggml-sycl/binbcast.cpp,142,style,shadowArgument,Local variable 'ne0' shadows outer argument,Local variable 'ne0' shadows outer argument,398,21,Shadow variable,ne0
ggml/src/ggml-sycl/binbcast.cpp,94,style,shadowArgument,Local variable 'ne0' shadows outer argument,Local variable 'ne0' shadows outer argument,398,75,Shadowed declaration,ne0
ggml/src/ggml-sycl/binbcast.cpp,143,style,shadowArgument,Local variable 'ne1' shadows outer argument,Local variable 'ne1' shadows outer argument,398,21,Shadow variable,ne1
ggml/src/ggml-sycl/binbcast.cpp,94,style,shadowArgument,Local variable 'ne1' shadows outer argument,Local variable 'ne1' shadows outer argument,398,94,Shadowed declaration,ne1
ggml/src/ggml-sycl/binbcast.cpp,144,style,shadowArgument,Local variable 'ne2' shadows outer argument,Local variable 'ne2' shadows outer argument,398,21,Shadow variable,ne2
ggml/src/ggml-sycl/binbcast.cpp,94,style,shadowArgument,Local variable 'ne2' shadows outer argument,Local variable 'ne2' shadows outer argument,398,113,Shadowed declaration,ne2
ggml/src/ggml-sycl/binbcast.cpp,145,style,shadowArgument,Local variable 'ne3' shadows outer argument,Local variable 'ne3' shadows outer argument,398,21,Shadow variable,ne3
ggml/src/ggml-sycl/binbcast.cpp,95,style,shadowArgument,Local variable 'ne3' shadows outer argument,Local variable 'ne3' shadows outer argument,398,35,Shadowed declaration,ne3
ggml/src/ggml-sycl/binbcast.cpp,147,style,shadowArgument,Local variable 'ne10' shadows outer argument,Local variable 'ne10' shadows outer argument,398,21,Shadow variable,ne10
ggml/src/ggml-sycl/binbcast.cpp,93,style,shadowArgument,Local variable 'ne10' shadows outer argument,Local variable 'ne10' shadows outer argument,398,95,Shadowed declaration,ne10
ggml/src/ggml-sycl/binbcast.cpp,148,style,shadowArgument,Local variable 'ne11' shadows outer argument,Local variable 'ne11' shadows outer argument,398,21,Shadow variable,ne11
ggml/src/ggml-sycl/binbcast.cpp,93,style,shadowArgument,Local variable 'ne11' shadows outer argument,Local variable 'ne11' shadows outer argument,398,115,Shadowed declaration,ne11
ggml/src/ggml-sycl/binbcast.cpp,149,style,shadowArgument,Local variable 'ne12' shadows outer argument,Local variable 'ne12' shadows outer argument,398,21,Shadow variable,ne12
ggml/src/ggml-sycl/binbcast.cpp,94,style,shadowArgument,Local variable 'ne12' shadows outer argument,Local variable 'ne12' shadows outer argument,398,35,Shadowed declaration,ne12
ggml/src/ggml-sycl/binbcast.cpp,150,style,shadowArgument,Local variable 'ne13' shadows outer argument,Local variable 'ne13' shadows outer argument,398,21,Shadow variable,ne13
ggml/src/ggml-sycl/binbcast.cpp,94,style,shadowArgument,Local variable 'ne13' shadows outer argument,Local variable 'ne13' shadows outer argument,398,55,Shadowed declaration,ne13
ggml/src/ggml-sycl/binbcast.cpp,152,style,shadowArgument,Local variable 'nb0' shadows outer argument,Local variable 'nb0' shadows outer argument,398,20,Shadow variable,nb0
ggml/src/ggml-sycl/binbcast.cpp,96,style,shadowArgument,Local variable 'nb0' shadows outer argument,Local variable 'nb0' shadows outer argument,398,110,Shadowed declaration,nb0
ggml/src/ggml-sycl/binbcast.cpp,153,style,shadowArgument,Local variable 'nb1' shadows outer argument,Local variable 'nb1' shadows outer argument,398,20,Shadow variable,nb1
ggml/src/ggml-sycl/binbcast.cpp,97,style,shadowArgument,Local variable 'nb1' shadows outer argument,Local variable 'nb1' shadows outer argument,398,34,Shadowed declaration,nb1
ggml/src/ggml-sycl/binbcast.cpp,154,style,shadowArgument,Local variable 'nb2' shadows outer argument,Local variable 'nb2' shadows outer argument,398,20,Shadow variable,nb2
ggml/src/ggml-sycl/binbcast.cpp,97,style,shadowArgument,Local variable 'nb2' shadows outer argument,Local variable 'nb2' shadows outer argument,398,52,Shadowed declaration,nb2
ggml/src/ggml-sycl/binbcast.cpp,155,style,shadowArgument,Local variable 'nb3' shadows outer argument,Local variable 'nb3' shadows outer argument,398,20,Shadow variable,nb3
ggml/src/ggml-sycl/binbcast.cpp,97,style,shadowArgument,Local variable 'nb3' shadows outer argument,Local variable 'nb3' shadows outer argument,398,70,Shadowed declaration,nb3
ggml/src/ggml-sycl/binbcast.cpp,157,style,shadowArgument,Local variable 'nb00' shadows outer argument,Local variable 'nb00' shadows outer argument,398,20,Shadow variable,nb00
ggml/src/ggml-sycl/binbcast.cpp,95,style,shadowArgument,Local variable 'nb00' shadows outer argument,Local variable 'nb00' shadows outer argument,398,53,Shadowed declaration,nb00
ggml/src/ggml-sycl/binbcast.cpp,158,style,shadowArgument,Local variable 'nb01' shadows outer argument,Local variable 'nb01' shadows outer argument,398,20,Shadow variable,nb01
ggml/src/ggml-sycl/binbcast.cpp,95,style,shadowArgument,Local variable 'nb01' shadows outer argument,Local variable 'nb01' shadows outer argument,398,72,Shadowed declaration,nb01
ggml/src/ggml-sycl/binbcast.cpp,159,style,shadowArgument,Local variable 'nb02' shadows outer argument,Local variable 'nb02' shadows outer argument,398,20,Shadow variable,nb02
ggml/src/ggml-sycl/binbcast.cpp,95,style,shadowArgument,Local variable 'nb02' shadows outer argument,Local variable 'nb02' shadows outer argument,398,91,Shadowed declaration,nb02
ggml/src/ggml-sycl/binbcast.cpp,160,style,shadowArgument,Local variable 'nb03' shadows outer argument,Local variable 'nb03' shadows outer argument,398,20,Shadow variable,nb03
ggml/src/ggml-sycl/binbcast.cpp,95,style,shadowArgument,Local variable 'nb03' shadows outer argument,Local variable 'nb03' shadows outer argument,398,110,Shadowed declaration,nb03
ggml/src/ggml-sycl/binbcast.cpp,162,style,shadowArgument,Local variable 'nb10' shadows outer argument,Local variable 'nb10' shadows outer argument,398,20,Shadow variable,nb10
ggml/src/ggml-sycl/binbcast.cpp,96,style,shadowArgument,Local variable 'nb10' shadows outer argument,Local variable 'nb10' shadows outer argument,398,34,Shadowed declaration,nb10
ggml/src/ggml-sycl/binbcast.cpp,163,style,shadowArgument,Local variable 'nb11' shadows outer argument,Local variable 'nb11' shadows outer argument,398,20,Shadow variable,nb11
ggml/src/ggml-sycl/binbcast.cpp,96,style,shadowArgument,Local variable 'nb11' shadows outer argument,Local variable 'nb11' shadows outer argument,398,53,Shadowed declaration,nb11
ggml/src/ggml-sycl/binbcast.cpp,164,style,shadowArgument,Local variable 'nb12' shadows outer argument,Local variable 'nb12' shadows outer argument,398,20,Shadow variable,nb12
ggml/src/ggml-sycl/binbcast.cpp,96,style,shadowArgument,Local variable 'nb12' shadows outer argument,Local variable 'nb12' shadows outer argument,398,72,Shadowed declaration,nb12
ggml/src/ggml-sycl/binbcast.cpp,165,style,shadowArgument,Local variable 'nb13' shadows outer argument,Local variable 'nb13' shadows outer argument,398,20,Shadow variable,nb13
ggml/src/ggml-sycl/binbcast.cpp,96,style,shadowArgument,Local variable 'nb13' shadows outer argument,Local variable 'nb13' shadows outer argument,398,91,Shadowed declaration,nb13
ggml/src/ggml-sycl/dpct/helper.hpp,1658,performance,passedByValue,Function parameter 'r' should be passed by const reference.,Parameter 'r' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,43,Function parameter 'r' should be passed by const reference.,r
ggml/src/ggml-sycl/dpct/helper.hpp,1659,performance,passedByValue,Function parameter 'r' should be passed by const reference.,Parameter 'r' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,55,Function parameter 'r' should be passed by const reference.,r
ggml/src/ggml-sycl/dpct/helper.hpp,102,style,constParameterReference,Parameter 'queue' can be declared as reference to const,Parameter 'queue' can be declared as reference to const,398,46,Parameter 'queue' can be declared as reference to const,queue
ggml/src/ggml-sycl/dpct/helper.hpp,900,style,constVariableReference,Variable 'dev_item' can be declared as reference to const,Variable 'dev_item' can be declared as reference to const,398,24,Variable 'dev_item' can be declared as reference to const,dev_item
ggml/src/ggml-sycl/dpct/helper.hpp,1020,style,constParameterReference,Parameter 'backend' can be declared as reference to const,Parameter 'backend' can be declared as reference to const,398,56,Parameter 'backend' can be declared as reference to const,backend
ggml/src/ggml-sycl/dpct/helper.hpp,1070,style,constVariableReference,Variable 'key' can be declared as reference to const,Variable 'key' can be declared as reference to const,398,24,Variable 'key' can be declared as reference to const,key
ggml/src/ggml-sycl/dpct/helper.hpp,2681,style,constParameterReference,Parameter 'q' can be declared as reference to const,Parameter 'q' can be declared as reference to const,398,58,Parameter 'q' can be declared as reference to const,q
ggml/src/ggml-sycl/dpct/helper.hpp,460,style,constParameter,Parameter 'max_nd_range_size' can be declared as const array,Parameter 'max_nd_range_size' can be declared as const array,398,40,Parameter 'max_nd_range_size' can be declared as const array,max_nd_range_size
ggml/src/ggml-sycl/dpct/helper.hpp,1395,style,constParameterPointer,Parameter 'to_ptr' can be declared as pointer to const,Parameter 'to_ptr' can be declared as pointer to const,398,79,Parameter 'to_ptr' can be declared as pointer to const,to_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,1720,style,constParameterPointer,Parameter 'c' can be declared as pointer to const,Parameter 'c' can be declared as pointer to const,398,53,Parameter 'c' can be declared as pointer to const,c
ggml/src/ggml-sycl/dpct/helper.hpp,1790,style,constParameterPointer,Parameter 'c' can be declared as pointer to const,Parameter 'c' can be declared as pointer to const,398,63,Parameter 'c' can be declared as pointer to const,c
ggml/src/ggml-sycl/dpct/helper.hpp,250,warning,containerOutOfBounds,Either the condition 'i<ver.size()' is redundant or 'i' can have the value greater or equal to ver.size(). Expression 'ver[i]' causes access out of bounds.,Either the condition 'i<ver.size()' is redundant or 'i' can have the value greater or equal to ver.size(). Expression 'ver[i]' causes access out of bounds.,398,36,Access out of bounds,ver
ggml/src/ggml-sycl/dpct/helper.hpp,245,warning,containerOutOfBounds,Either the condition 'i<ver.size()' is redundant or 'i' can have the value greater or equal to ver.size(). Expression 'ver[i]' causes access out of bounds.,Either the condition 'i<ver.size()' is redundant or 'i' can have the value greater or equal to ver.size(). Expression 'ver[i]' causes access out of bounds.,398,22,Assuming that condition 'i<ver.size()' is not redundant,ver
ggml/src/ggml-sycl/dpct/helper.hpp,259,warning,containerOutOfBounds,Either the condition 'i<ver.size()' is redundant or 'i' can have the value ver.size(). Expression 'ver[i]' causes access out of bounds.,Either the condition 'i<ver.size()' is redundant or 'i' can have the value ver.size(). Expression 'ver[i]' causes access out of bounds.,398,38,Access out of bounds,ver
ggml/src/ggml-sycl/dpct/helper.hpp,258,warning,containerOutOfBounds,Either the condition 'i<ver.size()' is redundant or 'i' can have the value ver.size(). Expression 'ver[i]' causes access out of bounds.,Either the condition 'i<ver.size()' is redundant or 'i' can have the value ver.size(). Expression 'ver[i]' causes access out of bounds.,398,15,"i is incremented', new value is symbolic=ver.size()",ver
ggml/src/ggml-sycl/dpct/helper.hpp,256,warning,containerOutOfBounds,Either the condition 'i<ver.size()' is redundant or 'i' can have the value ver.size(). Expression 'ver[i]' causes access out of bounds.,Either the condition 'i<ver.size()' is redundant or 'i' can have the value ver.size(). Expression 'ver[i]' causes access out of bounds.,398,19,Assuming that condition 'i<ver.size()' is not redundant,ver
ggml/src/ggml-sycl/common.hpp,513,performance,stlcstrStream,Passing the result of c_str() to a stream is slow and redundant.,Passing a const char* to a stream requires a call to strlen(). Solve that by directly passing the string.,704,8,,
ggml/src/ggml-sycl/dpct/helper.hpp,609,style,useStlAlgorithm,Consider using std::min_element algorithm instead of a raw loop.,Consider using std::min_element algorithm instead of a raw loop.,398,36,,
ggml/src/ggml-sycl/dpct/helper.hpp,1074,style,useStlAlgorithm,Consider using std::copy algorithm instead of a raw loop.,Consider using std::copy algorithm instead of a raw loop.,398,35,,
ggml/src/ggml-sycl/dpct/helper.hpp,34,information,missingIncludeSystem,Include file: <sys/mman.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/mman.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,45,information,missingIncludeSystem,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,46,information,missingIncludeSystem,Include file: <sys/syscall.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/syscall.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/dpct/helper.hpp,1167,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-sycl/common.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/common.cpp,15,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-sycl/common.cpp,16,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-sycl/common.cpp,29,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/src/ggml-sycl/concat.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/concat.cpp,163,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/concat.cpp,166,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/concat.cpp,167,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/concat.cpp,169,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/concat.cpp,185,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-sycl/concat.cpp,185,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,69,,
ggml/src/ggml-sycl/concat.cpp,185,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,96,,
ggml/src/ggml-sycl/concat.cpp,144,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/src/ggml-sycl/concat.cpp,146,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/src/ggml-sycl/concat.cpp,150,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,22,,
ggml/src/ggml-sycl/concat.cpp,144,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,19,,
ggml/src/ggml-sycl/concat.cpp,146,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,19,,
ggml/src/ggml-sycl/concat.cpp,150,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,22,,
ggml/src/ggml-sycl/conv.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/conv.cpp,78,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/conv.cpp,79,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/conv.cpp,81,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-sycl/conv.cpp,90,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/convert.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/dequantize.hpp,24,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,49,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-sycl/dequantize.hpp,51,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-sycl/dequantize.hpp,70,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,94,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,121,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,148,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,182,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,211,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,15,,
ggml/src/ggml-sycl/dequantize.hpp,212,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-sycl/dequantize.hpp,242,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,262,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,298,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,385,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,450,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,498,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dequantize.hpp,559,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-sycl/dequantize.hpp,581,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-sycl/dequantize.hpp,609,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/dequantize.hpp,633,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/dequantize.hpp,661,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-sycl/dequantize.hpp,692,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/dequantize.hpp,722,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/dequantize.hpp,752,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/dequantize.hpp,785,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/dequantize.hpp,807,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/dequantize.hpp,212,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,18,,
ggml/src/ggml-sycl/dequantize.hpp,580,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,21,,i
ggml/src/ggml-sycl/dequantize.hpp,581,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,29,,x
ggml/src/ggml-sycl/dequantize.hpp,583,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,23,,tid
ggml/src/ggml-sycl/dequantize.hpp,580,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,19,,i
ggml/src/ggml-sycl/dequantize.hpp,581,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,27,,x
ggml/src/ggml-sycl/dequantize.hpp,583,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,19,,tid
ggml/src/ggml-sycl/dequantize.hpp,608,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,21,,i
ggml/src/ggml-sycl/dequantize.hpp,609,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,28,,x
ggml/src/ggml-sycl/dequantize.hpp,611,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,23,,tid
ggml/src/ggml-sycl/dequantize.hpp,608,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,19,,i
ggml/src/ggml-sycl/dequantize.hpp,609,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,26,,x
ggml/src/ggml-sycl/dequantize.hpp,611,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,19,,tid
ggml/src/ggml-sycl/dequantize.hpp,632,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,21,,i
ggml/src/ggml-sycl/dequantize.hpp,633,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,27,,x
ggml/src/ggml-sycl/dequantize.hpp,635,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,23,,tid
ggml/src/ggml-sycl/dequantize.hpp,632,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,19,,i
ggml/src/ggml-sycl/dequantize.hpp,633,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,25,,x
ggml/src/ggml-sycl/dequantize.hpp,635,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,19,,tid
ggml/src/ggml-sycl/dequantize.hpp,660,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,21,,i
ggml/src/ggml-sycl/dequantize.hpp,661,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,29,,x
ggml/src/ggml-sycl/dequantize.hpp,663,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,23,,tid
ggml/src/ggml-sycl/dequantize.hpp,660,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,19,,i
ggml/src/ggml-sycl/dequantize.hpp,661,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,27,,x
ggml/src/ggml-sycl/dequantize.hpp,663,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,19,,tid
ggml/src/ggml-sycl/dequantize.hpp,691,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,21,,i
ggml/src/ggml-sycl/dequantize.hpp,692,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,27,,x
ggml/src/ggml-sycl/dequantize.hpp,694,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,23,,tid
ggml/src/ggml-sycl/dequantize.hpp,691,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,19,,i
ggml/src/ggml-sycl/dequantize.hpp,692,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,25,,x
ggml/src/ggml-sycl/dequantize.hpp,694,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,19,,tid
ggml/src/ggml-sycl/dequantize.hpp,721,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,21,,i
ggml/src/ggml-sycl/dequantize.hpp,722,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,27,,x
ggml/src/ggml-sycl/dequantize.hpp,724,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,23,,tid
ggml/src/ggml-sycl/dequantize.hpp,721,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,19,,i
ggml/src/ggml-sycl/dequantize.hpp,722,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,25,,x
ggml/src/ggml-sycl/dequantize.hpp,724,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,19,,tid
ggml/src/ggml-sycl/dequantize.hpp,751,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,21,,i
ggml/src/ggml-sycl/dequantize.hpp,752,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,27,,x
ggml/src/ggml-sycl/dequantize.hpp,754,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,23,,tid
ggml/src/ggml-sycl/dequantize.hpp,751,style,unreadVariable,Variable 'i' is assigned a value that is never used.,Variable 'i' is assigned a value that is never used.,563,19,,i
ggml/src/ggml-sycl/dequantize.hpp,752,style,unreadVariable,Variable 'x' is assigned a value that is never used.,Variable 'x' is assigned a value that is never used.,563,25,,x
ggml/src/ggml-sycl/dequantize.hpp,754,style,unreadVariable,Variable 'tid' is assigned a value that is never used.,Variable 'tid' is assigned a value that is never used.,563,19,,tid
ggml/src/ggml-sycl/cpy.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/cpy.hpp,5,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/cpy.cpp,3,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/cpy.cpp,6,information,missingInclude,"Include file: ""ggml-sycl/common.hpp"" not found.","Include file: ""ggml-sycl/common.hpp"" not found.",,0,,
ggml/src/ggml-sycl/cpy.cpp,7,information,missingInclude,"Include file: ""ggml-sycl/presets.hpp"" not found.","Include file: ""ggml-sycl/presets.hpp"" not found.",,0,,
ggml/src/ggml-sycl/cpy.cpp,8,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-sycl/cpy.cpp,526,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-sycl/cpy.cpp,527,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-sycl/cpy.hpp,29,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.hpp,30,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.hpp,52,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.hpp,53,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.hpp,84,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.hpp,85,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.hpp,116,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.hpp,117,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.hpp,151,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.hpp,152,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.hpp,185,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/cpy.hpp,186,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/cpy.cpp,12,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.cpp,13,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.cpp,19,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.cpp,20,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/cpy.cpp,26,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,31,,
ggml/src/ggml-sycl/cpy.cpp,27,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,31,,
ggml/src/ggml-sycl/cpy.cpp,33,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,31,,
ggml/src/ggml-sycl/cpy.cpp,34,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,31,,
ggml/src/ggml-sycl/cpy.cpp,40,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,28,,
ggml/src/ggml-sycl/cpy.cpp,41,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,28,,
ggml/src/ggml-sycl/cpy.cpp,47,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,28,,
ggml/src/ggml-sycl/cpy.cpp,48,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,28,,
ggml/src/ggml-sycl/cpy.cpp,92,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,21,,
ggml/src/ggml-sycl/cpy.cpp,105,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,21,,
ggml/src/ggml-sycl/cpy.cpp,85,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/src/ggml-sycl/cpy.cpp,86,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,16,,
ggml/src/ggml-sycl/cpy.hpp,29,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,26,,
ggml/src/ggml-sycl/cpy.hpp,52,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,26,,
ggml/src/ggml-sycl/cpy.hpp,84,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,26,,
ggml/src/ggml-sycl/cpy.hpp,116,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,26,,
ggml/src/ggml-sycl/cpy.hpp,151,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,26,,
ggml/src/ggml-sycl/cpy.hpp,185,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,27,,
ggml/src/ggml-sycl/cpy.cpp,12,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,26,,
ggml/src/ggml-sycl/cpy.cpp,13,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,26,,
ggml/src/ggml-sycl/cpy.cpp,19,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,26,,
ggml/src/ggml-sycl/cpy.cpp,34,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,31,,
ggml/src/ggml-sycl/cpy.cpp,92,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,21,,
ggml/src/ggml-sycl/cpy.cpp,105,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,21,,
ggml/src/ggml-sycl/dmmv.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/dmmv.cpp,7,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/dmmv.cpp,15,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-sycl/dmmv.cpp,242,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dmmv.cpp,312,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/dmmv.cpp,366,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dmmv.cpp,484,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dmmv.cpp,589,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/dmmv.cpp,635,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dmmv.cpp,764,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/dmmv.cpp,1103,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-sycl/dmmv.cpp,1108,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-sycl/dmmv.cpp,1109,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,18,,
ggml/src/ggml-sycl/dmmv.cpp,1134,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-sycl/dmmv.cpp,1135,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,18,,
ggml/src/ggml-sycl/dmmv.cpp,120,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/dmmv.cpp,136,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,39,,
ggml/src/ggml-sycl/dmmv.cpp,136,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,64,,
ggml/src/ggml-sycl/dmmv.cpp,167,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,39,,
ggml/src/ggml-sycl/dmmv.cpp,167,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,64,,
ggml/src/ggml-sycl/dmmv.cpp,305,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-sycl/dmmv.cpp,582,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,25,,
ggml/src/ggml-sycl/element_wise.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/element_wise.cpp,2,information,missingInclude,"Include file: ""ggml-sycl/presets.hpp"" not found.","Include file: ""ggml-sycl/presets.hpp"" not found.",,0,,
ggml/src/ggml-sycl/element_wise.cpp,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-sycl/element_wise.hpp,5,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-sycl/element_wise.hpp,6,information,missingIncludeSystem,Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/element_wise.cpp,496,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/element_wise.cpp,533,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-sycl/element_wise.cpp,534,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,34,,
ggml/src/ggml-sycl/element_wise.cpp,543,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/element_wise.cpp,934,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/src/ggml-sycl/element_wise.cpp,328,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,19,,
ggml/src/ggml-sycl/element_wise.cpp,328,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,31,,
ggml/src/ggml-sycl/getrows.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/getrows.cpp,13,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-sycl/getrows.cpp,179,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/getrows.cpp,183,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,69,,
ggml/src/ggml-sycl/getrows.cpp,184,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-sycl/getrows.cpp,187,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,69,,
ggml/src/ggml-sycl/getrows.cpp,188,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-sycl/getrows.cpp,191,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,94,,
ggml/src/ggml-sycl/getrows.cpp,192,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-sycl/getrows.cpp,195,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,94,,
ggml/src/ggml-sycl/getrows.cpp,196,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-sycl/getrows.cpp,199,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,94,,
ggml/src/ggml-sycl/getrows.cpp,200,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-sycl/getrows.cpp,203,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,94,,
ggml/src/ggml-sycl/getrows.cpp,204,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-sycl/getrows.cpp,207,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,94,,
ggml/src/ggml-sycl/getrows.cpp,208,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-sycl/getrows.cpp,48,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/getrows.cpp,91,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,31,,
ggml/src/ggml-sycl/getrows.cpp,91,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,48,,
ggml/src/ggml-sycl/ggml-sycl.cpp,13,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,14,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,15,information,missingIncludeSystem,Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <atomic> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,16,information,missingIncludeSystem,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,17,information,missingIncludeSystem,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,18,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,19,information,missingIncludeSystem,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,20,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,21,information,missingIncludeSystem,Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,22,information,missingIncludeSystem,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,23,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,24,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,25,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,26,information,missingIncludeSystem,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,27,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,28,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,29,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,30,information,missingIncludeSystem,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,32,information,missingIncludeSystem,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,33,information,missingIncludeSystem,Include file: <sycl/half_type.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/half_type.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,35,information,missingInclude,"Include file: ""ggml-sycl.h"" not found.","Include file: ""ggml-sycl.h"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,36,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,37,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,39,information,missingInclude,"Include file: ""ggml-sycl/backend.hpp"" not found.","Include file: ""ggml-sycl/backend.hpp"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,40,information,missingInclude,"Include file: ""ggml-sycl/common.hpp"" not found.","Include file: ""ggml-sycl/common.hpp"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,41,information,missingInclude,"Include file: ""ggml-sycl/element_wise.hpp"" not found.","Include file: ""ggml-sycl/element_wise.hpp"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,42,information,missingInclude,"Include file: ""ggml-sycl/presets.hpp"" not found.","Include file: ""ggml-sycl/presets.hpp"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,43,information,missingInclude,"Include file: ""ggml-sycl/gemm.hpp"" not found.","Include file: ""ggml-sycl/gemm.hpp"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,44,information,missingInclude,"Include file: ""ggml-sycl/set_rows.hpp"" not found.","Include file: ""ggml-sycl/set_rows.hpp"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,45,information,missingInclude,"Include file: ""ggml-sycl/sycl_hw.hpp"" not found.","Include file: ""ggml-sycl/sycl_hw.hpp"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,46,information,missingInclude,"Include file: ""ggml-sycl/getrows.hpp"" not found.","Include file: ""ggml-sycl/getrows.hpp"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,47,information,missingInclude,"Include file: ""ggml-sycl/quantize.hpp"" not found.","Include file: ""ggml-sycl/quantize.hpp"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,48,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1960,style,knownConditionTrueFalse,Condition 'use_fp16' is always false,Condition 'use_fp16' is always false,570,75,Condition 'use_fp16' is always false,
ggml/src/ggml-sycl/ggml-sycl.cpp,1958,style,knownConditionTrueFalse,Condition 'use_fp16' is always false,Condition 'use_fp16' is always false,570,21,"Assignment 'use_fp16=false', assigned value is 0",
ggml/src/ggml-sycl/ggml-sycl.cpp,852,portability,invalidPrintfArgType_uint,%lu in format string (no. 2) requires 'unsigned long' but the argument type is 'size_t {aka unsigned long}'.,%lu in format string (no. 2) requires 'unsigned long' but the argument type is 'size_t {aka unsigned long}'.,686,13,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1120,error,leakReturnValNotUsed,Return value of allocation function 'new' is not stored.,Return value of allocation function 'new' is not stored.,771,26,,new
ggml/src/ggml-sycl/ggml-sycl.cpp,398,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: host_buf","If memory allocation fails, then there is a possible null pointer dereference: host_buf",476,12,Null pointer dereference,host_buf
ggml/src/ggml-sycl/ggml-sycl.cpp,397,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: host_buf","If memory allocation fails, then there is a possible null pointer dereference: host_buf",476,23,"Assignment 'host_buf=(char*)malloc(size)', assigned value is 0",host_buf
ggml/src/ggml-sycl/ggml-sycl.cpp,397,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: host_buf","If memory allocation fails, then there is a possible null pointer dereference: host_buf",476,38,Assuming allocation function fails,host_buf
ggml/src/ggml-sycl/ggml-sycl.cpp,330,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,342,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,351,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,371,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-sycl/ggml-sycl.cpp,390,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,397,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/src/ggml-sycl/ggml-sycl.cpp,399,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,49,,
ggml/src/ggml-sycl/ggml-sycl.cpp,418,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,424,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/ggml-sycl.cpp,435,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/src/ggml-sycl/ggml-sycl.cpp,436,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/ggml-sycl.cpp,437,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,18,,
ggml/src/ggml-sycl/ggml-sycl.cpp,451,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,54,,
ggml/src/ggml-sycl/ggml-sycl.cpp,452,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,54,,
ggml/src/ggml-sycl/ggml-sycl.cpp,508,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,530,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,550,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,582,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,51,,
ggml/src/ggml-sycl/ggml-sycl.cpp,590,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,56,,
ggml/src/ggml-sycl/ggml-sycl.cpp,596,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-sycl/ggml-sycl.cpp,793,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-sycl/ggml-sycl.cpp,811,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-sycl/ggml-sycl.cpp,812,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,62,,
ggml/src/ggml-sycl/ggml-sycl.cpp,848,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-sycl/ggml-sycl.cpp,900,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-sycl/ggml-sycl.cpp,901,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,62,,
ggml/src/ggml-sycl/ggml-sycl.cpp,905,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,37,,
ggml/src/ggml-sycl/ggml-sycl.cpp,925,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-sycl/ggml-sycl.cpp,956,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-sycl/ggml-sycl.cpp,957,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,62,,
ggml/src/ggml-sycl/ggml-sycl.cpp,961,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,37,,
ggml/src/ggml-sycl/ggml-sycl.cpp,981,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1046,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,57,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1242,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1320,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1382,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1439,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1859,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,19,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1865,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,19,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1873,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1878,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,19,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1883,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1905,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,47,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1906,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1987,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,19,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2035,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,67,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2072,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2144,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2174,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2189,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2190,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2597,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2598,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2634,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2635,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2911,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2912,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2913,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,17,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2994,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,18,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2999,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3023,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3026,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3055,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3060,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3088,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3167,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,13,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3324,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3334,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3335,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3336,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3356,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3383,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,47,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3828,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3834,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3847,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3853,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3868,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3874,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,15,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3885,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3914,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,44,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4031,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,9,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4102,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4107,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4112,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4146,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4151,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4434,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,56,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4435,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,51,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4536,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4541,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,43,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2272,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2273,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2289,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,66,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2355,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2361,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2383,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2450,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,57,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2499,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,56,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2508,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,56,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1973,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,44,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2034,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,66,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3257,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,31,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3279,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,39,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3280,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,35,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3298,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,40,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3299,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,32,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2499,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2508,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1524,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,20,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2034,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,66,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3279,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,39,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3280,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,35,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3298,portability,invalidPointerCast,Casting between const signed char * and const float * which have an incompatible binary data representation.,Casting between const signed char * and const float * which have an incompatible binary data representation.,704,40,,
ggml/src/ggml-sycl/ggml-sycl.cpp,3299,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,32,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2499,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,45,,
ggml/src/ggml-sycl/ggml-sycl.cpp,2508,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,45,,
ggml/src/ggml-sycl/ggml-sycl.cpp,186,style,redundantInitialization,Redundant initialization for 'user_number'. The initialized value is overwritten before it is read.,Redundant initialization for 'user_number'. The initialized value is overwritten before it is read.,563,21,user_number is overwritten,user_number
ggml/src/ggml-sycl/ggml-sycl.cpp,181,style,redundantInitialization,Redundant initialization for 'user_number'. The initialized value is overwritten before it is read.,Redundant initialization for 'user_number'. The initialized value is overwritten before it is read.,563,21,user_number is initialized,user_number
ggml/src/ggml-sycl/ggml-sycl.cpp,188,style,redundantAssignment,Variable 'user_number' is assigned an expression that holds the same value.,Variable 'user_number' is assigned an expression that holds the same value.,563,9,,user_number
ggml/src/ggml-sycl/ggml-sycl.cpp,181,style,redundantAssignment,Variable 'user_number' is assigned an expression that holds the same value.,Variable 'user_number' is assigned an expression that holds the same value.,563,21,user_number is assigned 'default_val' here.,user_number
ggml/src/ggml-sycl/ggml-sycl.cpp,499,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-sycl/ggml-sycl.cpp,613,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-sycl/ggml-sycl.cpp,619,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-sycl/ggml-sycl.cpp,634,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-sycl/ggml-sycl.cpp,801,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1023,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1042,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1075,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-sycl/ggml-sycl.cpp,1132,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4276,style,duplicateBreak,"Consecutive return, break, continue, goto or throw statements are unnecessary.","Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed.",561,13,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4456,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-sycl/ggml-sycl.cpp,4572,style,variableScope,The scope of the variable 'initialized' can be reduced.,"The scope of the variable 'initialized' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,17,,initialized
ggml/src/ggml-sycl/ggml-sycl.cpp,917,style,shadowArgument,Local variable 'size' shadows outer argument,Local variable 'size' shadows outer argument,398,16,Shadow variable,size
ggml/src/ggml-sycl/ggml-sycl.cpp,892,style,shadowArgument,Local variable 'size' shadows outer argument,Local variable 'size' shadows outer argument,398,65,Shadowed declaration,size
ggml/src/ggml-sycl/ggml-sycl.cpp,973,style,shadowArgument,Local variable 'size' shadows outer argument,Local variable 'size' shadows outer argument,398,16,Shadow variable,size
ggml/src/ggml-sycl/ggml-sycl.cpp,948,style,shadowArgument,Local variable 'size' shadows outer argument,Local variable 'size' shadows outer argument,398,65,Shadowed declaration,size
ggml/src/ggml-sycl/ggml-sycl.cpp,3109,style,constParameterReference,Parameter 'ctx' can be declared as reference to const,Parameter 'ctx' can be declared as reference to const,398,62,Parameter 'ctx' can be declared as reference to const,ctx
ggml/src/ggml-sycl/ggml-sycl.cpp,3168,style,constVariableReference,Variable 'tensor_split' can be declared as reference to const,Variable 'tensor_split' can be declared as reference to const,398,16,Variable 'tensor_split' can be declared as reference to const,tensor_split
ggml/src/ggml-sycl/ggml-sycl.cpp,180,style,constVariablePointer,Variable 'user_device_string' can be declared as pointer to const,Variable 'user_device_string' can be declared as pointer to const,398,11,Variable 'user_device_string' can be declared as pointer to const,user_device_string
ggml/src/ggml-sycl/ggml-sycl.cpp,342,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,40,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-sycl/ggml-sycl.cpp,2289,style,constVariablePointer,Variable 'buft_ctx' can be declared as pointer to const,Variable 'buft_ctx' can be declared as pointer to const,398,55,Variable 'buft_ctx' can be declared as pointer to const,buft_ctx
ggml/src/ggml-sycl/ggml-sycl.cpp,2596,style,constVariablePointer,Variable 'src0_ddq' can be declared as pointer to const,Variable 'src0_ddq' can be declared as pointer to const,398,13,Variable 'src0_ddq' can be declared as pointer to const,src0_ddq
ggml/src/ggml-sycl/ggml-sycl.cpp,2597,style,constVariablePointer,Variable 'src1_ddf' can be declared as pointer to const,Variable 'src1_ddf' can be declared as pointer to const,398,13,Variable 'src1_ddf' can be declared as pointer to const,src1_ddf
ggml/src/ggml-sycl/ggml-sycl.cpp,2633,style,constVariablePointer,Variable 'src0_ddq' can be declared as pointer to const,Variable 'src0_ddq' can be declared as pointer to const,398,13,Variable 'src0_ddq' can be declared as pointer to const,src0_ddq
ggml/src/ggml-sycl/ggml-sycl.cpp,2634,style,constVariablePointer,Variable 'src1_ddf' can be declared as pointer to const,Variable 'src1_ddf' can be declared as pointer to const,398,13,Variable 'src1_ddf' can be declared as pointer to const,src1_ddf
ggml/src/ggml-sycl/ggml-sycl.cpp,3117,style,constParameterPointer,Parameter 'dst' can be declared as pointer to const,Parameter 'dst' can be declared as pointer to const,398,43,Parameter 'dst' can be declared as pointer to const,dst
ggml/src/ggml-sycl/ggml-sycl.cpp,3150,style,constParameterPointer,Parameter 'dst' can be declared as pointer to const,Parameter 'dst' can be declared as pointer to const,398,110,Parameter 'dst' can be declared as pointer to const,dst
ggml/src/ggml-sycl/ggml-sycl.cpp,3155,style,constParameterPointer,Parameter 'dst' can be declared as pointer to const,Parameter 'dst' can be declared as pointer to const,398,101,Parameter 'dst' can be declared as pointer to const,dst
ggml/src/ggml-sycl/ggml-sycl.cpp,3229,style,constVariablePointer,Variable 'extra' can be declared as pointer to const,Variable 'extra' can be declared as pointer to const,398,33,Variable 'extra' can be declared as pointer to const,extra
ggml/src/ggml-sycl/ggml-sycl.cpp,4146,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,40,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-sycl/ggml-sycl.cpp,4151,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,40,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-sycl/ggml-sycl.cpp,4434,style,constVariablePointer,Variable 'buft_ctx' can be declared as pointer to const,Variable 'buft_ctx' can be declared as pointer to const,398,45,Variable 'buft_ctx' can be declared as pointer to const,buft_ctx
ggml/src/ggml-sycl/ggml-sycl.cpp,4435,style,constVariablePointer,Variable 'sycl_ctx' can be declared as pointer to const,Variable 'sycl_ctx' can be declared as pointer to const,398,40,Variable 'sycl_ctx' can be declared as pointer to const,sycl_ctx
ggml/src/ggml-sycl/ggml-sycl.cpp,3180,style,unreadVariable,Variable 'min_compute_capability' is assigned a value that is never used.,Variable 'min_compute_capability' is assigned a value that is never used.,563,32,,min_compute_capability
ggml/src/ggml-sycl/ggml-sycl.cpp,1960,style,knownConditionTrueFalse,Condition 'use_fp16' is always true,Condition 'use_fp16' is always true,571,75,Condition 'use_fp16' is always true,
ggml/src/ggml-sycl/ggml-sycl.cpp,1956,style,knownConditionTrueFalse,Condition 'use_fp16' is always true,Condition 'use_fp16' is always true,571,21,"Assignment 'use_fp16=true', assigned value is 1",
ggml/src/ggml-sycl/ggml-sycl.cpp,402,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,49,,
ggml/src/ggml-sycl/gla.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/gla.cpp,1,information,missingIncludeSystem,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/gla.cpp,99,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-sycl/gla.cpp,47,style,cstyleCast,C-style reference casting,"C-style reference casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,47,,
ggml/src/ggml-sycl/gla.cpp,48,style,cstyleCast,C-style reference casting,"C-style reference casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,47,,
ggml/src/ggml-sycl/gla.cpp,49,style,cstyleCast,C-style reference casting,"C-style reference casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,47,,
ggml/src/ggml-sycl/gla.cpp,50,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,47,,
ggml/src/ggml-sycl/im2col.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/im2col.cpp,15,information,missingIncludeSystem,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/im2col.cpp,16,information,missingIncludeSystem,Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/im2col.cpp,18,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-sycl/im2col.cpp,104,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/im2col.cpp,105,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/im2col.cpp,106,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/im2col.cpp,107,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/im2col.cpp,108,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/im2col.cpp,109,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/im2col.cpp,111,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/im2col.cpp,130,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/im2col.cpp,130,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,53,,
ggml/src/ggml-sycl/im2col.cpp,133,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/im2col.cpp,133,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,53,,
ggml/src/ggml-sycl/mmq.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/vecdotq.hpp,17,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-sycl/quants.hpp,17,information,missingIncludeSystem,Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/quants.hpp,19,information,missingInclude,"Include file: ""ggml-common.h"" not found.","Include file: ""ggml-common.h"" not found.",,0,,
ggml/src/ggml-sycl/quants.hpp,20,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-sycl/vecdotq.hpp,350,style,functionConst,Technically the member function 'reorder_vec_dot_q_sycl < GGML_TYPE_Q4_K >::operator()' can be const.,The member function 'reorder_vec_dot_q_sycl < GGML_TYPE_Q4_K >::operator()' can be made a const function. Making this function 'const' should not cause compiler errors. Even though the function can be made const function technically it may not make sense conceptually. Think about your design and the task of the function first - is it a function that must not change object internal state?,398,27,,reorder_vec_dot_q_sycl < GGML_TYPE_Q4_K >::operator()
ggml/src/ggml-sycl/vecdotq.hpp,336,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/vecdotq.hpp,432,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,36,,
ggml/src/ggml-sycl/vecdotq.hpp,654,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/vecdotq.hpp,673,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/vecdotq.hpp,692,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/vecdotq.hpp,713,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/vecdotq.hpp,734,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/vecdotq.hpp,753,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/vecdotq.hpp,777,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/vecdotq.hpp,805,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/vecdotq.hpp,808,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-sycl/vecdotq.hpp,809,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-sycl/vecdotq.hpp,865,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/vecdotq.hpp,873,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/src/ggml-sycl/vecdotq.hpp,874,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/src/ggml-sycl/vecdotq.hpp,882,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-sycl/vecdotq.hpp,900,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/vecdotq.hpp,954,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,32,,
ggml/src/ggml-sycl/vecdotq.hpp,1255,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,31,,
ggml/src/ggml-sycl/vecdotq.hpp,1257,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/vecdotq.hpp,1258,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/vecdotq.hpp,1260,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,68,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,153,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,233,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,337,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,435,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,510,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,646,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,753,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,801,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,846,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,936,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,992,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,1080,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/mmq.cpp,1211,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmq.cpp,1212,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/vecdotq.hpp,25,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,7,,
ggml/src/ggml-sycl/vecdotq.hpp,39,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,7,,
ggml/src/ggml-sycl/vecdotq.hpp,53,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,7,,
ggml/src/ggml-sycl/vecdotq.hpp,60,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,7,,
ggml/src/ggml-sycl/vecdotq.hpp,67,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,42,,
ggml/src/ggml-sycl/vecdotq.hpp,327,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/vecdotq.hpp,359,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,39,,
ggml/src/ggml-sycl/vecdotq.hpp,360,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,39,,
ggml/src/ggml-sycl/vecdotq.hpp,379,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,30,,
ggml/src/ggml-sycl/vecdotq.hpp,388,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,30,,
ggml/src/ggml-sycl/vecdotq.hpp,892,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/mmq.cpp,70,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,21,,
ggml/src/ggml-sycl/mmq.cpp,111,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/mmq.cpp,271,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,21,,
ggml/src/ggml-sycl/mmq.cpp,296,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/mmq.cpp,297,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/mmq.cpp,433,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,21,,
ggml/src/ggml-sycl/mmq.cpp,474,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/mmq.cpp,475,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/mmq.cpp,601,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/mmq.cpp,613,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,31,,
ggml/src/ggml-sycl/mmq.cpp,663,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,21,,
ggml/src/ggml-sycl/mmq.cpp,750,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/mmq.cpp,751,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/mmq.cpp,901,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/mmq.cpp,1045,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/mmq.cpp,1114,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,21,,
ggml/src/ggml-sycl/mmq.cpp,1184,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/mmq.cpp,1185,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,27,,
ggml/src/ggml-sycl/mmq.cpp,1187,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/mmq.cpp,1273,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,39,,
ggml/src/ggml-sycl/mmq.cpp,415,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,13,,
ggml/src/ggml-sycl/mmq.cpp,214,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,13,,
ggml/src/ggml-sycl/mmq.cpp,50,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,13,,
ggml/src/ggml-sycl/vecdotq.hpp,72,style,redundantAssignment,Variable 'aux32' is reassigned a value before the old one has been used.,Variable 'aux32' is reassigned a value before the old one has been used.,563,11,aux32 is overwritten,aux32
ggml/src/ggml-sycl/vecdotq.hpp,68,style,redundantAssignment,Variable 'aux32' is reassigned a value before the old one has been used.,Variable 'aux32' is reassigned a value before the old one has been used.,563,11,aux32 is assigned,aux32
ggml/src/ggml-sycl/mmq.cpp,2963,style,constParameterReference,Parameter 'ctx' can be declared as reference to const,Parameter 'ctx' can be declared as reference to const,398,33,Parameter 'ctx' can be declared as reference to const,ctx
ggml/src/ggml-sycl/vecdotq.hpp,303,warning,uninitvar,Uninitialized variable: v,Uninitialized variable: v,457,39,,v
ggml/src/ggml-sycl/vecdotq.hpp,297,warning,uninitvar,Uninitialized variable: v,Uninitialized variable: v,457,30,Assuming condition is false,v
ggml/src/ggml-sycl/vecdotq.hpp,303,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,42,,u
ggml/src/ggml-sycl/vecdotq.hpp,297,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,30,Assuming condition is false,u
ggml/src/ggml-sycl/vecdotq.hpp,341,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,43,,u
ggml/src/ggml-sycl/vecdotq.hpp,332,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,23,Assuming condition is false,u
ggml/src/ggml-sycl/vecdotq.hpp,341,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,57,,d8
ggml/src/ggml-sycl/vecdotq.hpp,332,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,23,Assuming condition is false,d8
ggml/src/ggml-sycl/vecdotq.hpp,393,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,47,,u
ggml/src/ggml-sycl/vecdotq.hpp,382,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,27,Assuming condition is false,u
ggml/src/ggml-sycl/vecdotq.hpp,393,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,63,,d8
ggml/src/ggml-sycl/vecdotq.hpp,382,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,27,Assuming condition is false,d8
ggml/src/ggml-sycl/vecdotq.hpp,452,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,52,,u
ggml/src/ggml-sycl/vecdotq.hpp,447,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,27,Assuming condition is false,u
ggml/src/ggml-sycl/vecdotq.hpp,452,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,64,,d8
ggml/src/ggml-sycl/vecdotq.hpp,447,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,27,Assuming condition is false,d8
ggml/src/ggml-sycl/vecdotq.hpp,770,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,43,,u
ggml/src/ggml-sycl/vecdotq.hpp,765,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,23,Assuming condition is false,u
ggml/src/ggml-sycl/vecdotq.hpp,770,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,65,,d8
ggml/src/ggml-sycl/vecdotq.hpp,765,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,23,Assuming condition is false,d8
ggml/src/ggml-sycl/vecdotq.hpp,798,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,48,,u
ggml/src/ggml-sycl/vecdotq.hpp,793,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,23,Assuming condition is false,u
ggml/src/ggml-sycl/vecdotq.hpp,798,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,83,,d8
ggml/src/ggml-sycl/vecdotq.hpp,793,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,23,Assuming condition is false,d8
ggml/src/ggml-sycl/vecdotq.hpp,905,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,48,,u
ggml/src/ggml-sycl/vecdotq.hpp,896,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,23,Assuming condition is false,u
ggml/src/ggml-sycl/vecdotq.hpp,905,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,69,,d8
ggml/src/ggml-sycl/vecdotq.hpp,896,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,23,Assuming condition is false,d8
ggml/src/ggml-sycl/vecdotq.hpp,974,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,48,,u
ggml/src/ggml-sycl/vecdotq.hpp,969,warning,uninitvar,Uninitialized variable: u,Uninitialized variable: u,457,23,Assuming condition is false,u
ggml/src/ggml-sycl/vecdotq.hpp,974,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,69,,d8
ggml/src/ggml-sycl/vecdotq.hpp,969,warning,uninitvar,Uninitialized variable: d8,Uninitialized variable: d8,457,23,Assuming condition is false,d8
ggml/src/ggml-sycl/mmq.cpp,616,warning,uninitvar,Uninitialized variable: v,Uninitialized variable: v,457,39,,v
ggml/src/ggml-sycl/mmq.cpp,609,warning,uninitvar,Uninitialized variable: v,Uninitialized variable: v,457,23,Assuming condition is false,v
ggml/src/ggml-sycl/mmq.cpp,770,warning,uninitvar,Uninitialized variable: v,Uninitialized variable: v,457,39,,v
ggml/src/ggml-sycl/mmq.cpp,758,warning,uninitvar,Uninitialized variable: v,Uninitialized variable: v,457,23,Assuming condition is false,v
ggml/src/ggml-sycl/mmq.cpp,975,style,unreadVariable,Variable 'bxi' is assigned a value that is never used.,Variable 'bxi' is assigned a value that is never used.,563,32,,bxi
ggml/src/ggml-sycl/mmvq.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/mmvq.cpp,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-sycl/mmvq.cpp,1049,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-sycl/mmvq.cpp,1050,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/src/ggml-sycl/mmvq.cpp,1077,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-sycl/mmvq.cpp,1078,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/src/ggml-sycl/mmvq.cpp,1090,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-sycl/mmvq.cpp,1091,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/src/ggml-sycl/mmvq.cpp,508,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,509,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,459,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,460,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,411,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,412,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,363,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,364,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,315,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,316,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,267,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,268,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,219,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,220,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,171,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,172,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,123,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,124,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,76,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,77,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/mmvq.cpp,40,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-sycl/mmvq.cpp,41,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,63,,
ggml/src/ggml-sycl/mmvq.cpp,41,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,42,,
ggml/src/ggml-sycl/mmvq.cpp,1028,style,funcArgNamesDifferent,Function 'ggml_sycl_op_mul_mat_vec_q' argument 12 names different: declaration 'src1_padded_row_size' definition 'src1_padded_col_size'.,Function 'ggml_sycl_op_mul_mat_vec_q' argument 12 names different: declaration 'src1_padded_row_size' definition 'src1_padded_col_size'.,628,97,,ggml_sycl_op_mul_mat_vec_q
ggml/src/ggml-sycl/mmvq.hpp,24,style,funcArgNamesDifferent,Function 'ggml_sycl_op_mul_mat_vec_q' argument 12 names different: declaration 'src1_padded_row_size' definition 'src1_padded_col_size'.,Function 'ggml_sycl_op_mul_mat_vec_q' argument 12 names different: declaration 'src1_padded_row_size' definition 'src1_padded_col_size'.,628,45,,ggml_sycl_op_mul_mat_vec_q
ggml/src/ggml-sycl/norm.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/norm.cpp,2,information,missingInclude,"Include file: ""ggml-sycl/common.hpp"" not found.","Include file: ""ggml-sycl/common.hpp"" not found.",,0,,
ggml/src/ggml-sycl/norm.cpp,3,information,missingInclude,"Include file: ""ggml-sycl/presets.hpp"" not found.","Include file: ""ggml-sycl/presets.hpp"" not found.",,0,,
ggml/src/ggml-sycl/outprod.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/outprod.cpp,25,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/outprod.cpp,26,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/outprod.cpp,27,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/src/ggml-sycl/rope.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/rope.cpp,2,information,missingInclude,"Include file: ""ggml-sycl/common.hpp"" not found.","Include file: ""ggml-sycl/common.hpp"" not found.",,0,,
ggml/src/ggml-sycl/rope.cpp,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-sycl/rope.cpp,149,style,knownConditionTrueFalse,Condition 'sector>=sections.v[0]' is always true,Condition 'sector>=sections.v[0]' is always true,571,21,Condition 'sector>=sections.v[0]' is always true,
ggml/src/ggml-sycl/rope.cpp,146,style,knownConditionTrueFalse,Condition 'sector>=sections.v[0]' is always true,Condition 'sector>=sections.v[0]' is always true,571,16,Assuming that condition 'sector<sections.v[0]' is not redundant,
ggml/src/ggml-sycl/rope.cpp,360,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/rope.cpp,361,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/rope.cpp,363,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/rope.cpp,374,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/rope.cpp,375,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/rope.cpp,376,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/rope.cpp,377,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/rope.cpp,378,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/rope.cpp,379,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/rope.cpp,380,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-sycl/rope.cpp,394,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/rope.cpp,398,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/rope.cpp,411,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/rope.cpp,411,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,63,,
ggml/src/ggml-sycl/rope.cpp,414,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/rope.cpp,414,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,68,,
ggml/src/ggml-sycl/rope.cpp,423,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/rope.cpp,423,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,68,,
ggml/src/ggml-sycl/rope.cpp,427,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,29,,
ggml/src/ggml-sycl/rope.cpp,427,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,64,,
ggml/src/ggml-sycl/rope.cpp,436,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/rope.cpp,436,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,70,,
ggml/src/ggml-sycl/rope.cpp,440,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-sycl/rope.cpp,440,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,65,,
ggml/src/ggml-sycl/rope.cpp,449,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/rope.cpp,449,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,63,,
ggml/src/ggml-sycl/rope.cpp,452,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/rope.cpp,452,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,68,,
ggml/src/ggml-sycl/set_rows.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/set_rows.cpp,152,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/set_rows.cpp,153,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,27,,
ggml/src/ggml-sycl/set_rows.cpp,161,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-sycl/set_rows.cpp,174,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-sycl/set_rows.cpp,186,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,33,,
ggml/src/ggml-sycl/set_rows.cpp,197,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,89,,
ggml/src/ggml-sycl/set_rows.cpp,200,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,89,,
ggml/src/ggml-sycl/set_rows.cpp,203,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,89,,
ggml/src/ggml-sycl/set_rows.cpp,206,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,89,,
ggml/src/ggml-sycl/set_rows.cpp,209,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,89,,
ggml/src/ggml-sycl/set_rows.cpp,212,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,94,,
ggml/src/ggml-sycl/set_rows.cpp,107,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,30,,
ggml/src/ggml-sycl/set_rows.cpp,107,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,45,,
ggml/src/ggml-sycl/softmax.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/tsembd.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/tsembd.cpp,62,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,28,,
ggml/src/ggml-sycl/tsembd.cpp,63,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,21,,
ggml/src/ggml-sycl/tsembd.cpp,22,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,26,,
ggml/src/ggml-sycl/tsembd.cpp,22,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,36,,
ggml/src/ggml-sycl/tsembd.cpp,22,portability,invalidPointerCast,Casting between signed char * and float * which have an incompatible binary data representation.,Casting between signed char * and float * which have an incompatible binary data representation.,704,26,,
ggml/src/ggml-sycl/tsembd.cpp,22,portability,invalidPointerCast,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,Casting from float * to signed char * is not portable due to different binary data representations on different platforms.,704,36,,
ggml/src/ggml-sycl/wkv.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-sycl/wkv.cpp,1,information,missingIncludeSystem,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sycl/sycl.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-sycl/wkv.cpp,184,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/wkv.cpp,185,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/wkv.cpp,186,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/wkv.cpp,187,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/wkv.cpp,188,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,25,,
ggml/src/ggml-sycl/wkv.cpp,189,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/wkv.cpp,190,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/src/ggml-sycl/wkv.cpp,218,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-sycl/wkv.cpp,231,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-sycl/wkv.cpp,240,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/wkv.cpp,241,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/wkv.cpp,242,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/wkv.cpp,243,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/wkv.cpp,244,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/wkv.cpp,245,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/wkv.cpp,246,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,24,,
ggml/src/ggml-sycl/wkv.cpp,247,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,20,,
ggml/src/ggml-sycl/wkv.cpp,275,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-sycl/wkv.cpp,288,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-threading.h,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-threading.cpp,2,information,missingIncludeSystem,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 27 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,1,information,missingInclude,"Include file: ""ggml-vulkan.h"" not found.","Include file: ""ggml-vulkan.h"" not found.",,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,2,information,missingIncludeSystem,Include file: <vulkan/vulkan_core.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vulkan/vulkan_core.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,16,information,missingIncludeSystem,Include file: <vulkan/vulkan.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vulkan/vulkan.hpp> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,18,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,19,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,20,information,missingIncludeSystem,Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,21,information,missingIncludeSystem,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,22,information,missingIncludeSystem,Include file: <tuple> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <tuple> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,23,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,24,information,missingIncludeSystem,Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,25,information,missingIncludeSystem,Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,26,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,27,information,missingIncludeSystem,Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,28,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,29,information,missingIncludeSystem,Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unordered_map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,30,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,31,information,missingIncludeSystem,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,32,information,missingIncludeSystem,Include file: <future> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <future> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,33,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,57,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,58,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,60,information,missingInclude,"Include file: ""ggml-vulkan-shaders.hpp"" not found.","Include file: ""ggml-vulkan-shaders.hpp"" not found.",,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,7335,error,unknownMacro,There is an unknown macro here somewhere. Configuration is required. If GGML_TENSOR_LOCALS is a macro then please configure it.,There is an unknown macro here somewhere. Configuration is required. If GGML_TENSOR_LOCALS is a macro then please configure it.,,5,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,4,information,missingIncludeSystem,Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/ggml-vulkan.cpp,5,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,3,information,missingIncludeSystem,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,4,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,5,information,missingIncludeSystem,Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,6,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,7,information,missingIncludeSystem,Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,8,information,missingIncludeSystem,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,9,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,10,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,11,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,12,information,missingIncludeSystem,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,13,information,missingIncludeSystem,Include file: <future> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <future> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,14,information,missingIncludeSystem,Include file: <queue> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <queue> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,15,information,missingIncludeSystem,Include file: <condition_variable> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <condition_variable> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,16,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,17,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,18,information,missingIncludeSystem,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,19,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,20,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,21,information,missingIncludeSystem,Include file: <sys/stat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/stat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,22,information,missingIncludeSystem,Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,28,information,missingIncludeSystem,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,29,information,missingIncludeSystem,Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <sys/wait.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,30,information,missingIncludeSystem,Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fcntl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,457,style,knownConditionTrueFalse,"Condition 'tname==""bf16""' is always false","Condition 'tname==""bf16""' is always false",570,99,"Condition 'tname==""bf16""' is always false",
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,451,style,knownConditionTrueFalse,"Condition 'tname==""bf16""' is always false","Condition 'tname==""bf16""' is always false",570,19,"Assuming condition 'tname==""bf16""' is false",
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,843,warning,nullPointerOutOfResources,"If resource allocation fails, then there is a possible null pointer dereference: hdr","If resource allocation fails, then there is a possible null pointer dereference: hdr",476,13,Null pointer dereference,hdr
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,840,warning,nullPointerOutOfResources,"If resource allocation fails, then there is a possible null pointer dereference: hdr","If resource allocation fails, then there is a possible null pointer dereference: hdr",476,22,"Assignment 'hdr=fopen(target_hpp.c_str(),""w"")', assigned value is 0",hdr
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,840,warning,nullPointerOutOfResources,"If resource allocation fails, then there is a possible null pointer dereference: hdr","If resource allocation fails, then there is a possible null pointer dereference: hdr",476,22,Assuming allocation function fails,hdr
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,844,warning,nullPointerOutOfResources,"If resource allocation fails, then there is a possible null pointer dereference: src","If resource allocation fails, then there is a possible null pointer dereference: src",476,13,Null pointer dereference,src
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,841,warning,nullPointerOutOfResources,"If resource allocation fails, then there is a possible null pointer dereference: src","If resource allocation fails, then there is a possible null pointer dereference: src",476,22,"Assignment 'src=fopen(target_cpp.c_str(),""w"")', assigned value is 0",src
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,841,warning,nullPointerOutOfResources,"If resource allocation fails, then there is a possible null pointer dereference: src","If resource allocation fails, then there is a possible null pointer dereference: src",476,22,Assuming allocation function fails,src
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,270,style,variableScope,The scope of the variable 'stdout_str' can be reduced.,"The scope of the variable 'stdout_str' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,17,,stdout_str
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,270,style,variableScope,The scope of the variable 'stderr_str' can be reduced.,"The scope of the variable 'stderr_str' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,29,,stderr_str
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,889,style,constVariable,Variable 'suffixes' can be declared as const array,Variable 'suffixes' can be declared as const array,398,17,Variable 'suffixes' can be declared as const array,suffixes
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,190,style,useStlAlgorithm,Consider using std::transform algorithm instead of a raw loop.,Consider using std::transform algorithm instead of a raw loop.,398,11,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,262,style,useStlAlgorithm,Consider using std::transform algorithm instead of a raw loop.,Consider using std::transform algorithm instead of a raw loop.,398,13,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,25,information,missingIncludeSystem,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,26,information,missingIncludeSystem,Include file: <direct.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <direct.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,6,information,missingInclude,"Include file: ""ggml-webgpu.h"" not found.","Include file: ""ggml-webgpu.h"" not found.",,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,8,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,9,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,10,information,missingInclude,"Include file: ""ggml-wgsl-shaders.hpp"" not found.","Include file: ""ggml-wgsl-shaders.hpp"" not found.",,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,12,information,missingIncludeSystem,Include file: <webgpu/webgpu_cpp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <webgpu/webgpu_cpp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,14,information,missingIncludeSystem,Include file: <condition_variable> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <condition_variable> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,15,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,16,information,missingIncludeSystem,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,17,information,missingIncludeSystem,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,18,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,19,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,46,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,53,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,48,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,39,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,307,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,51,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,366,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,439,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,444,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,41,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,456,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,48,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,858,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,874,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,55,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,889,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,908,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,55,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,951,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,52,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,1044,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,889,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,14,,
ggml/src/ggml-webgpu/ggml-webgpu.cpp,358,performance,passedByValue,Function parameter 'params' should be passed by const reference.,Parameter 'params' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,85,Function parameter 'params' should be passed by const reference.,params
ggml/src/ggml-webgpu/ggml-webgpu.cpp,319,style,constParameterReference,Parameter 'ctx' can be declared as reference to const,Parameter 'ctx' can be declared as reference to const,398,61,Parameter 'ctx' can be declared as reference to const,ctx
ggml/src/ggml-webgpu/ggml-webgpu.cpp,460,style,constParameterReference,Parameter 'ctx' can be declared as reference to const,Parameter 'ctx' can be declared as reference to const,398,64,Parameter 'ctx' can be declared as reference to const,ctx
ggml/src/ggml-webgpu/ggml-webgpu.cpp,465,style,constParameterReference,Parameter 'ctx' can be declared as reference to const,Parameter 'ctx' can be declared as reference to const,398,64,Parameter 'ctx' can be declared as reference to const,ctx
ggml/src/ggml-webgpu/ggml-webgpu.cpp,1048,style,constParameterReference,Parameter 'webgpu_ctx' can be declared as reference to const,Parameter 'webgpu_ctx' can be declared as reference to const,398,88,Parameter 'webgpu_ctx' can be declared as reference to const,webgpu_ctx
ggml/src/ggml-webgpu/ggml-webgpu.cpp,456,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,42,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-webgpu/ggml-webgpu.cpp,460,style,constParameterPointer,Parameter 't' can be declared as pointer to const,Parameter 't' can be declared as pointer to const,398,83,Parameter 't' can be declared as pointer to const,t
ggml/src/ggml-webgpu/ggml-webgpu.cpp,465,style,constParameterPointer,Parameter 't' can be declared as pointer to const,Parameter 't' can be declared as pointer to const,398,83,Parameter 't' can be declared as pointer to const,t
ggml/src/ggml-webgpu/ggml-webgpu.cpp,476,style,constParameterPointer,Parameter 'a' can be declared as pointer to const,Parameter 'a' can be declared as pointer to const,398,52,Parameter 'a' can be declared as pointer to const,a
ggml/src/ggml-webgpu/ggml-webgpu.cpp,476,style,constParameterPointer,Parameter 'b' can be declared as pointer to const,Parameter 'b' can be declared as pointer to const,398,69,Parameter 'b' can be declared as pointer to const,b
ggml/src/ggml-webgpu/ggml-webgpu.cpp,799,style,constVariablePointer,Variable 'backend_ctx' can be declared as pointer to const,Variable 'backend_ctx' can be declared as pointer to const,398,35,Variable 'backend_ctx' can be declared as pointer to const,backend_ctx
ggml/src/ggml-webgpu/ggml-webgpu.cpp,846,style,constParameterCallback,"Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_webgpu_buffer_memset_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).","Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_webgpu_buffer_memset_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).",398,76,Parameter 'tensor' can be declared as pointer to const,tensor
ggml/src/ggml-webgpu/ggml-webgpu.cpp,959,style,constParameterCallback,"Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_webgpu_buffer_memset_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).","Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_webgpu_buffer_memset_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).",398,30,You might need to cast the function pointer here,tensor
ggml/src/ggml-webgpu/ggml-webgpu.cpp,868,style,constParameterCallback,"Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_webgpu_buffer_set_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).","Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_webgpu_buffer_set_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).",398,73,Parameter 'tensor' can be declared as pointer to const,tensor
ggml/src/ggml-webgpu/ggml-webgpu.cpp,960,style,constParameterCallback,"Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_webgpu_buffer_set_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).","Parameter 'tensor' can be declared as pointer to const. However it seems that 'ggml_backend_webgpu_buffer_set_tensor' is a callback function, if 'tensor' is declared with const you might also need to cast function pointer(s).",398,30,You might need to cast the function pointer here,tensor
ggml/src/ggml-webgpu/ggml-webgpu.cpp,1214,style,constVariablePointer,Variable 'dev_ctx' can be declared as pointer to const,Variable 'dev_ctx' can be declared as pointer to const,398,42,Variable 'dev_ctx' can be declared as pointer to const,dev_ctx
ggml/src/ggml-webgpu/ggml-webgpu.cpp,1284,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,42,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-webgpu/ggml-webgpu.cpp,1399,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,39,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-webgpu/ggml-webgpu.cpp,1404,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,39,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-webgpu/ggml-webgpu.cpp,1414,style,constVariablePointer,Variable 'reg_ctx' can be declared as pointer to const,Variable 'reg_ctx' can be declared as pointer to const,398,39,Variable 'reg_ctx' can be declared as pointer to const,reg_ctx
ggml/src/ggml-webgpu/ggml-webgpu.cpp,346,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,35,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,1,information,missingInclude,"Include file: ""ggml-zdnn.h"" not found.","Include file: ""ggml-zdnn.h"" not found.",,0,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,2,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,3,information,missingInclude,"Include file: ""ggml-backend-impl.h"" not found.","Include file: ""ggml-backend-impl.h"" not found.",,0,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,5,information,missingInclude,"Include file: ""ggml-zdnn/common.hpp"" not found.","Include file: ""ggml-zdnn/common.hpp"" not found.",,0,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,6,information,missingInclude,"Include file: ""ggml-zdnn/mmf.hpp"" not found.","Include file: ""ggml-zdnn/mmf.hpp"" not found.",,0,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,7,information,missingInclude,"Include file: ""ggml-zdnn/utils.hpp"" not found.","Include file: ""ggml-zdnn/utils.hpp"" not found.",,0,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,8,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,10,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,11,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,12,information,missingIncludeSystem,Include file: <csignal> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <csignal> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,13,information,missingIncludeSystem,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,263,error,invalidLifetime,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,562,37,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,241,error,invalidLifetime,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,562,59,Variable created here.,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,263,error,invalidLifetime,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,562,38,Passed to 'move'.,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,254,error,invalidLifetime,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,562,58,Raw pointer to smart pointer created here.,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,263,error,invalidLifetime,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,562,38,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,241,error,invalidLifetime,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,562,59,Variable created here.,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,254,error,invalidLifetime,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,Using object that points to local variable 'zdnn_bias_buffer' that is out of scope.,562,58,Raw pointer to smart pointer created here.,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,45,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,50,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,46,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,50,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,175,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,50,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,200,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,214,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,224,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,242,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,275,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,12,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,281,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,12,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,283,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,40,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,294,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,18,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,300,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,337,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,50,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,404,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,39,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,433,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,42,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,492,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,30,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,512,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,50,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,72,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,271,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,324,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,367,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,373,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,400,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,440,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,450,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,456,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,469,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,502,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,508,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,521,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,549,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,558,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,566,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,580,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,590,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,5,,
ggml/src/ggml-zdnn/ggml-zdnn.cpp,28,style,constParameterPointer,Parameter 'ctx' can be declared as pointer to const,Parameter 'ctx' can be declared as pointer to const,398,33,Parameter 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-zdnn/ggml-zdnn.cpp,214,style,constVariablePointer,Variable 'ctx' can be declared as pointer to const,Variable 'ctx' can be declared as pointer to const,398,40,Variable 'ctx' can be declared as pointer to const,ctx
ggml/src/ggml-zdnn/ggml-zdnn.cpp,337,style,constVariablePointer,Variable 'ctx_dev' can be declared as pointer to const,Variable 'ctx_dev' can be declared as pointer to const,398,40,Variable 'ctx_dev' can be declared as pointer to const,ctx_dev
ggml/src/ggml-zdnn/ggml-zdnn.cpp,512,style,constVariablePointer,Variable 'ctx_dev' can be declared as pointer to const,Variable 'ctx_dev' can be declared as pointer to const,398,40,Variable 'ctx_dev' can be declared as pointer to const,ctx_dev
ggml/src/ggml-zdnn/mmf.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-zdnn/common.hpp,4,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml-zdnn/common.hpp,5,information,missingInclude,"Include file: ""ggml-impl.h"" not found.","Include file: ""ggml-impl.h"" not found.",,0,,
ggml/src/ggml-zdnn/common.hpp,7,information,missingInclude,"Include file: ""zdnn.h"" not found.","Include file: ""zdnn.h"" not found.",,0,,
ggml/src/ggml-zdnn/common.hpp,9,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-zdnn/common.hpp,10,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml-zdnn/mmf.cpp,32,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,48,,
ggml/src/ggml-zdnn/mmf.cpp,33,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,48,,
ggml/src/ggml-zdnn/mmf.cpp,34,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,48,,
ggml/src/ggml-zdnn/mmf.cpp,35,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,48,,
ggml/src/ggml-zdnn/utils.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml.c,0,information,toomanyconfigs,Too many #ifdef configurations - cppcheck only checks 12 of 34 configurations. Use --force to check all configurations.,The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time.,398,0,,
ggml/src/ggml.c,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/ggml.c,7,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/src/ggml.c,8,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/ggml.c,20,information,missingIncludeSystem,Include file: <alloca.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <alloca.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,23,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,24,information,missingIncludeSystem,Include file: <errno.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <errno.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,25,information,missingIncludeSystem,Include file: <time.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <time.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,26,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,27,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,28,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,29,information,missingIncludeSystem,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,30,information,missingIncludeSystem,Include file: <inttypes.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <inttypes.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,31,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,32,information,missingIncludeSystem,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <float.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,33,information,missingIncludeSystem,Include file: <limits.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <limits.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,34,information,missingIncludeSystem,Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdarg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.c,35,information,missingIncludeSystem,Include file: <signal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <signal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.cpp,3,information,missingIncludeSystem,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/ggml.cpp,4,information,missingIncludeSystem,Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/gguf.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/src/gguf.cpp,2,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/src/gguf.cpp,4,information,missingInclude,"Include file: ""gguf.h"" not found.","Include file: ""gguf.h"" not found.",,0,,
ggml/src/gguf.cpp,6,information,missingIncludeSystem,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/gguf.cpp,7,information,missingIncludeSystem,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/gguf.cpp,8,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/gguf.cpp,9,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/gguf.cpp,10,information,missingIncludeSystem,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/gguf.cpp,11,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/gguf.cpp,12,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/gguf.cpp,13,information,missingIncludeSystem,Include file: <new> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <new> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/gguf.cpp,14,information,missingIncludeSystem,Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/gguf.cpp,15,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/src/gguf.cpp,16,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-arange.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-arange.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-arange.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/tests/test-arange.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/tests/test-arange.cpp,14,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-arange.cpp,15,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-arange.cpp,16,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-arange.cpp,54,style,knownConditionTrueFalse,Condition '!backend' is always true,Condition '!backend' is always true,571,13,Condition '!backend' is always true,
ggml/tests/test-arange.cpp,23,style,knownConditionTrueFalse,Condition '!backend' is always true,Condition '!backend' is always true,571,34,"Assignment 'backend=NULL', assigned value is 0",
ggml/tests/test-arange.cpp,73,style,variableScope,The scope of the variable 'n_threads' can be reduced.,"The scope of the variable 'n_threads' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,13,,n_threads
ggml/tests/test-arange.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/tests/test-arange.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/tests/test-arange.cpp,37,style,knownConditionTrueFalse,Condition '!backend' is always true,Condition '!backend' is always true,571,13,Condition '!backend' is always true,
ggml/tests/test-arange.cpp,23,style,knownConditionTrueFalse,Condition '!backend' is always true,Condition '!backend' is always true,571,34,"Assignment 'backend=NULL', assigned value is 0",
ggml/tests/test-backend-ops.cpp,18,information,missingIncludeSystem,Include file: <ggml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,19,information,missingIncludeSystem,Include file: <ggml-alloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-alloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,20,information,missingIncludeSystem,Include file: <ggml-backend.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-backend.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,21,information,missingIncludeSystem,Include file: <ggml-cpp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-cpp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,23,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,24,information,missingIncludeSystem,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,25,information,missingIncludeSystem,Include file: <cfloat> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cfloat> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,26,information,missingIncludeSystem,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,27,information,missingIncludeSystem,Include file: <cstdarg> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdarg> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,28,information,missingIncludeSystem,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,29,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,30,information,missingIncludeSystem,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,31,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,32,information,missingIncludeSystem,Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,33,information,missingIncludeSystem,Include file: <future> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <future> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,34,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,35,information,missingIncludeSystem,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,36,information,missingIncludeSystem,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,37,information,missingIncludeSystem,Include file: <set> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <set> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,38,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,39,information,missingIncludeSystem,Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string_view> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,40,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,41,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-backend-ops.cpp,557,warning,uninitMemberVar,Member variable 'test_summary_info::tests_passed' is not initialized in the constructor.,"Member variable 'test_summary_info::tests_passed' is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_summary_info::tests_passed
ggml/tests/test-backend-ops.cpp,557,warning,uninitMemberVar,Member variable 'test_summary_info::tests_total' is not initialized in the constructor.,"Member variable 'test_summary_info::tests_total' is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_summary_info::tests_total
ggml/tests/test-backend-ops.cpp,568,warning,uninitMemberVar,Member variable 'testing_start_info::device_count' is not initialized in the constructor.,"Member variable 'testing_start_info::device_count' is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,testing_start_info::device_count
ggml/tests/test-backend-ops.cpp,584,warning,uninitMemberVar,Member variable 'backend_init_info::device_index' is not initialized in the constructor.,"Member variable 'backend_init_info::device_index' is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,backend_init_info::device_index
ggml/tests/test-backend-ops.cpp,584,warning,uninitMemberVar,Member variable 'backend_init_info::total_devices' is not initialized in the constructor.,"Member variable 'backend_init_info::total_devices' is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,backend_init_info::total_devices
ggml/tests/test-backend-ops.cpp,604,warning,uninitMemberVar,Member variable 'backend_status_info::status' is not initialized in the constructor.,"Member variable 'backend_status_info::status' is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,backend_status_info::status
ggml/tests/test-backend-ops.cpp,616,warning,uninitMemberVar,Member variable 'overall_summary_info::backends_passed' is not initialized in the constructor.,"Member variable 'overall_summary_info::backends_passed' is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,overall_summary_info::backends_passed
ggml/tests/test-backend-ops.cpp,616,warning,uninitMemberVar,Member variable 'overall_summary_info::backends_total' is not initialized in the constructor.,"Member variable 'overall_summary_info::backends_total' is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,overall_summary_info::backends_total
ggml/tests/test-backend-ops.cpp,616,warning,uninitMemberVar,Member variable 'overall_summary_info::all_passed' is not initialized in the constructor.,"Member variable 'overall_summary_info::all_passed' is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,overall_summary_info::all_passed
ggml/tests/test-backend-ops.cpp,1691,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,1728,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,1801,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,1846,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,1905,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,1968,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2024,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2077,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2175,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2223,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2285,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2320,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2371,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2409,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2485,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2534,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2575,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2652,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2706,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2741,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2776,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2804,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2838,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2878,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2914,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,2961,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3005,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3060,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3088,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3145,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3175,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3204,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3255,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3367,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3451,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3487,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3516,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3556,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3592,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3635,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3680,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3714,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3752,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3802,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3841,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3966,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,3999,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4032,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4074,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4125,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4211,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4261,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4328,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4371,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4422,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4470,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4518,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4549,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4584,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4616,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4648,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4676,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4711,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4741,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4767,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4799,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4832,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4866,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4893,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4919,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4942,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,4968,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,5018,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,5100,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,5148,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,5182,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,5226,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,5298,warning,uninitDerivedMemberVar,Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case?,"Member variable 'test_case::mode' is not initialized in the constructor. Maybe it should be initialized directly in the class test_case? Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",398,5,,test_case::mode
ggml/tests/test-backend-ops.cpp,764,performance,functionStatic,Technically the member function 'console_printer::print_test_console' can be static (but you may consider moving to unnamed namespace).,The member function 'console_printer::print_test_console' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,10,,console_printer::print_test_console
ggml/tests/test-backend-ops.cpp,781,performance,functionStatic,Technically the member function 'console_printer::print_perf_console' can be static (but you may consider moving to unnamed namespace).,The member function 'console_printer::print_perf_console' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,10,,console_printer::print_perf_console
ggml/tests/test-backend-ops.cpp,823,performance,functionStatic,Technically the member function 'console_printer::print_support_console' can be static (but you may consider moving to unnamed namespace).,The member function 'console_printer::print_support_console' can be made a static function. Making a function static can bring a performance benefit since no 'this' instance is passed to the function. This change should not cause compiler errors but it does not necessarily make sense conceptually. Think about your design and the task of the function first - is it a function that must not access members of class instances? And maybe it is more appropriate to move this function to an unnamed namespace.,398,10,,console_printer::print_support_console
ggml/tests/test-backend-ops.cpp,3827,warning,duplInheritedMember,The struct 'test_rope' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,The struct 'test_rope' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,398,9,Derived variable 'test_rope::mode',test_rope
ggml/tests/test-backend-ops.cpp,1011,warning,duplInheritedMember,The struct 'test_rope' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,The struct 'test_rope' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,398,15,Parent variable 'test_case::mode',test_rope
ggml/tests/test-backend-ops.cpp,4610,warning,duplInheritedMember,The struct 'test_upscale' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,The struct 'test_upscale' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,398,27,Derived variable 'test_upscale::mode',test_upscale
ggml/tests/test-backend-ops.cpp,1011,warning,duplInheritedMember,The struct 'test_upscale' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,The struct 'test_upscale' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,398,15,Parent variable 'test_case::mode',test_upscale
ggml/tests/test-backend-ops.cpp,4642,warning,duplInheritedMember,The struct 'test_interpolate' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,The struct 'test_interpolate' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,398,20,Derived variable 'test_interpolate::mode',test_interpolate
ggml/tests/test-backend-ops.cpp,1011,warning,duplInheritedMember,The struct 'test_interpolate' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,The struct 'test_interpolate' defines member variable with name 'mode' also defined in its parent struct 'test_case'.,398,15,Parent variable 'test_case::mode',test_interpolate
ggml/tests/test-backend-ops.cpp,570,style,noExplicitConstructor,Struct 'testing_start_info' has a constructor with 1 argument that is not explicit.,"Struct 'testing_start_info' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,testing_start_info
ggml/tests/test-backend-ops.cpp,1691,style,noExplicitConstructor,Struct 'test_example' has a constructor with 1 argument that is not explicit.,"Struct 'test_example' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_example
ggml/tests/test-backend-ops.cpp,1728,style,noExplicitConstructor,Struct 'test_unary' has a constructor with 1 argument that is not explicit.,"Struct 'test_unary' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_unary
ggml/tests/test-backend-ops.cpp,1801,style,noExplicitConstructor,Struct 'test_glu' has a constructor with 1 argument that is not explicit.,"Struct 'test_glu' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_glu
ggml/tests/test-backend-ops.cpp,1846,style,noExplicitConstructor,Struct 'test_glu_split' has a constructor with 1 argument that is not explicit.,"Struct 'test_glu_split' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_glu_split
ggml/tests/test-backend-ops.cpp,1905,style,noExplicitConstructor,Struct 'test_swiglu_oai' has a constructor with 1 argument that is not explicit.,"Struct 'test_swiglu_oai' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_swiglu_oai
ggml/tests/test-backend-ops.cpp,1968,style,noExplicitConstructor,Struct 'test_get_rows' has a constructor with 1 argument that is not explicit.,"Struct 'test_get_rows' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_get_rows
ggml/tests/test-backend-ops.cpp,2024,style,noExplicitConstructor,Struct 'test_get_rows_back' has a constructor with 1 argument that is not explicit.,"Struct 'test_get_rows_back' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_get_rows_back
ggml/tests/test-backend-ops.cpp,2175,style,noExplicitConstructor,Struct 'test_argmax' has a constructor with 1 argument that is not explicit.,"Struct 'test_argmax' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_argmax
ggml/tests/test-backend-ops.cpp,2223,style,noExplicitConstructor,Struct 'test_count_equal' has a constructor with 1 argument that is not explicit.,"Struct 'test_count_equal' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_count_equal
ggml/tests/test-backend-ops.cpp,2285,style,noExplicitConstructor,Struct 'test_repeat' has a constructor with 1 argument that is not explicit.,"Struct 'test_repeat' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_repeat
ggml/tests/test-backend-ops.cpp,2320,style,noExplicitConstructor,Struct 'test_repeat_back' has a constructor with 1 argument that is not explicit.,"Struct 'test_repeat_back' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_repeat_back
ggml/tests/test-backend-ops.cpp,2371,style,noExplicitConstructor,Struct 'test_dup' has a constructor with 1 argument that is not explicit.,"Struct 'test_dup' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_dup
ggml/tests/test-backend-ops.cpp,2409,style,noExplicitConstructor,Struct 'test_set' has a constructor with 1 argument that is not explicit.,"Struct 'test_set' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_set
ggml/tests/test-backend-ops.cpp,2485,style,noExplicitConstructor,Struct 'test_cpy' has a constructor with 1 argument that is not explicit.,"Struct 'test_cpy' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_cpy
ggml/tests/test-backend-ops.cpp,2534,style,noExplicitConstructor,Struct 'test_cont' has a constructor with 1 argument that is not explicit.,"Struct 'test_cont' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_cont
ggml/tests/test-backend-ops.cpp,2575,style,noExplicitConstructor,Struct 'test_bin_bcast' has a constructor with 1 argument that is not explicit.,"Struct 'test_bin_bcast' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_bin_bcast
ggml/tests/test-backend-ops.cpp,2652,style,noExplicitConstructor,Struct 'test_add_id' has a constructor with 1 argument that is not explicit.,"Struct 'test_add_id' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_add_id
ggml/tests/test-backend-ops.cpp,2706,style,noExplicitConstructor,Struct 'test_add1' has a constructor with 1 argument that is not explicit.,"Struct 'test_add1' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_add1
ggml/tests/test-backend-ops.cpp,2741,style,noExplicitConstructor,Struct 'test_scale' has a constructor with 1 argument that is not explicit.,"Struct 'test_scale' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_scale
ggml/tests/test-backend-ops.cpp,2776,style,noExplicitConstructor,Struct 'test_softcap' has a constructor with 1 argument that is not explicit.,"Struct 'test_softcap' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_softcap
ggml/tests/test-backend-ops.cpp,2804,style,noExplicitConstructor,Struct 'test_silu_back' has a constructor with 1 argument that is not explicit.,"Struct 'test_silu_back' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_silu_back
ggml/tests/test-backend-ops.cpp,2838,style,noExplicitConstructor,Struct 'test_norm' has a constructor with 1 argument that is not explicit.,"Struct 'test_norm' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_norm
ggml/tests/test-backend-ops.cpp,2878,style,noExplicitConstructor,Struct 'test_norm_mul_add' has a constructor with 1 argument that is not explicit.,"Struct 'test_norm_mul_add' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_norm_mul_add
ggml/tests/test-backend-ops.cpp,2914,style,noExplicitConstructor,Struct 'test_rms_norm' has a constructor with 1 argument that is not explicit.,"Struct 'test_rms_norm' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_rms_norm
ggml/tests/test-backend-ops.cpp,2961,style,noExplicitConstructor,Struct 'test_rms_norm_back' has a constructor with 1 argument that is not explicit.,"Struct 'test_rms_norm_back' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_rms_norm_back
ggml/tests/test-backend-ops.cpp,3005,style,noExplicitConstructor,Struct 'test_rms_norm_mul_add' has a constructor with 1 argument that is not explicit.,"Struct 'test_rms_norm_mul_add' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_rms_norm_mul_add
ggml/tests/test-backend-ops.cpp,3060,style,noExplicitConstructor,Struct 'test_ssm_conv' has a constructor with 1 argument that is not explicit.,"Struct 'test_ssm_conv' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_ssm_conv
ggml/tests/test-backend-ops.cpp,3088,style,noExplicitConstructor,Struct 'test_ssm_scan' has a constructor with 1 argument that is not explicit.,"Struct 'test_ssm_scan' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_ssm_scan
ggml/tests/test-backend-ops.cpp,3145,style,noExplicitConstructor,Struct 'test_rwkv_wkv6' has a constructor with 1 argument that is not explicit.,"Struct 'test_rwkv_wkv6' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_rwkv_wkv6
ggml/tests/test-backend-ops.cpp,3175,style,noExplicitConstructor,Struct 'test_gla' has a constructor with 1 argument that is not explicit.,"Struct 'test_gla' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_gla
ggml/tests/test-backend-ops.cpp,3204,style,noExplicitConstructor,Struct 'test_rwkv_wkv7' has a constructor with 1 argument that is not explicit.,"Struct 'test_rwkv_wkv7' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_rwkv_wkv7
ggml/tests/test-backend-ops.cpp,3255,style,noExplicitConstructor,Struct 'test_mul_mat' has a constructor with 1 argument that is not explicit.,"Struct 'test_mul_mat' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_mul_mat
ggml/tests/test-backend-ops.cpp,3367,style,noExplicitConstructor,Struct 'test_mul_mat_id' has a constructor with 1 argument that is not explicit.,"Struct 'test_mul_mat_id' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_mul_mat_id
ggml/tests/test-backend-ops.cpp,3451,style,noExplicitConstructor,Struct 'test_out_prod' has a constructor with 1 argument that is not explicit.,"Struct 'test_out_prod' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_out_prod
ggml/tests/test-backend-ops.cpp,3487,style,noExplicitConstructor,Struct 'test_sqr' has a constructor with 1 argument that is not explicit.,"Struct 'test_sqr' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_sqr
ggml/tests/test-backend-ops.cpp,3516,style,noExplicitConstructor,Struct 'test_sqrt' has a constructor with 1 argument that is not explicit.,"Struct 'test_sqrt' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_sqrt
ggml/tests/test-backend-ops.cpp,3556,style,noExplicitConstructor,Struct 'test_log' has a constructor with 1 argument that is not explicit.,"Struct 'test_log' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_log
ggml/tests/test-backend-ops.cpp,3592,style,noExplicitConstructor,Struct 'test_sin' has a constructor with 1 argument that is not explicit.,"Struct 'test_sin' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_sin
ggml/tests/test-backend-ops.cpp,3635,style,noExplicitConstructor,Struct 'test_cos' has a constructor with 1 argument that is not explicit.,"Struct 'test_cos' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_cos
ggml/tests/test-backend-ops.cpp,3680,style,noExplicitConstructor,Struct 'test_clamp' has a constructor with 1 argument that is not explicit.,"Struct 'test_clamp' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_clamp
ggml/tests/test-backend-ops.cpp,3714,style,noExplicitConstructor,Struct 'test_diag_mask_inf' has a constructor with 1 argument that is not explicit.,"Struct 'test_diag_mask_inf' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_diag_mask_inf
ggml/tests/test-backend-ops.cpp,3752,style,noExplicitConstructor,Struct 'test_soft_max' has a constructor with 1 argument that is not explicit.,"Struct 'test_soft_max' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_soft_max
ggml/tests/test-backend-ops.cpp,3802,style,noExplicitConstructor,Struct 'test_soft_max_back' has a constructor with 1 argument that is not explicit.,"Struct 'test_soft_max_back' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_soft_max_back
ggml/tests/test-backend-ops.cpp,3841,style,noExplicitConstructor,Struct 'test_rope' has a constructor with 1 argument that is not explicit.,"Struct 'test_rope' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_rope
ggml/tests/test-backend-ops.cpp,3966,style,noExplicitConstructor,Struct 'test_pool2d' has a constructor with 1 argument that is not explicit.,"Struct 'test_pool2d' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_pool2d
ggml/tests/test-backend-ops.cpp,3999,style,noExplicitConstructor,Struct 'test_conv_transpose_1d' has a constructor with 1 argument that is not explicit.,"Struct 'test_conv_transpose_1d' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_conv_transpose_1d
ggml/tests/test-backend-ops.cpp,4032,style,noExplicitConstructor,Struct 'test_conv_transpose_2d' has a constructor with 1 argument that is not explicit.,"Struct 'test_conv_transpose_2d' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_conv_transpose_2d
ggml/tests/test-backend-ops.cpp,4074,style,noExplicitConstructor,Struct 'test_im2col' has a constructor with 1 argument that is not explicit.,"Struct 'test_im2col' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_im2col
ggml/tests/test-backend-ops.cpp,4125,style,noExplicitConstructor,Struct 'test_im2col_3d' has a constructor with 1 argument that is not explicit.,"Struct 'test_im2col_3d' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_im2col_3d
ggml/tests/test-backend-ops.cpp,4211,style,noExplicitConstructor,Struct 'test_conv_2d' has a constructor with 1 argument that is not explicit.,"Struct 'test_conv_2d' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_conv_2d
ggml/tests/test-backend-ops.cpp,4261,style,noExplicitConstructor,Struct 'test_conv_2d_dw' has a constructor with 1 argument that is not explicit.,"Struct 'test_conv_2d_dw' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_conv_2d_dw
ggml/tests/test-backend-ops.cpp,4371,style,noExplicitConstructor,Struct 'test_concat' has a constructor with 1 argument that is not explicit.,"Struct 'test_concat' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_concat
ggml/tests/test-backend-ops.cpp,4422,style,noExplicitConstructor,Struct 'test_argsort' has a constructor with 1 argument that is not explicit.,"Struct 'test_argsort' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_argsort
ggml/tests/test-backend-ops.cpp,4470,style,noExplicitConstructor,Struct 'test_topk_moe' has a constructor with 1 argument that is not explicit.,"Struct 'test_topk_moe' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_topk_moe
ggml/tests/test-backend-ops.cpp,4518,style,noExplicitConstructor,Struct 'test_sum' has a constructor with 1 argument that is not explicit.,"Struct 'test_sum' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_sum
ggml/tests/test-backend-ops.cpp,4549,style,noExplicitConstructor,Struct 'test_sum_rows' has a constructor with 1 argument that is not explicit.,"Struct 'test_sum_rows' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_sum_rows
ggml/tests/test-backend-ops.cpp,4584,style,noExplicitConstructor,Struct 'test_mean' has a constructor with 1 argument that is not explicit.,"Struct 'test_mean' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_mean
ggml/tests/test-backend-ops.cpp,4616,style,noExplicitConstructor,Struct 'test_upscale' has a constructor with 1 argument that is not explicit.,"Struct 'test_upscale' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_upscale
ggml/tests/test-backend-ops.cpp,4648,style,noExplicitConstructor,Struct 'test_interpolate' has a constructor with 1 argument that is not explicit.,"Struct 'test_interpolate' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_interpolate
ggml/tests/test-backend-ops.cpp,4676,style,noExplicitConstructor,Struct 'test_group_norm' has a constructor with 1 argument that is not explicit.,"Struct 'test_group_norm' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_group_norm
ggml/tests/test-backend-ops.cpp,4711,style,noExplicitConstructor,Struct 'test_group_norm_mul_add' has a constructor with 1 argument that is not explicit.,"Struct 'test_group_norm_mul_add' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_group_norm_mul_add
ggml/tests/test-backend-ops.cpp,4741,style,noExplicitConstructor,Struct 'test_l2_norm' has a constructor with 1 argument that is not explicit.,"Struct 'test_l2_norm' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_l2_norm
ggml/tests/test-backend-ops.cpp,4767,style,noExplicitConstructor,Struct 'test_acc' has a constructor with 1 argument that is not explicit.,"Struct 'test_acc' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_acc
ggml/tests/test-backend-ops.cpp,4799,style,noExplicitConstructor,Struct 'test_pad' has a constructor with 1 argument that is not explicit.,"Struct 'test_pad' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_pad
ggml/tests/test-backend-ops.cpp,4832,style,noExplicitConstructor,Struct 'test_pad_ext' has a constructor with 1 argument that is not explicit.,"Struct 'test_pad_ext' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_pad_ext
ggml/tests/test-backend-ops.cpp,4866,style,noExplicitConstructor,Struct 'test_pad_reflect_1d' has a constructor with 1 argument that is not explicit.,"Struct 'test_pad_reflect_1d' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_pad_reflect_1d
ggml/tests/test-backend-ops.cpp,4893,style,noExplicitConstructor,Struct 'test_roll' has a constructor with 1 argument that is not explicit.,"Struct 'test_roll' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_roll
ggml/tests/test-backend-ops.cpp,4919,style,noExplicitConstructor,Struct 'test_arange' has a constructor with 1 argument that is not explicit.,"Struct 'test_arange' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_arange
ggml/tests/test-backend-ops.cpp,4942,style,noExplicitConstructor,Struct 'test_timestep_embedding' has a constructor with 1 argument that is not explicit.,"Struct 'test_timestep_embedding' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_timestep_embedding
ggml/tests/test-backend-ops.cpp,4968,style,noExplicitConstructor,Struct 'test_leaky_relu' has a constructor with 1 argument that is not explicit.,"Struct 'test_leaky_relu' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_leaky_relu
ggml/tests/test-backend-ops.cpp,5018,style,noExplicitConstructor,Struct 'test_flash_attn_ext' has a constructor with 1 argument that is not explicit.,"Struct 'test_flash_attn_ext' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_flash_attn_ext
ggml/tests/test-backend-ops.cpp,5100,style,noExplicitConstructor,Struct 'test_cross_entropy_loss' has a constructor with 1 argument that is not explicit.,"Struct 'test_cross_entropy_loss' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_cross_entropy_loss
ggml/tests/test-backend-ops.cpp,5148,style,noExplicitConstructor,Struct 'test_cross_entropy_loss_back' has a constructor with 1 argument that is not explicit.,"Struct 'test_cross_entropy_loss_back' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_cross_entropy_loss_back
ggml/tests/test-backend-ops.cpp,5182,style,noExplicitConstructor,Struct 'test_opt_step_adamw' has a constructor with 1 argument that is not explicit.,"Struct 'test_opt_step_adamw' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_opt_step_adamw
ggml/tests/test-backend-ops.cpp,5226,style,noExplicitConstructor,Struct 'test_opt_step_sgd' has a constructor with 1 argument that is not explicit.,"Struct 'test_opt_step_sgd' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_opt_step_sgd
ggml/tests/test-backend-ops.cpp,5298,style,noExplicitConstructor,Struct 'test_llm' has a constructor with 1 argument that is not explicit.,"Struct 'test_llm' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_llm
ggml/tests/test-backend-ops.cpp,5423,style,noExplicitConstructor,Struct 'test_llama' has a constructor with 1 argument that is not explicit.,"Struct 'test_llama' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_llama
ggml/tests/test-backend-ops.cpp,5547,style,noExplicitConstructor,Struct 'test_falcon' has a constructor with 1 argument that is not explicit.,"Struct 'test_falcon' has a constructor with 1 argument that is not explicit. Such, so called ""Converting constructors"", should in general be explicit for type safety reasons as that prevents unintended implicit conversions.",398,5,,test_falcon
ggml/tests/test-backend-ops.cpp,6570,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,37,Second condition,
ggml/tests/test-backend-ops.cpp,6564,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,37,First condition,
ggml/tests/test-backend-ops.cpp,6584,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,37,Second condition,
ggml/tests/test-backend-ops.cpp,6570,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,37,First condition,
ggml/tests/test-backend-ops.cpp,7127,style,knownConditionTrueFalse,Condition 'output_printer' is always true,Condition 'output_printer' is always true,571,9,Condition 'output_printer' is always true,
ggml/tests/test-backend-ops.cpp,7185,warning,nullPointerRedundantCheck,Either the condition 'output_printer' is redundant or there is possible null pointer dereference: output_printer.,Either the condition 'output_printer' is redundant or there is possible null pointer dereference: output_printer.,476,5,Null pointer dereference,output_printer
ggml/tests/test-backend-ops.cpp,7181,warning,nullPointerRedundantCheck,Either the condition 'output_printer' is redundant or there is possible null pointer dereference: output_printer.,Either the condition 'output_printer' is redundant or there is possible null pointer dereference: output_printer.,476,9,Assuming that condition 'output_printer' is not redundant,output_printer
ggml/tests/test-backend-ops.cpp,165,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,46,,
ggml/tests/test-backend-ops.cpp,1173,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,38,,
ggml/tests/test-backend-ops.cpp,153,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,57,,
ggml/tests/test-backend-ops.cpp,155,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,57,,
ggml/tests/test-backend-ops.cpp,157,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,39,,
ggml/tests/test-backend-ops.cpp,159,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/tests/test-backend-ops.cpp,161,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/tests/test-backend-ops.cpp,163,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,46,,
ggml/tests/test-backend-ops.cpp,157,portability,invalidPointerCast,Casting between unsigned char * and float * which have an incompatible binary data representation.,Casting between unsigned char * and float * which have an incompatible binary data representation.,704,39,,
ggml/tests/test-backend-ops.cpp,1229,style,unreachableCode,Statements following 'return' will never be executed.,Statements following 'return' will never be executed.,561,13,,
ggml/tests/test-backend-ops.cpp,1293,style,shadowVariable,Local variable 'gf' shadows outer variable,Local variable 'gf' shadows outer variable,398,23,Shadow variable,gf
ggml/tests/test-backend-ops.cpp,1006,style,shadowVariable,Local variable 'gf' shadows outer variable,Local variable 'gf' shadows outer variable,398,19,Shadowed declaration,gf
ggml/tests/test-backend-ops.cpp,1352,style,shadowVariable,Local variable 'status' shadows outer variable,Local variable 'status' shadows outer variable,398,25,Shadow variable,status
ggml/tests/test-backend-ops.cpp,1297,style,shadowVariable,Local variable 'status' shadows outer variable,Local variable 'status' shadows outer variable,398,21,Shadowed declaration,status
ggml/tests/test-backend-ops.cpp,3387,style,shadowVariable,Local variable 'b' shadows outer variable,Local variable 'b' shadows outer variable,398,23,Shadow variable,b
ggml/tests/test-backend-ops.cpp,3348,style,shadowVariable,Local variable 'b' shadows outer variable,Local variable 'b' shadows outer variable,398,16,Shadowed declaration,b
ggml/tests/test-backend-ops.cpp,3767,style,shadowVariable,Local variable 'mask' shadows outer variable,Local variable 'mask' shadows outer variable,398,23,Shadow variable,mask
ggml/tests/test-backend-ops.cpp,3735,style,shadowVariable,Local variable 'mask' shadows outer variable,Local variable 'mask' shadows outer variable,398,16,Shadowed declaration,mask
ggml/tests/test-backend-ops.cpp,3773,style,shadowVariable,Local variable 'sinks' shadows outer variable,Local variable 'sinks' shadows outer variable,398,23,Shadow variable,sinks
ggml/tests/test-backend-ops.cpp,3736,style,shadowVariable,Local variable 'sinks' shadows outer variable,Local variable 'sinks' shadows outer variable,398,16,Shadowed declaration,sinks
ggml/tests/test-backend-ops.cpp,5988,style,shadowVariable,Local variable 's1' shadows outer variable,Local variable 's1' shadows outer variable,398,37,Shadow variable,s1
ggml/tests/test-backend-ops.cpp,5932,style,shadowVariable,Local variable 's1' shadows outer variable,Local variable 's1' shadows outer variable,398,14,Shadowed declaration,s1
ggml/tests/test-backend-ops.cpp,5989,style,shadowVariable,Local variable 'p0' shadows outer variable,Local variable 'p0' shadows outer variable,398,37,Shadow variable,p0
ggml/tests/test-backend-ops.cpp,5933,style,shadowVariable,Local variable 'p0' shadows outer variable,Local variable 'p0' shadows outer variable,398,14,Shadowed declaration,p0
ggml/tests/test-backend-ops.cpp,5990,style,shadowVariable,Local variable 'd0' shadows outer variable,Local variable 'd0' shadows outer variable,398,37,Shadow variable,d0
ggml/tests/test-backend-ops.cpp,5935,style,shadowVariable,Local variable 'd0' shadows outer variable,Local variable 'd0' shadows outer variable,398,14,Shadowed declaration,d0
ggml/tests/test-backend-ops.cpp,5990,style,shadowVariable,Local variable 'd1' shadows outer variable,Local variable 'd1' shadows outer variable,398,46,Shadow variable,d1
ggml/tests/test-backend-ops.cpp,5936,style,shadowVariable,Local variable 'd1' shadows outer variable,Local variable 'd1' shadows outer variable,398,14,Shadowed declaration,d1
ggml/tests/test-backend-ops.cpp,851,performance,redundantCopyLocalConst,Use const reference for 'fields' to avoid unnecessary data copying.,The const variable 'fields' is assigned a copy of the data. You can avoid the unnecessary data copying by converting 'fields' to const reference.,398,34,,fields
ggml/tests/test-backend-ops.cpp,862,performance,redundantCopyLocalConst,Use const reference for 'fields' to avoid unnecessary data copying.,The const variable 'fields' is assigned a copy of the data. You can avoid the unnecessary data copying by converting 'fields' to const reference.,398,34,,fields
ggml/tests/test-backend-ops.cpp,1692,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,2176,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,2224,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,2535,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,2707,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,3062,performance,passedByValue,Function parameter 'ne_b' should be passed by const reference.,Parameter 'ne_b' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne_b' should be passed by const reference.,ne_b
ggml/tests/test-backend-ops.cpp,3488,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,3517,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,3557,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,3593,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,3636,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,4519,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,4585,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,4769,performance,passedByValue,Function parameter 'ne_b' should be passed by const reference.,Parameter 'ne_b' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne_b' should be passed by const reference.,ne_b
ggml/tests/test-backend-ops.cpp,5101,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,5149,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,5183,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,5227,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,36,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,6145,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,74,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-backend-ops.cpp,1558,style,constVariablePointer,Variable 'grad' can be declared as pointer to const,Variable 'grad' can be declared as pointer to const,398,34,Variable 'grad' can be declared as pointer to const,grad
ggml/tests/test-backend-ops.cpp,4897,style,constVariable,Variable 'ne' can be declared as const array,Variable 'ne' can be declared as const array,398,17,Variable 'ne' can be declared as const array,ne
ggml/tests/test-backend-ops.cpp,5028,style,constVariable,Variable 'ne' can be declared as const array,Variable 'ne' can be declared as const array,398,21,Variable 'ne' can be declared as const array,ne
ggml/tests/test-backend-ops.cpp,210,style,useStlAlgorithm,Consider using std::any_of algorithm instead of a raw loop.,Consider using std::any_of algorithm instead of a raw loop.,398,47,,
ggml/tests/test-backend-ops.cpp,1567,style,useStlAlgorithm,Consider using std::find_if algorithm instead of a raw loop.,Consider using std::find_if algorithm instead of a raw loop.,398,44,,
ggml/tests/test-backend-ops.cpp,6767,style,useStlAlgorithm,Consider using std::transform algorithm instead of a raw loop.,Consider using std::transform algorithm instead of a raw loop.,398,24,,
ggml/tests/test-backend-ops.cpp,2463,style,truncLongCastAssignment,"float result is assigned to double variable. If the variable is double to avoid loss of information, then you have loss of information.","float result is assigned to double variable. If the variable is double to avoid loss of information, then there is loss of information. To avoid loss of information you must cast a calculation operand to double, for example 'l = a * b;' => 'l = (double)a * b;'.",197,33,,
ggml/tests/test-backend-ops.cpp,5918,style,useStlAlgorithm,Consider using std::transform algorithm instead of a raw loop.,Consider using std::transform algorithm instead of a raw loop.,398,24,,
ggml/tests/test-backend-ops.cpp,307,warning,dangerousTypeCast,"Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast","Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast",398,14,,
ggml/tests/test-backend-ops.cpp,307,portability,invalidPointerCast,Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms.,Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms.,704,14,,
ggml/tests/test-cont.c,1,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/tests/test-cont.c,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-cont.c,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-cont.c,9,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-cont.c,10,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-cont.c,39,style,knownConditionTrueFalse,Condition '!backend' is always true,Condition '!backend' is always true,571,9,Condition '!backend' is always true,
ggml/tests/test-cont.c,32,style,knownConditionTrueFalse,Condition '!backend' is always true,Condition '!backend' is always true,571,30,"Assignment 'backend=NULL', assigned value is 0",
ggml/tests/test-cont.c,94,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: buffer","If memory allocation fails, then there is a possible null pointer dereference: buffer",476,28,Null pointer dereference,buffer
ggml/tests/test-cont.c,90,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: buffer","If memory allocation fails, then there is a possible null pointer dereference: buffer",476,31,"Assignment 'buffer=malloc(bsize)', assigned value is 0",buffer
ggml/tests/test-cont.c,90,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: buffer","If memory allocation fails, then there is a possible null pointer dereference: buffer",476,31,Assuming allocation function fails,buffer
ggml/tests/test-cont.c,106,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: buffer","If memory allocation fails, then there is a possible null pointer dereference: buffer",476,46,Null pointer dereference,buffer
ggml/tests/test-cont.c,102,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: buffer","If memory allocation fails, then there is a possible null pointer dereference: buffer",476,37,"Assignment 'buffer=malloc(bsize)', assigned value is 0",buffer
ggml/tests/test-cont.c,102,warning,nullPointerOutOfMemory,"If memory allocation fails, then there is a possible null pointer dereference: buffer","If memory allocation fails, then there is a possible null pointer dereference: buffer",476,37,Assuming allocation function fails,buffer
ggml/tests/test-cont.c,135,style,constVariable,Variable 'expected_out' can be declared as const array,Variable 'expected_out' can be declared as const array,398,11,Variable 'expected_out' can be declared as const array,expected_out
ggml/tests/test-cont.c,133,style,unreadVariable,Variable 'buf_bf16' is assigned a value that is never used.,Variable 'buf_bf16' is assigned a value that is never used.,563,28,,buf_bf16
ggml/tests/test-cont.c,6,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/tests/test-conv-transpose-1d.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-conv-transpose-1d.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-conv-transpose-1d.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/tests/test-conv-transpose-1d.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/tests/test-conv-transpose-1d.cpp,14,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv-transpose-1d.cpp,15,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv-transpose-1d.cpp,16,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv-transpose-1d.cpp,17,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv-transpose-1d.cpp,18,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv-transpose-1d.cpp,19,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv-transpose-1d.cpp,20,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv-transpose-1d.cpp,21,information,missingIncludeSystem,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv-transpose-1d.cpp,372,style,variableScope,The scope of the variable 'n_threads' can be reduced.,"The scope of the variable 'n_threads' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,9,,n_threads
ggml/tests/test-conv-transpose-1d.cpp,422,style,constVariable,Variable 'expected_conv1d_0' can be declared as const array,Variable 'expected_conv1d_0' can be declared as const array,398,11,Variable 'expected_conv1d_0' can be declared as const array,expected_conv1d_0
ggml/tests/test-conv-transpose-1d.cpp,445,style,constVariable,Variable 'expected_conv1d_1' can be declared as const array,Variable 'expected_conv1d_1' can be declared as const array,398,11,Variable 'expected_conv1d_1' can be declared as const array,expected_conv1d_1
ggml/tests/test-conv-transpose-1d.cpp,464,style,constVariable,Variable 'expected_conv1d_2' can be declared as const array,Variable 'expected_conv1d_2' can be declared as const array,398,11,Variable 'expected_conv1d_2' can be declared as const array,expected_conv1d_2
ggml/tests/test-conv-transpose-1d.cpp,483,style,constVariable,Variable 'expected_conv1d_3' can be declared as const array,Variable 'expected_conv1d_3' can be declared as const array,398,11,Variable 'expected_conv1d_3' can be declared as const array,expected_conv1d_3
ggml/tests/test-conv-transpose-1d.cpp,503,style,constVariable,Variable 'expected_conv1d_4' can be declared as const array,Variable 'expected_conv1d_4' can be declared as const array,398,11,Variable 'expected_conv1d_4' can be declared as const array,expected_conv1d_4
ggml/tests/test-conv-transpose-1d.cpp,524,style,constVariable,Variable 'expected_conv1d_5' can be declared as const array,Variable 'expected_conv1d_5' can be declared as const array,398,11,Variable 'expected_conv1d_5' can be declared as const array,expected_conv1d_5
ggml/tests/test-conv-transpose-1d.cpp,545,style,constVariable,Variable 'expected_conv1d_6' can be declared as const array,Variable 'expected_conv1d_6' can be declared as const array,398,11,Variable 'expected_conv1d_6' can be declared as const array,expected_conv1d_6
ggml/tests/test-conv-transpose-1d.cpp,567,style,constVariable,Variable 'expected_conv1d_7' can be declared as const array,Variable 'expected_conv1d_7' can be declared as const array,398,11,Variable 'expected_conv1d_7' can be declared as const array,expected_conv1d_7
ggml/tests/test-conv-transpose-1d.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/tests/test-conv-transpose-1d.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/tests/test-conv-transpose.c,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-conv-transpose.c,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-conv-transpose.c,4,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv-transpose.c,5,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv-transpose.c,6,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv-transpose.c,77,style,variableScope,The scope of the variable 'expected_out_1' can be reduced.,"The scope of the variable 'expected_out_1' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,11,,expected_out_1
ggml/tests/test-conv-transpose.c,82,style,variableScope,The scope of the variable 'expected_out_2' can be reduced.,"The scope of the variable 'expected_out_2' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,11,,expected_out_2
ggml/tests/test-conv-transpose.c,87,style,variableScope,The scope of the variable 'expected_out_3' can be reduced.,"The scope of the variable 'expected_out_3' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,11,,expected_out_3
ggml/tests/test-conv-transpose.c,137,style,variableScope,The scope of the variable 'expected_out_1' can be reduced.,"The scope of the variable 'expected_out_1' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,11,,expected_out_1
ggml/tests/test-conv-transpose.c,155,style,variableScope,The scope of the variable 'expected_out_2' can be reduced.,"The scope of the variable 'expected_out_2' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,11,,expected_out_2
ggml/tests/test-conv-transpose.c,176,style,variableScope,The scope of the variable 'expected_out_3' can be reduced.,"The scope of the variable 'expected_out_3' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,11,,expected_out_3
ggml/tests/test-conv1d-dw-c1.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-conv1d-dw-c1.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-conv1d-dw-c1.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/tests/test-conv1d-dw-c1.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/tests/test-conv1d-dw-c1.cpp,14,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c1.cpp,15,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c1.cpp,16,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c1.cpp,17,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c1.cpp,18,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c1.cpp,19,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c1.cpp,20,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c1.cpp,21,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c1.cpp,171,style,variableScope,The scope of the variable 'n_threads' can be reduced.,"The scope of the variable 'n_threads' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,9,,n_threads
ggml/tests/test-conv1d-dw-c1.cpp,221,style,constVariable,Variable 'expected_conv1d_dw' can be declared as const array,Variable 'expected_conv1d_dw' can be declared as const array,398,11,Variable 'expected_conv1d_dw' can be declared as const array,expected_conv1d_dw
ggml/tests/test-conv1d-dw-c1.cpp,40,style,unreadVariable,Variable 'OC' is assigned a value that is never used.,Variable 'OC' is assigned a value that is never used.,563,27,,OC
ggml/tests/test-conv1d-dw-c1.cpp,40,style,unreadVariable,Variable 'OC' is assigned a value that is never used.,Variable 'OC' is assigned a value that is never used.,563,24,,OC
ggml/tests/test-conv1d-dw-c1.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/tests/test-conv1d-dw-c1.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/tests/test-conv1d-dw-c2.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-conv1d-dw-c2.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-conv1d-dw-c2.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/tests/test-conv1d-dw-c2.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/tests/test-conv1d-dw-c2.cpp,14,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c2.cpp,15,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c2.cpp,16,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c2.cpp,17,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c2.cpp,18,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c2.cpp,19,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c2.cpp,20,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c2.cpp,21,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d-dw-c2.cpp,171,style,variableScope,The scope of the variable 'n_threads' can be reduced.,"The scope of the variable 'n_threads' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,9,,n_threads
ggml/tests/test-conv1d-dw-c2.cpp,221,style,constVariable,Variable 'expected_conv1d_dw' can be declared as const array,Variable 'expected_conv1d_dw' can be declared as const array,398,11,Variable 'expected_conv1d_dw' can be declared as const array,expected_conv1d_dw
ggml/tests/test-conv1d-dw-c2.cpp,40,style,unreadVariable,Variable 'OC' is assigned a value that is never used.,Variable 'OC' is assigned a value that is never used.,563,27,,OC
ggml/tests/test-conv1d-dw-c2.cpp,40,style,unreadVariable,Variable 'OC' is assigned a value that is never used.,Variable 'OC' is assigned a value that is never used.,563,24,,OC
ggml/tests/test-conv1d-dw-c2.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/tests/test-conv1d-dw-c2.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/tests/test-conv1d.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-conv1d.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-conv1d.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/tests/test-conv1d.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/tests/test-conv1d.cpp,14,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d.cpp,15,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d.cpp,16,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d.cpp,17,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d.cpp,18,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d.cpp,19,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d.cpp,20,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d.cpp,21,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv1d.cpp,178,style,variableScope,The scope of the variable 'n_threads' can be reduced.,"The scope of the variable 'n_threads' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,9,,n_threads
ggml/tests/test-conv1d.cpp,234,style,constVariable,Variable 'expected_conv1d' can be declared as const array,Variable 'expected_conv1d' can be declared as const array,398,11,Variable 'expected_conv1d' can be declared as const array,expected_conv1d
ggml/tests/test-conv1d.cpp,248,style,constVariable,Variable 'expected_im2col' can be declared as const array,Variable 'expected_im2col' can be declared as const array,398,14,Variable 'expected_im2col' can be declared as const array,expected_im2col
ggml/tests/test-conv1d.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/tests/test-conv1d.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/tests/test-conv2d-dw.cpp,1,information,missingIncludeSystem,Include file: <ggml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d-dw.cpp,2,information,missingIncludeSystem,Include file: <ggml-cpu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-cpu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d-dw.cpp,3,information,missingIncludeSystem,Include file: <ggml-alloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-alloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d-dw.cpp,4,information,missingIncludeSystem,Include file: <ggml-backend.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-backend.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d-dw.cpp,5,information,missingIncludeSystem,Include file: <ggml-cpp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-cpp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d-dw.cpp,7,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d-dw.cpp,8,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d-dw.cpp,9,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d-dw.cpp,10,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d-dw.cpp,11,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-conv2d.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-conv2d.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/tests/test-conv2d.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/tests/test-conv2d.cpp,14,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d.cpp,15,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d.cpp,16,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d.cpp,17,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d.cpp,18,information,missingIncludeSystem,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d.cpp,19,information,missingIncludeSystem,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d.cpp,20,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d.cpp,21,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-conv2d.cpp,181,style,variableScope,The scope of the variable 'n_threads' can be reduced.,"The scope of the variable 'n_threads' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,9,,n_threads
ggml/tests/test-conv2d.cpp,237,style,constVariable,Variable 'expected_conv2d' can be declared as const array,Variable 'expected_conv2d' can be declared as const array,398,11,Variable 'expected_conv2d' can be declared as const array,expected_conv2d
ggml/tests/test-conv2d.cpp,299,style,constVariable,Variable 'expected_im2col' can be declared as const array,Variable 'expected_im2col' can be declared as const array,398,14,Variable 'expected_im2col' can be declared as const array,expected_im2col
ggml/tests/test-conv2d.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/tests/test-conv2d.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/tests/test-customop.c,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-customop.c,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-customop.c,4,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-customop.c,5,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-customop.c,6,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-customop.c,15,information,missingIncludeSystem,Include file: <stdatomic.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdatomic.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-customop.c,36,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom1' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom1' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,96,Parameter 'userdata' can be declared as pointer to const,userdata
ggml/tests/test-customop.c,191,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom1' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom1' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,60,You might need to cast the function pointer here,userdata
ggml/tests/test-customop.c,61,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom2' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom2' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,126,Parameter 'userdata' can be declared as pointer to const,userdata
ggml/tests/test-customop.c,217,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom2' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom2' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,65,You might need to cast the function pointer here,userdata
ggml/tests/test-customop.c,98,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom3' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom3' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,156,Parameter 'userdata' can be declared as pointer to const,userdata
ggml/tests/test-customop.c,247,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom3' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom3' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,69,You might need to cast the function pointer here,userdata
ggml/tests/test-customop.c,130,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,64,Parameter 'userdata' can be declared as pointer to const,userdata
ggml/tests/test-customop.c,283,style,constParameterCallback,"Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).","Parameter 'userdata' can be declared as pointer to const. However it seems that 'custom' is a callback function, if 'userdata' is declared with const you might also need to cast function pointer(s).",398,119,You might need to cast the function pointer here,userdata
ggml/tests/test-customop.c,9,information,missingIncludeSystem,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <windows.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-dup.c,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-dup.c,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-dup.c,4,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-dup.c,5,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-dup.c,36,style,constVariable,Variable 'type' can be declared as const array,Variable 'type' can be declared as const array,398,20,Variable 'type' can be declared as const array,type
ggml/tests/test-interpolate.cpp,1,information,missingIncludeSystem,Include file: <ggml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-interpolate.cpp,2,information,missingIncludeSystem,Include file: <ggml-cpu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-cpu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-interpolate.cpp,3,information,missingIncludeSystem,Include file: <ggml-alloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-alloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-interpolate.cpp,4,information,missingIncludeSystem,Include file: <ggml-backend.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-backend.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-interpolate.cpp,5,information,missingIncludeSystem,Include file: <ggml-cpp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-cpp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-interpolate.cpp,7,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-interpolate.cpp,8,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-interpolate.cpp,9,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-interpolate.cpp,10,information,missingIncludeSystem,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-interpolate.cpp,11,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-opt.cpp,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-opt.cpp,4,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/tests/test-opt.cpp,5,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/tests/test-opt.cpp,6,information,missingInclude,"Include file: ""ggml-opt.h"" not found.","Include file: ""ggml-opt.h"" not found.",,0,,
ggml/tests/test-opt.cpp,8,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-opt.cpp,9,information,missingIncludeSystem,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cinttypes> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-opt.cpp,10,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-opt.cpp,11,information,missingIncludeSystem,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-opt.cpp,12,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-opt.cpp,13,information,missingIncludeSystem,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <thread> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-opt.cpp,14,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-opt.cpp,557,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,13,Second condition,
ggml/tests/test-opt.cpp,551,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,13,First condition,
ggml/tests/test-opt.cpp,576,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,13,Second condition,
ggml/tests/test-opt.cpp,557,style,duplicateCondition,The if condition is the same as the previous if condition,The if condition is the same as the previous if condition,398,13,First condition,
ggml/tests/test-opt.cpp,738,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,22,,
ggml/tests/test-opt.cpp,659,style,knownConditionTrueFalse,The comparison 'ndata == 6' is always true.,Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.,398,31,,
ggml/tests/test-opt.cpp,24,style,knownConditionTrueFalse,The comparison 'ndata == 6' is always true.,Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.,398,34,'ndata' is assigned value '6' here.,
ggml/tests/test-opt.cpp,352,style,shadowVariable,Local variable 'ndata' shadows outer variable,Local variable 'ndata' shadows outer variable,398,17,Shadow variable,ndata
ggml/tests/test-opt.cpp,24,style,shadowVariable,Local variable 'ndata' shadows outer variable,Local variable 'ndata' shadows outer variable,398,19,Shadowed declaration,ndata
ggml/tests/test-opt.cpp,354,style,shadowVariable,Local variable 'loss' shadows outer variable,Local variable 'loss' shadows outer variable,398,16,Shadow variable,loss
ggml/tests/test-opt.cpp,344,style,shadowVariable,Local variable 'loss' shadows outer variable,Local variable 'loss' shadows outer variable,398,26,Shadowed declaration,loss
ggml/tests/test-opt.cpp,389,style,shadowVariable,Local variable 'ndata' shadows outer variable,Local variable 'ndata' shadows outer variable,398,17,Shadow variable,ndata
ggml/tests/test-opt.cpp,24,style,shadowVariable,Local variable 'ndata' shadows outer variable,Local variable 'ndata' shadows outer variable,398,19,Shadowed declaration,ndata
ggml/tests/test-opt.cpp,393,style,shadowVariable,Local variable 'loss' shadows outer variable,Local variable 'loss' shadows outer variable,398,16,Shadow variable,loss
ggml/tests/test-opt.cpp,344,style,shadowVariable,Local variable 'loss' shadows outer variable,Local variable 'loss' shadows outer variable,398,26,Shadowed declaration,loss
ggml/tests/test-opt.cpp,445,style,shadowVariable,Local variable 'ndata' shadows outer variable,Local variable 'ndata' shadows outer variable,398,17,Shadow variable,ndata
ggml/tests/test-opt.cpp,24,style,shadowVariable,Local variable 'ndata' shadows outer variable,Local variable 'ndata' shadows outer variable,398,19,Shadowed declaration,ndata
ggml/tests/test-opt.cpp,449,style,shadowVariable,Local variable 'loss' shadows outer variable,Local variable 'loss' shadows outer variable,398,16,Shadow variable,loss
ggml/tests/test-opt.cpp,344,style,shadowVariable,Local variable 'loss' shadows outer variable,Local variable 'loss' shadows outer variable,398,26,Shadowed declaration,loss
ggml/tests/test-opt.cpp,564,style,shadowVariable,Local variable 'loss' shadows outer variable,Local variable 'loss' shadows outer variable,398,20,Shadow variable,loss
ggml/tests/test-opt.cpp,521,style,shadowVariable,Local variable 'loss' shadows outer variable,Local variable 'loss' shadows outer variable,398,26,Shadowed declaration,loss
ggml/tests/test-opt.cpp,583,style,shadowVariable,Local variable 'loss' shadows outer variable,Local variable 'loss' shadows outer variable,398,20,Shadow variable,loss
ggml/tests/test-opt.cpp,521,style,shadowVariable,Local variable 'loss' shadows outer variable,Local variable 'loss' shadows outer variable,398,26,Shadowed declaration,loss
ggml/tests/test-opt.cpp,693,style,shadowVariable,Local variable 'adamw' shadows outer variable,Local variable 'adamw' shadows outer variable,398,20,Shadow variable,adamw
ggml/tests/test-opt.cpp,633,style,shadowVariable,Local variable 'adamw' shadows outer variable,Local variable 'adamw' shadows outer variable,398,16,Shadowed declaration,adamw
ggml/tests/test-opt.cpp,180,performance,passedByValue,Function parameter 'options' should be passed by const reference.,Parameter 'options' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,69,Function parameter 'options' should be passed by const reference.,options
ggml/tests/test-opt.cpp,181,performance,passedByValue,Function parameter 'subtest' should be passed by const reference.,Parameter 'subtest' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,27,Function parameter 'subtest' should be passed by const reference.,subtest
ggml/tests/test-opt.cpp,331,performance,passedByValue,Function parameter 'subtest' should be passed by const reference.,Parameter 'subtest' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,27,Function parameter 'subtest' should be passed by const reference.,subtest
ggml/tests/test-opt.cpp,508,performance,passedByValue,Function parameter 'subtest' should be passed by const reference.,Parameter 'subtest' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,27,Function parameter 'subtest' should be passed by const reference.,subtest
ggml/tests/test-opt.cpp,608,performance,passedByValue,Function parameter 'subtest' should be passed by const reference.,Parameter 'subtest' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,27,Function parameter 'subtest' should be passed by const reference.,subtest
ggml/tests/test-opt.cpp,258,style,useStlAlgorithm,Consider using std::accumulate algorithm instead of a raw loop.,Consider using std::accumulate algorithm instead of a raw loop.,398,36,,
ggml/tests/test-pad-reflect-1d.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-pad-reflect-1d.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-pad-reflect-1d.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/tests/test-pad-reflect-1d.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/tests/test-pad-reflect-1d.cpp,14,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-pad-reflect-1d.cpp,15,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-pad-reflect-1d.cpp,16,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-pad-reflect-1d.cpp,83,style,knownConditionTrueFalse,Condition '!backend' is always true,Condition '!backend' is always true,571,9,Condition '!backend' is always true,
ggml/tests/test-pad-reflect-1d.cpp,55,style,knownConditionTrueFalse,Condition '!backend' is always true,Condition '!backend' is always true,571,30,"Assignment 'backend=NULL', assigned value is 0",
ggml/tests/test-pad-reflect-1d.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/tests/test-pad-reflect-1d.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/tests/test-pool.c,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-pool.c,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-pool.c,4,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-pool.c,5,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-pool.c,6,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-fns.cpp,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-quantize-fns.cpp,4,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-quantize-fns.cpp,7,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-fns.cpp,8,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-fns.cpp,9,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-fns.cpp,10,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-fns.cpp,11,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-fns.cpp,101,style,constParameter,Parameter 'argv' can be declared as const array,Parameter 'argv' can be declared as const array,398,27,Parameter 'argv' can be declared as const array,argv
ggml/tests/test-quantize-perf.cpp,3,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-quantize-perf.cpp,4,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-quantize-perf.cpp,7,information,missingIncludeSystem,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-perf.cpp,8,information,missingIncludeSystem,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <assert.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-perf.cpp,9,information,missingIncludeSystem,Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-perf.cpp,10,information,missingIncludeSystem,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-perf.cpp,11,information,missingIncludeSystem,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-perf.cpp,12,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-perf.cpp,13,information,missingIncludeSystem,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-perf.cpp,14,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-quantize-perf.cpp,252,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/tests/test-quantize-perf.cpp,253,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/tests/test-quantize-perf.cpp,254,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/tests/test-quantize-perf.cpp,255,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/tests/test-quantize-perf.cpp,256,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,26,,
ggml/tests/test-quantize-perf.cpp,110,style,constParameter,Parameter 'argv' can be declared as const array,Parameter 'argv' can be declared as const array,398,26,Parameter 'argv' can be declared as const array,argv
ggml/tests/test-quantize-perf.cpp,45,information,missingIncludeSystem,Include file: <x86intrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <x86intrin.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-rel-pos.c,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-rel-pos.c,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-rel-pos.c,4,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-rel-pos.c,5,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-rel-pos.c,6,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-rel-pos.c,38,style,variableScope,The scope of the variable 'expected_out' can be reduced.,"The scope of the variable 'expected_out' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,11,,expected_out
ggml/tests/test-roll.cpp,1,information,missingIncludeSystem,Include file: <ggml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,2,information,missingIncludeSystem,Include file: <ggml-cpu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-cpu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,3,information,missingIncludeSystem,Include file: <ggml-alloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-alloc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,4,information,missingIncludeSystem,Include file: <ggml-backend.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-backend.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,5,information,missingIncludeSystem,Include file: <ggml-cpp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <ggml-cpp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,7,information,missingIncludeSystem,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,8,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,9,information,missingIncludeSystem,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,10,information,missingIncludeSystem,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,11,information,missingIncludeSystem,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <array> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,12,information,missingIncludeSystem,Include file: <numeric> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <numeric> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,13,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-roll.cpp,25,performance,passedByValue,Function parameter 'ne' should be passed by const reference.,Parameter 'ne' is passed by value. It could be passed as a const reference which is usually faster and recommended in C++.,398,47,Function parameter 'ne' should be passed by const reference.,ne
ggml/tests/test-timestep_embedding.cpp,1,information,missingInclude,"Include file: ""ggml.h"" not found.","Include file: ""ggml.h"" not found.",,0,,
ggml/tests/test-timestep_embedding.cpp,2,information,missingInclude,"Include file: ""ggml-cpu.h"" not found.","Include file: ""ggml-cpu.h"" not found.",,0,,
ggml/tests/test-timestep_embedding.cpp,3,information,missingInclude,"Include file: ""ggml-alloc.h"" not found.","Include file: ""ggml-alloc.h"" not found.",,0,,
ggml/tests/test-timestep_embedding.cpp,4,information,missingInclude,"Include file: ""ggml-backend.h"" not found.","Include file: ""ggml-backend.h"" not found.",,0,,
ggml/tests/test-timestep_embedding.cpp,14,information,missingIncludeSystem,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-timestep_embedding.cpp,15,information,missingIncludeSystem,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-timestep_embedding.cpp,16,information,missingIncludeSystem,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-timestep_embedding.cpp,17,information,missingIncludeSystem,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-timestep_embedding.cpp,18,information,missingIncludeSystem,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results.,,0,,
ggml/tests/test-timestep_embedding.cpp,125,style,knownConditionTrueFalse,Condition '!backend' is always true,Condition '!backend' is always true,571,13,Condition '!backend' is always true,
ggml/tests/test-timestep_embedding.cpp,94,style,knownConditionTrueFalse,Condition '!backend' is always true,Condition '!backend' is always true,571,34,"Assignment 'backend=NULL', assigned value is 0",
ggml/tests/test-timestep_embedding.cpp,22,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,15,,
ggml/tests/test-timestep_embedding.cpp,40,style,cstyleCast,C-style pointer casting,"C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected.",398,23,,
ggml/tests/test-timestep_embedding.cpp,153,style,variableScope,The scope of the variable 'n_threads' can be reduced.,"The scope of the variable 'n_threads' can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for 'i' can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it's safe to move 'int i = 0;' here\012        for (int n = 0; n < 10; ++n) {\012            // it is possible but not safe to move 'int i = 0;' here\012            do_something(&i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level.",398,13,,n_threads
ggml/tests/test-timestep_embedding.cpp,82,style,constVariablePointer,Variable 'vec1' can be declared as pointer to const,Variable 'vec1' can be declared as pointer to const,398,16,Variable 'vec1' can be declared as pointer to const,vec1
ggml/tests/test-timestep_embedding.cpp,7,information,missingInclude,"Include file: ""ggml-cuda.h"" not found.","Include file: ""ggml-cuda.h"" not found.",,0,,
ggml/tests/test-timestep_embedding.cpp,11,information,missingInclude,"Include file: ""ggml-metal.h"" not found.","Include file: ""ggml-metal.h"" not found.",,0,,
ggml/examples/gpt-2/main-alloc.cpp,56,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'gpt2_model'","The one definition rule is violated, different classes/structs have the same name 'gpt2_model'",758,1,,gpt2_model
ggml/examples/gpt-2/main-backend.cpp,73,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'gpt2_model'","The one definition rule is violated, different classes/structs have the same name 'gpt2_model'",758,1,,gpt2_model
ggml/examples/gpt-2/main-alloc.cpp,56,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'gpt2_model'","The one definition rule is violated, different classes/structs have the same name 'gpt2_model'",758,1,,gpt2_model
ggml/examples/gpt-2/main-batched.cpp,105,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'gpt2_model'","The one definition rule is violated, different classes/structs have the same name 'gpt2_model'",758,1,,gpt2_model
ggml/examples/gpt-2/main-alloc.cpp,56,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'gpt2_model'","The one definition rule is violated, different classes/structs have the same name 'gpt2_model'",758,1,,gpt2_model
ggml/examples/gpt-2/main-sched.cpp,77,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'gpt2_model'","The one definition rule is violated, different classes/structs have the same name 'gpt2_model'",758,1,,gpt2_model
ggml/examples/gpt-2/main-alloc.cpp,23,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'gpt2_hparams'","The one definition rule is violated, different classes/structs have the same name 'gpt2_hparams'",758,1,,gpt2_hparams
ggml/examples/gpt-2/quantize.cpp,17,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'gpt2_hparams'","The one definition rule is violated, different classes/structs have the same name 'gpt2_hparams'",758,1,,gpt2_hparams
ggml/examples/gpt-j/main.cpp,22,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'gptj_hparams'","The one definition rule is violated, different classes/structs have the same name 'gptj_hparams'",758,1,,gptj_hparams
ggml/examples/gpt-j/quantize.cpp,17,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'gptj_hparams'","The one definition rule is violated, different classes/structs have the same name 'gptj_hparams'",758,1,,gptj_hparams
ggml/examples/simple/simple-backend.cpp,31,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'simple_model'","The one definition rule is violated, different classes/structs have the same name 'simple_model'",758,1,,simple_model
ggml/examples/simple/simple-ctx.cpp,14,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'simple_model'","The one definition rule is violated, different classes/structs have the same name 'simple_model'",758,1,,simple_model
ggml/tests/test-conv-transpose-1d.cpp,30,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'test_model'","The one definition rule is violated, different classes/structs have the same name 'test_model'",758,1,,test_model
ggml/tests/test-conv1d-dw-c1.cpp,30,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'test_model'","The one definition rule is violated, different classes/structs have the same name 'test_model'",758,1,,test_model
ggml/tests/test-conv-transpose-1d.cpp,30,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'test_model'","The one definition rule is violated, different classes/structs have the same name 'test_model'",758,1,,test_model
ggml/tests/test-conv1d-dw-c2.cpp,30,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'test_model'","The one definition rule is violated, different classes/structs have the same name 'test_model'",758,1,,test_model
ggml/tests/test-conv-transpose-1d.cpp,30,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'test_model'","The one definition rule is violated, different classes/structs have the same name 'test_model'",758,1,,test_model
ggml/tests/test-conv1d.cpp,30,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'test_model'","The one definition rule is violated, different classes/structs have the same name 'test_model'",758,1,,test_model
ggml/tests/test-conv-transpose-1d.cpp,30,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'test_model'","The one definition rule is violated, different classes/structs have the same name 'test_model'",758,1,,test_model
ggml/tests/test-conv2d.cpp,30,error,ctuOneDefinitionRuleViolation,"The one definition rule is violated, different classes/structs have the same name 'test_model'","The one definition rule is violated, different classes/structs have the same name 'test_model'",758,1,,test_model
ggml/examples/common.cpp,136,style,unusedFunction,The function 'trim' is never used.,The function 'trim' is never used.,561,13,,trim
ggml/examples/common.cpp,151,style,unusedFunction,The function 'add_special_token' is never used.,The function 'add_special_token' is never used.,561,17,,add_special_token
ggml/examples/common.cpp,382,style,unusedFunction,The function 'gpt_vocab_init' is never used.,The function 'gpt_vocab_init' is never used.,561,6,,gpt_vocab_init
ggml/examples/common.cpp,481,style,unusedFunction,The function 'gpt_sample_top_k_top_p_repeat' is never used.,The function 'gpt_sample_top_k_top_p_repeat' is never used.,561,15,,gpt_sample_top_k_top_p_repeat
ggml/examples/common.cpp,610,style,unusedFunction,The function 'vad_simple' is never used.,The function 'vad_simple' is never used.,561,6,,vad_simple
ggml/examples/common.cpp,648,style,unusedFunction,The function 'similarity' is never used.,The function 'similarity' is never used.,561,7,,similarity
ggml/examples/common.cpp,672,style,unusedFunction,The function 'is_file_exist' is never used.,The function 'is_file_exist' is never used.,561,6,,is_file_exist
ggml/examples/sam/sam.cpp,335,style,unusedFunction,The function 'print_t_f32' is never used.,The function 'print_t_f32' is never used.,561,6,,print_t_f32
ggml/src/ggml-cann/ggml-cann.cpp,59,style,unusedFunction,The function 'ggml_cann_error' is never used.,The function 'ggml_cann_error' is never used.,561,19,,ggml_cann_error
ggml/src/ggml-cann/ggml-cann.cpp,92,style,unusedFunction,The function 'ggml_cann_get_device' is never used.,The function 'ggml_cann_get_device' is never used.,561,9,,ggml_cann_get_device
ggml/src/ggml-cann/ggml-cann.cpp,128,style,unusedFunction,The function 'parse_integer' is never used.,The function 'parse_integer' is never used.,561,5,,parse_integer
ggml/src/ggml-cann/ggml-cann.cpp,1617,style,unusedFunction,The function 'ggml_backend_cann_host_buffer_name' is never used.,The function 'ggml_backend_cann_host_buffer_name' is never used.,561,21,,ggml_backend_cann_host_buffer_name
ggml/src/ggml-cann/ggml-cann.cpp,3036,style,unusedFunction,The function 'ggml_backend_cann_get_device_description' is never used.,The function 'ggml_backend_cann_get_device_description' is never used.,561,6,,ggml_backend_cann_get_device_description
ggml/src/ggml-cpu/amx/mmq.cpp,272,style,unusedFunction,The function 'FP16_TO_FP32' is never used.,The function 'FP16_TO_FP32' is never used.,561,14,,FP16_TO_FP32
ggml/src/ggml-cpu/amx/mmq.cpp,279,style,unusedFunction,The function 'FP16_TO_FP32_VEC' is never used.,The function 'FP16_TO_FP32_VEC' is never used.,561,15,,FP16_TO_FP32_VEC
ggml/src/ggml-cpu/amx/mmq.cpp,428,style,unusedFunction,The function 'quantize_row_q8_K_vnni' is never used.,The function 'quantize_row_q8_K_vnni' is never used.,561,6,,quantize_row_q8_K_vnni
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,17,style,unusedFunction,The function 'SSE3' is never used.,The function 'SSE3' is never used.,561,10,,SSE3
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,18,style,unusedFunction,The function 'PCLMULQDQ' is never used.,The function 'PCLMULQDQ' is never used.,561,10,,PCLMULQDQ
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,19,style,unusedFunction,The function 'MONITOR' is never used.,The function 'MONITOR' is never used.,561,10,,MONITOR
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,20,style,unusedFunction,The function 'SSSE3' is never used.,The function 'SSSE3' is never used.,561,10,,SSSE3
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,22,style,unusedFunction,The function 'CMPXCHG16B' is never used.,The function 'CMPXCHG16B' is never used.,561,10,,CMPXCHG16B
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,23,style,unusedFunction,The function 'SSE41' is never used.,The function 'SSE41' is never used.,561,10,,SSE41
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,24,style,unusedFunction,The function 'SSE42' is never used.,The function 'SSE42' is never used.,561,10,,SSE42
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,25,style,unusedFunction,The function 'MOVBE' is never used.,The function 'MOVBE' is never used.,561,10,,MOVBE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,26,style,unusedFunction,The function 'POPCNT' is never used.,The function 'POPCNT' is never used.,561,10,,POPCNT
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,27,style,unusedFunction,The function 'AES' is never used.,The function 'AES' is never used.,561,10,,AES
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,28,style,unusedFunction,The function 'XSAVE' is never used.,The function 'XSAVE' is never used.,561,10,,XSAVE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,29,style,unusedFunction,The function 'OSXSAVE' is never used.,The function 'OSXSAVE' is never used.,561,10,,OSXSAVE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,32,style,unusedFunction,The function 'RDRAND' is never used.,The function 'RDRAND' is never used.,561,10,,RDRAND
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,34,style,unusedFunction,The function 'MSR' is never used.,The function 'MSR' is never used.,561,10,,MSR
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,35,style,unusedFunction,The function 'CX8' is never used.,The function 'CX8' is never used.,561,10,,CX8
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,36,style,unusedFunction,The function 'SEP' is never used.,The function 'SEP' is never used.,561,10,,SEP
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,37,style,unusedFunction,The function 'CMOV' is never used.,The function 'CMOV' is never used.,561,10,,CMOV
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,38,style,unusedFunction,The function 'CLFSH' is never used.,The function 'CLFSH' is never used.,561,10,,CLFSH
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,39,style,unusedFunction,The function 'MMX' is never used.,The function 'MMX' is never used.,561,10,,MMX
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,40,style,unusedFunction,The function 'FXSR' is never used.,The function 'FXSR' is never used.,561,10,,FXSR
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,41,style,unusedFunction,The function 'SSE' is never used.,The function 'SSE' is never used.,561,10,,SSE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,42,style,unusedFunction,The function 'SSE2' is never used.,The function 'SSE2' is never used.,561,10,,SSE2
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,44,style,unusedFunction,The function 'FSGSBASE' is never used.,The function 'FSGSBASE' is never used.,561,10,,FSGSBASE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,45,style,unusedFunction,The function 'BMI1' is never used.,The function 'BMI1' is never used.,561,10,,BMI1
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,46,style,unusedFunction,The function 'HLE' is never used.,The function 'HLE' is never used.,561,10,,HLE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,49,style,unusedFunction,The function 'ERMS' is never used.,The function 'ERMS' is never used.,561,10,,ERMS
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,50,style,unusedFunction,The function 'INVPCID' is never used.,The function 'INVPCID' is never used.,561,10,,INVPCID
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,51,style,unusedFunction,The function 'RTM' is never used.,The function 'RTM' is never used.,561,10,,RTM
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,54,style,unusedFunction,The function 'RDSEED' is never used.,The function 'RDSEED' is never used.,561,10,,RDSEED
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,55,style,unusedFunction,The function 'ADX' is never used.,The function 'ADX' is never used.,561,10,,ADX
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,56,style,unusedFunction,The function 'AVX512PF' is never used.,The function 'AVX512PF' is never used.,561,10,,AVX512PF
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,57,style,unusedFunction,The function 'AVX512ER' is never used.,The function 'AVX512ER' is never used.,561,10,,AVX512ER
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,62,style,unusedFunction,The function 'SHA' is never used.,The function 'SHA' is never used.,561,10,,SHA
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,64,style,unusedFunction,The function 'PREFETCHWT1' is never used.,The function 'PREFETCHWT1' is never used.,561,10,,PREFETCHWT1
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,66,style,unusedFunction,The function 'LAHF' is never used.,The function 'LAHF' is never used.,561,10,,LAHF
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,67,style,unusedFunction,The function 'LZCNT' is never used.,The function 'LZCNT' is never used.,561,10,,LZCNT
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,68,style,unusedFunction,The function 'ABM' is never used.,The function 'ABM' is never used.,561,10,,ABM
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,69,style,unusedFunction,The function 'SSE4a' is never used.,The function 'SSE4a' is never used.,561,10,,SSE4a
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,70,style,unusedFunction,The function 'XOP' is never used.,The function 'XOP' is never used.,561,10,,XOP
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,71,style,unusedFunction,The function 'TBM' is never used.,The function 'TBM' is never used.,561,10,,TBM
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,73,style,unusedFunction,The function 'SYSCALL' is never used.,The function 'SYSCALL' is never used.,561,10,,SYSCALL
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,74,style,unusedFunction,The function 'MMXEXT' is never used.,The function 'MMXEXT' is never used.,561,10,,MMXEXT
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,75,style,unusedFunction,The function 'RDTSCP' is never used.,The function 'RDTSCP' is never used.,561,10,,RDTSCP
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,76,style,unusedFunction,The function '_3DNOWEXT' is never used.,The function '_3DNOWEXT' is never used.,561,10,,_3DNOWEXT
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,77,style,unusedFunction,The function '_3DNOW' is never used.,The function '_3DNOW' is never used.,561,10,,_3DNOW
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,81,style,unusedFunction,The function 'AVX512_FP16' is never used.,The function 'AVX512_FP16' is never used.,561,10,,AVX512_FP16
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,85,style,unusedFunction,The function 'AMX_TILE' is never used.,The function 'AMX_TILE' is never used.,561,10,,AMX_TILE
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,87,style,unusedFunction,The function 'AMX_FP16' is never used.,The function 'AMX_FP16' is never used.,561,10,,AMX_FP16
ggml/src/ggml-cpu/arch/x86/cpu-feats.cpp,88,style,unusedFunction,The function 'AMX_BF16' is never used.,The function 'AMX_BF16' is never used.,561,10,,AMX_BF16
ggml/src/ggml-cpu/arch/x86/quants.c,30,style,unusedFunction,The function 'mul_sum_i8_pairs' is never used.,The function 'mul_sum_i8_pairs' is never used.,561,23,,mul_sum_i8_pairs
ggml/src/ggml-cpu/arch/x86/quants.c,61,style,unusedFunction,The function 'hsum_i32_4' is never used.,The function 'hsum_i32_4' is never used.,561,19,,hsum_i32_4
ggml/src/ggml-cpu/ggml-cpu.c,167,style,unusedFunction,The function 'sched_yield' is never used.,The function 'sched_yield' is never used.,561,12,,sched_yield
ggml/src/ggml-cpu/ggml-cpu.c,699,style,unusedFunction,The function 'ggml_new_i32' is never used.,The function 'ggml_new_i32' is never used.,561,22,,ggml_new_i32
ggml/src/ggml-cpu/ggml-cpu.c,709,style,unusedFunction,The function 'ggml_new_f32' is never used.,The function 'ggml_new_f32' is never used.,561,22,,ggml_new_f32
ggml/src/ggml-cpu/ggml-cpu.c,1018,style,unusedFunction,The function 'ggml_set_f32_1d' is never used.,The function 'ggml_set_f32_1d' is never used.,561,6,,ggml_set_f32_1d
ggml/src/ggml-cpu/ggml-cpu.c,2653,style,unusedFunction,The function 'ggml_threadpool_resume' is never used.,The function 'ggml_threadpool_resume' is never used.,561,6,,ggml_threadpool_resume
ggml/src/ggml-cpu/ggml-cpu.c,3247,style,unusedFunction,The function 'ggml_cpu_fp16_to_fp32' is never used.,The function 'ggml_cpu_fp16_to_fp32' is never used.,561,6,,ggml_cpu_fp16_to_fp32
ggml/src/ggml-cpu/ggml-cpu.c,3288,style,unusedFunction,The function 'ggml_cpu_bf16_to_fp32' is never used.,The function 'ggml_cpu_bf16_to_fp32' is never used.,561,6,,ggml_cpu_bf16_to_fp32
ggml/src/ggml-cpu/hbm.cpp,40,style,unusedFunction,The function 'ggml_backend_cpu_hbm_buffer_type' is never used.,The function 'ggml_backend_cpu_hbm_buffer_type' is never used.,561,28,,ggml_backend_cpu_hbm_buffer_type
ggml/src/ggml-cpu/llamafile/sgemm.cpp,109,style,unusedFunction,The function 'sub' is never used.,The function 'sub' is never used.,561,20,,sub
ggml/src/ggml-cpu/quants.c,41,style,unusedFunction,The function 'quantize_row_q8_0_generic' is never used.,The function 'quantize_row_q8_0_generic' is never used.,561,6,,quantize_row_q8_0_generic
ggml/src/ggml-cpu/quants.c,45,style,unusedFunction,The function 'quantize_row_q8_1_generic' is never used.,The function 'quantize_row_q8_1_generic' is never used.,561,6,,quantize_row_q8_1_generic
ggml/src/ggml-cpu/quants.c,109,style,unusedFunction,The function 'quantize_row_q8_K_generic' is never used.,The function 'quantize_row_q8_K_generic' is never used.,561,6,,quantize_row_q8_K_generic
ggml/src/ggml-cpu/simd-mappings.h,54,style,unusedFunction,The function 'neon_compute_fp32_to_fp16' is never used.,The function 'neon_compute_fp32_to_fp16' is never used.,561,31,,neon_compute_fp32_to_fp16
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,79,style,unusedFunction,The function 'quantize_a_4row_i8' is never used.,The function 'quantize_a_4row_i8' is never used.,561,6,,quantize_a_4row_i8
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,344,style,unusedFunction,The function 'quantize_a_row_i8' is never used.,The function 'quantize_a_row_i8' is never used.,561,6,,quantize_a_row_i8
ggml/src/ggml-cpu/spacemit/ime1_kernels.cpp,3157,style,unusedFunction,The function 'gemm_kernel_i8i4' is never used.,The function 'gemm_kernel_i8i4' is never used.,561,8,,gemm_kernel_i8i4
ggml/src/ggml-cpu/vec.h,54,style,unusedFunction,The function 'ggml_vec_cpy_i32' is never used.,The function 'ggml_vec_cpy_i32' is never used.,561,20,,ggml_vec_cpy_i32
ggml/src/ggml-cpu/vec.h,59,style,unusedFunction,The function 'ggml_vec_add_f32' is never used.,The function 'ggml_vec_add_f32' is never used.,561,20,,ggml_vec_add_f32
ggml/src/ggml-cpu/vec.h,74,style,unusedFunction,The function 'ggml_vec_add_f16' is never used.,The function 'ggml_vec_add_f16' is never used.,561,20,,ggml_vec_add_f16
ggml/src/ggml-cpu/vec.h,79,style,unusedFunction,The function 'ggml_vec_add1_f32' is never used.,The function 'ggml_vec_add1_f32' is never used.,561,20,,ggml_vec_add1_f32
ggml/src/ggml-cpu/vec.h,80,style,unusedFunction,The function 'ggml_vec_acc_f32' is never used.,The function 'ggml_vec_acc_f32' is never used.,561,20,,ggml_vec_acc_f32
ggml/src/ggml-cpu/vec.h,81,style,unusedFunction,The function 'ggml_vec_acc1_f32' is never used.,The function 'ggml_vec_acc1_f32' is never used.,561,20,,ggml_vec_acc1_f32
ggml/src/ggml-cpu/vec.h,82,style,unusedFunction,The function 'ggml_vec_sub_f32' is never used.,The function 'ggml_vec_sub_f32' is never used.,561,20,,ggml_vec_sub_f32
ggml/src/ggml-cpu/vec.h,83,style,unusedFunction,The function 'ggml_vec_sub_f16' is never used.,The function 'ggml_vec_sub_f16' is never used.,561,20,,ggml_vec_sub_f16
ggml/src/ggml-cpu/vec.h,89,style,unusedFunction,The function 'ggml_vec_cpy_f32' is never used.,The function 'ggml_vec_cpy_f32' is never used.,561,20,,ggml_vec_cpy_f32
ggml/src/ggml-cpu/vec.h,90,style,unusedFunction,The function 'ggml_vec_neg_f32' is never used.,The function 'ggml_vec_neg_f32' is never used.,561,20,,ggml_vec_neg_f32
ggml/src/ggml-cpu/vec.h,91,style,unusedFunction,The function 'ggml_vec_neg_f16' is never used.,The function 'ggml_vec_neg_f16' is never used.,561,20,,ggml_vec_neg_f16
ggml/src/ggml-cpu/vec.h,97,style,unusedFunction,The function 'ggml_vec_mul_f32' is never used.,The function 'ggml_vec_mul_f32' is never used.,561,20,,ggml_vec_mul_f32
ggml/src/ggml-cpu/vec.h,98,style,unusedFunction,The function 'ggml_vec_mul_f16' is never used.,The function 'ggml_vec_mul_f16' is never used.,561,20,,ggml_vec_mul_f16
ggml/src/ggml-cpu/vec.h,103,style,unusedFunction,The function 'ggml_vec_div_f32' is never used.,The function 'ggml_vec_div_f32' is never used.,561,20,,ggml_vec_div_f32
ggml/src/ggml-cpu/vec.h,104,style,unusedFunction,The function 'ggml_vec_div_f16' is never used.,The function 'ggml_vec_div_f16' is never used.,561,20,,ggml_vec_div_f16
ggml/src/ggml-cpu/vec.h,112,style,unusedFunction,The function 'ggml_vec_dot_f16_unroll' is never used.,The function 'ggml_vec_dot_f16_unroll' is never used.,561,20,,ggml_vec_dot_f16_unroll
ggml/src/ggml-cpu/vec.h,278,style,unusedFunction,The function 'ggml_vec_mad_f32' is never used.,The function 'ggml_vec_mad_f32' is never used.,561,20,,ggml_vec_mad_f32
ggml/src/ggml-cpu/vec.h,398,style,unusedFunction,The function 'ggml_vec_mad_f16' is never used.,The function 'ggml_vec_mad_f16' is never used.,561,20,,ggml_vec_mad_f16
ggml/src/ggml-cpu/vec.h,515,style,unusedFunction,The function 'ggml_vec_mad_f32_unroll' is never used.,The function 'ggml_vec_mad_f32_unroll' is never used.,561,20,,ggml_vec_mad_f32_unroll
ggml/src/ggml-cpu/vec.h,585,style,unusedFunction,The function 'ggml_vec_mad1_f32' is never used.,The function 'ggml_vec_mad1_f32' is never used.,561,20,,ggml_vec_mad1_f32
ggml/src/ggml-cpu/vec.h,633,style,unusedFunction,The function 'ggml_vec_scale_f32' is never used.,The function 'ggml_vec_scale_f32' is never used.,561,20,,ggml_vec_scale_f32
ggml/src/ggml-cpu/vec.h,699,style,unusedFunction,The function 'ggml_vec_scale_f16' is never used.,The function 'ggml_vec_scale_f16' is never used.,561,20,,ggml_vec_scale_f16
ggml/src/ggml-cpu/vec.h,763,style,unusedFunction,The function 'ggml_vec_sqr_f32' is never used.,The function 'ggml_vec_sqr_f32' is never used.,561,20,,ggml_vec_sqr_f32
ggml/src/ggml-cpu/vec.h,764,style,unusedFunction,The function 'ggml_vec_sqr_f16' is never used.,The function 'ggml_vec_sqr_f16' is never used.,561,20,,ggml_vec_sqr_f16
ggml/src/ggml-cpu/vec.h,770,style,unusedFunction,The function 'ggml_vec_sqrt_f32' is never used.,The function 'ggml_vec_sqrt_f32' is never used.,561,20,,ggml_vec_sqrt_f32
ggml/src/ggml-cpu/vec.h,771,style,unusedFunction,The function 'ggml_vec_sqrt_f16' is never used.,The function 'ggml_vec_sqrt_f16' is never used.,561,20,,ggml_vec_sqrt_f16
ggml/src/ggml-cpu/vec.h,776,style,unusedFunction,The function 'ggml_vec_log_f32' is never used.,The function 'ggml_vec_log_f32' is never used.,561,20,,ggml_vec_log_f32
ggml/src/ggml-cpu/vec.h,777,style,unusedFunction,The function 'ggml_vec_log_f16' is never used.,The function 'ggml_vec_log_f16' is never used.,561,20,,ggml_vec_log_f16
ggml/src/ggml-cpu/vec.h,782,style,unusedFunction,The function 'ggml_vec_sin_f32' is never used.,The function 'ggml_vec_sin_f32' is never used.,561,20,,ggml_vec_sin_f32
ggml/src/ggml-cpu/vec.h,783,style,unusedFunction,The function 'ggml_vec_sin_f16' is never used.,The function 'ggml_vec_sin_f16' is never used.,561,20,,ggml_vec_sin_f16
ggml/src/ggml-cpu/vec.h,788,style,unusedFunction,The function 'ggml_vec_cos_f32' is never used.,The function 'ggml_vec_cos_f32' is never used.,561,20,,ggml_vec_cos_f32
ggml/src/ggml-cpu/vec.h,789,style,unusedFunction,The function 'ggml_vec_cos_f16' is never used.,The function 'ggml_vec_cos_f16' is never used.,561,20,,ggml_vec_cos_f16
ggml/src/ggml-cpu/vec.h,794,style,unusedFunction,The function 'ggml_vec_abs_f32' is never used.,The function 'ggml_vec_abs_f32' is never used.,561,20,,ggml_vec_abs_f32
ggml/src/ggml-cpu/vec.h,795,style,unusedFunction,The function 'ggml_vec_abs_f16' is never used.,The function 'ggml_vec_abs_f16' is never used.,561,20,,ggml_vec_abs_f16
ggml/src/ggml-cpu/vec.h,800,style,unusedFunction,The function 'ggml_vec_sgn_f32' is never used.,The function 'ggml_vec_sgn_f32' is never used.,561,20,,ggml_vec_sgn_f32
ggml/src/ggml-cpu/vec.h,801,style,unusedFunction,The function 'ggml_vec_sgn_f16' is never used.,The function 'ggml_vec_sgn_f16' is never used.,561,20,,ggml_vec_sgn_f16
ggml/src/ggml-cpu/vec.h,807,style,unusedFunction,The function 'ggml_vec_step_f32' is never used.,The function 'ggml_vec_step_f32' is never used.,561,20,,ggml_vec_step_f32
ggml/src/ggml-cpu/vec.h,808,style,unusedFunction,The function 'ggml_vec_step_f16' is never used.,The function 'ggml_vec_step_f16' is never used.,561,20,,ggml_vec_step_f16
ggml/src/ggml-cpu/vec.h,813,style,unusedFunction,The function 'ggml_vec_tanh_f32' is never used.,The function 'ggml_vec_tanh_f32' is never used.,561,20,,ggml_vec_tanh_f32
ggml/src/ggml-cpu/vec.h,814,style,unusedFunction,The function 'ggml_vec_tanh_f16' is never used.,The function 'ggml_vec_tanh_f16' is never used.,561,20,,ggml_vec_tanh_f16
ggml/src/ggml-cpu/vec.h,819,style,unusedFunction,The function 'ggml_vec_elu_f32' is never used.,The function 'ggml_vec_elu_f32' is never used.,561,20,,ggml_vec_elu_f32
ggml/src/ggml-cpu/vec.h,820,style,unusedFunction,The function 'ggml_vec_elu_f16' is never used.,The function 'ggml_vec_elu_f16' is never used.,561,20,,ggml_vec_elu_f16
ggml/src/ggml-cpu/vec.h,825,style,unusedFunction,The function 'ggml_vec_relu_f32' is never used.,The function 'ggml_vec_relu_f32' is never used.,561,20,,ggml_vec_relu_f32
ggml/src/ggml-cpu/vec.h,826,style,unusedFunction,The function 'ggml_vec_relu_f16' is never used.,The function 'ggml_vec_relu_f16' is never used.,561,20,,ggml_vec_relu_f16
ggml/src/ggml-cpu/vec.h,832,style,unusedFunction,The function 'ggml_vec_leaky_relu_f32' is never used.,The function 'ggml_vec_leaky_relu_f32' is never used.,561,20,,ggml_vec_leaky_relu_f32
ggml/src/ggml-cpu/vec.h,833,style,unusedFunction,The function 'ggml_vec_leaky_relu_f16' is never used.,The function 'ggml_vec_leaky_relu_f16' is never used.,561,20,,ggml_vec_leaky_relu_f16
ggml/src/ggml-cpu/vec.h,839,style,unusedFunction,The function 'ggml_vec_sigmoid_f32' is never used.,The function 'ggml_vec_sigmoid_f32' is never used.,561,20,,ggml_vec_sigmoid_f32
ggml/src/ggml-cpu/vec.h,840,style,unusedFunction,The function 'ggml_vec_sigmoid_f16' is never used.,The function 'ggml_vec_sigmoid_f16' is never used.,561,20,,ggml_vec_sigmoid_f16
ggml/src/ggml-cpu/vec.h,846,style,unusedFunction,The function 'ggml_vec_hardswish_f32' is never used.,The function 'ggml_vec_hardswish_f32' is never used.,561,20,,ggml_vec_hardswish_f32
ggml/src/ggml-cpu/vec.h,847,style,unusedFunction,The function 'ggml_vec_hardswish_f16' is never used.,The function 'ggml_vec_hardswish_f16' is never used.,561,20,,ggml_vec_hardswish_f16
ggml/src/ggml-cpu/vec.h,853,style,unusedFunction,The function 'ggml_vec_hardsigmoid_f32' is never used.,The function 'ggml_vec_hardsigmoid_f32' is never used.,561,20,,ggml_vec_hardsigmoid_f32
ggml/src/ggml-cpu/vec.h,854,style,unusedFunction,The function 'ggml_vec_hardsigmoid_f16' is never used.,The function 'ggml_vec_hardsigmoid_f16' is never used.,561,20,,ggml_vec_hardsigmoid_f16
ggml/src/ggml-cpu/vec.h,859,style,unusedFunction,The function 'ggml_vec_exp_f32' is never used.,The function 'ggml_vec_exp_f32' is never used.,561,20,,ggml_vec_exp_f32
ggml/src/ggml-cpu/vec.h,860,style,unusedFunction,The function 'ggml_vec_exp_f16' is never used.,The function 'ggml_vec_exp_f16' is never used.,561,20,,ggml_vec_exp_f16
ggml/src/ggml-cpu/vec.h,875,style,unusedFunction,The function 'ggml_vec_gelu_f16' is never used.,The function 'ggml_vec_gelu_f16' is never used.,561,20,,ggml_vec_gelu_f16
ggml/src/ggml-cpu/vec.h,882,style,unusedFunction,The function 'ggml_vec_gelu_erf_f16' is never used.,The function 'ggml_vec_gelu_erf_f16' is never used.,561,20,,ggml_vec_gelu_erf_f16
ggml/src/ggml-cpu/vec.h,891,style,unusedFunction,The function 'ggml_vec_gelu_f32' is never used.,The function 'ggml_vec_gelu_f32' is never used.,561,20,,ggml_vec_gelu_f32
ggml/src/ggml-cpu/vec.h,913,style,unusedFunction,The function 'ggml_vec_gelu_erf_f32' is never used.,The function 'ggml_vec_gelu_erf_f32' is never used.,561,20,,ggml_vec_gelu_erf_f32
ggml/src/ggml-cpu/vec.h,932,style,unusedFunction,The function 'ggml_vec_gelu_quick_f32' is never used.,The function 'ggml_vec_gelu_quick_f32' is never used.,561,20,,ggml_vec_gelu_quick_f32
ggml/src/ggml-cpu/vec.h,948,style,unusedFunction,The function 'ggml_vec_gelu_quick_f16' is never used.,The function 'ggml_vec_gelu_quick_f16' is never used.,561,20,,ggml_vec_gelu_quick_f16
ggml/src/ggml-cpu/vec.h,1282,style,unusedFunction,The function 'ggml_vec_silu_f16' is never used.,The function 'ggml_vec_silu_f16' is never used.,561,20,,ggml_vec_silu_f16
ggml/src/ggml-cpu/vec.h,1299,style,unusedFunction,The function 'ggml_vec_silu_backward_f32' is never used.,The function 'ggml_vec_silu_backward_f32' is never used.,561,20,,ggml_vec_silu_backward_f32
ggml/src/ggml-cpu/vec.h,1305,style,unusedFunction,The function 'ggml_vec_silu_backward_f16' is never used.,The function 'ggml_vec_silu_backward_f16' is never used.,561,20,,ggml_vec_silu_backward_f16
ggml/src/ggml-cpu/vec.h,1311,style,unusedFunction,The function 'ggml_vec_reglu_f32' is never used.,The function 'ggml_vec_reglu_f32' is never used.,561,20,,ggml_vec_reglu_f32
ggml/src/ggml-cpu/vec.h,1317,style,unusedFunction,The function 'ggml_vec_reglu_f16' is never used.,The function 'ggml_vec_reglu_f16' is never used.,561,20,,ggml_vec_reglu_f16
ggml/src/ggml-cpu/vec.h,1325,style,unusedFunction,The function 'ggml_vec_geglu_f32' is never used.,The function 'ggml_vec_geglu_f32' is never used.,561,20,,ggml_vec_geglu_f32
ggml/src/ggml-cpu/vec.h,1347,style,unusedFunction,The function 'ggml_vec_geglu_f16' is never used.,The function 'ggml_vec_geglu_f16' is never used.,561,20,,ggml_vec_geglu_f16
ggml/src/ggml-cpu/vec.h,1357,style,unusedFunction,The function 'ggml_vec_swiglu_f16' is never used.,The function 'ggml_vec_swiglu_f16' is never used.,561,20,,ggml_vec_swiglu_f16
ggml/src/ggml-cpu/vec.h,1365,style,unusedFunction,The function 'ggml_vec_geglu_erf_f32' is never used.,The function 'ggml_vec_geglu_erf_f32' is never used.,561,20,,ggml_vec_geglu_erf_f32
ggml/src/ggml-cpu/vec.h,1372,style,unusedFunction,The function 'ggml_vec_geglu_erf_f16' is never used.,The function 'ggml_vec_geglu_erf_f16' is never used.,561,20,,ggml_vec_geglu_erf_f16
ggml/src/ggml-cpu/vec.h,1381,style,unusedFunction,The function 'ggml_vec_geglu_quick_f32' is never used.,The function 'ggml_vec_geglu_quick_f32' is never used.,561,20,,ggml_vec_geglu_quick_f32
ggml/src/ggml-cpu/vec.h,1397,style,unusedFunction,The function 'ggml_vec_geglu_quick_f16' is never used.,The function 'ggml_vec_geglu_quick_f16' is never used.,561,20,,ggml_vec_geglu_quick_f16
ggml/src/ggml-cpu/vec.h,1405,style,unusedFunction,The function 'ggml_vec_sum_f32' is never used.,The function 'ggml_vec_sum_f32' is never used.,561,20,,ggml_vec_sum_f32
ggml/src/ggml-cpu/vec.h,1417,style,unusedFunction,The function 'ggml_vec_sum_f32_ggf' is never used.,The function 'ggml_vec_sum_f32_ggf' is never used.,561,20,,ggml_vec_sum_f32_ggf
ggml/src/ggml-cpu/vec.h,1425,style,unusedFunction,The function 'ggml_vec_sum_f16_ggf' is never used.,The function 'ggml_vec_sum_f16_ggf' is never used.,561,20,,ggml_vec_sum_f16_ggf
ggml/src/ggml-cpu/vec.h,1433,style,unusedFunction,The function 'ggml_vec_sum_bf16_ggf' is never used.,The function 'ggml_vec_sum_bf16_ggf' is never used.,561,20,,ggml_vec_sum_bf16_ggf
ggml/src/ggml-cpu/vec.h,1441,style,unusedFunction,The function 'ggml_vec_max_f32' is never used.,The function 'ggml_vec_max_f32' is never used.,561,20,,ggml_vec_max_f32
ggml/src/ggml-cpu/vec.h,1453,style,unusedFunction,The function 'ggml_vec_norm_inv_f32' is never used.,The function 'ggml_vec_norm_inv_f32' is never used.,561,20,,ggml_vec_norm_inv_f32
ggml/src/ggml-cpu/vec.h,1458,style,unusedFunction,The function 'ggml_vec_argmax_f32' is never used.,The function 'ggml_vec_argmax_f32' is never used.,561,20,,ggml_vec_argmax_f32
ggml/src/ggml-metal/ggml-metal.cpp,486,style,unusedFunction,The function 'ggml_backend_metal_set_abort_callback' is never used.,The function 'ggml_backend_metal_set_abort_callback' is never used.,561,6,,ggml_backend_metal_set_abort_callback
ggml/src/ggml-metal/ggml-metal.cpp,494,style,unusedFunction,The function 'ggml_backend_metal_supports_family' is never used.,The function 'ggml_backend_metal_supports_family' is never used.,561,6,,ggml_backend_metal_supports_family
ggml/src/ggml-opencl/kernels/add.cl,10,style,unusedFunction,The function 'kernel_add' is never used.,The function 'kernel_add' is never used.,561,13,,kernel_add
ggml/src/ggml-opencl/kernels/add.cl,66,style,unusedFunction,The function 'kernel_add_row' is never used.,The function 'kernel_add_row' is never used.,561,13,,kernel_add_row
ggml/src/ggml-opencl/kernels/add.cl,85,style,unusedFunction,The function 'kernel_add_f16' is never used.,The function 'kernel_add_f16' is never used.,561,13,,kernel_add_f16
ggml/src/ggml-opencl/kernels/add.cl,155,style,unusedFunction,The function 'kernel_add_row_f16' is never used.,The function 'kernel_add_row_f16' is never used.,561,13,,kernel_add_row_f16
ggml/src/ggml-opencl/kernels/add_id.cl,6,style,unusedFunction,The function 'kernel_add_id' is never used.,The function 'kernel_add_id' is never used.,561,13,,kernel_add_id
ggml/src/ggml-opencl/kernels/argsort.cl,28,style,unusedFunction,The function 'kernel_argsort_f32_i32' is never used.,The function 'kernel_argsort_f32_i32' is never used.,561,13,,kernel_argsort_f32_i32
ggml/src/ggml-opencl/kernels/clamp.cl,6,style,unusedFunction,The function 'kernel_clamp' is never used.,The function 'kernel_clamp' is never used.,561,13,,kernel_clamp
ggml/src/ggml-opencl/kernels/concat.cl,1,style,unusedFunction,The function 'kernel_concat_f32_contiguous' is never used.,The function 'kernel_concat_f32_contiguous' is never used.,561,13,,kernel_concat_f32_contiguous
ggml/src/ggml-opencl/kernels/concat.cl,53,style,unusedFunction,The function 'kernel_concat_f32_non_contiguous' is never used.,The function 'kernel_concat_f32_non_contiguous' is never used.,561,13,,kernel_concat_f32_non_contiguous
ggml/src/ggml-opencl/kernels/conv2d.cl,40,style,unusedFunction,The function 'kernel_conv_2d' is never used.,The function 'kernel_conv_2d' is never used.,561,13,,kernel_conv_2d
ggml/src/ggml-opencl/kernels/cpy.cl,7,style,unusedFunction,The function 'kernel_cpy_f16_f16' is never used.,The function 'kernel_cpy_f16_f16' is never used.,561,13,,kernel_cpy_f16_f16
ggml/src/ggml-opencl/kernels/cpy.cl,51,style,unusedFunction,The function 'kernel_cpy_f16_f32' is never used.,The function 'kernel_cpy_f16_f32' is never used.,561,13,,kernel_cpy_f16_f32
ggml/src/ggml-opencl/kernels/cpy.cl,96,style,unusedFunction,The function 'kernel_cpy_f32_f16' is never used.,The function 'kernel_cpy_f32_f16' is never used.,561,13,,kernel_cpy_f32_f16
ggml/src/ggml-opencl/kernels/cpy.cl,141,style,unusedFunction,The function 'kernel_cpy_f32_f32' is never used.,The function 'kernel_cpy_f32_f32' is never used.,561,13,,kernel_cpy_f32_f32
ggml/src/ggml-opencl/kernels/cvt.cl,54,style,unusedFunction,The function 'kernel_convert_block_q4_0' is never used.,The function 'kernel_convert_block_q4_0' is never used.,561,13,,kernel_convert_block_q4_0
ggml/src/ggml-opencl/kernels/cvt.cl,70,style,unusedFunction,The function 'kernel_restore_block_q4_0' is never used.,The function 'kernel_restore_block_q4_0' is never used.,561,13,,kernel_restore_block_q4_0
ggml/src/ggml-opencl/kernels/cvt.cl,90,style,unusedFunction,The function 'kernel_convert_block_q4_0_noshuffle' is never used.,The function 'kernel_convert_block_q4_0_noshuffle' is never used.,561,13,,kernel_convert_block_q4_0_noshuffle
ggml/src/ggml-opencl/kernels/cvt.cl,134,style,unusedFunction,The function 'kernel_convert_block_mxfp4' is never used.,The function 'kernel_convert_block_mxfp4' is never used.,561,13,,kernel_convert_block_mxfp4
ggml/src/ggml-opencl/kernels/cvt.cl,150,style,unusedFunction,The function 'kernel_restore_block_mxfp4' is never used.,The function 'kernel_restore_block_mxfp4' is never used.,561,13,,kernel_restore_block_mxfp4
ggml/src/ggml-opencl/kernels/cvt.cl,173,style,unusedFunction,The function 'kernel_convert_block_q8_0' is never used.,The function 'kernel_convert_block_q8_0' is never used.,561,13,,kernel_convert_block_q8_0
ggml/src/ggml-opencl/kernels/cvt.cl,189,style,unusedFunction,The function 'kernel_restore_block_q8_0' is never used.,The function 'kernel_restore_block_q8_0' is never used.,561,13,,kernel_restore_block_q8_0
ggml/src/ggml-opencl/kernels/diag_mask_inf.cl,6,style,unusedFunction,The function 'kernel_diag_mask_inf' is never used.,The function 'kernel_diag_mask_inf' is never used.,561,13,,kernel_diag_mask_inf
ggml/src/ggml-opencl/kernels/diag_mask_inf.cl,29,style,unusedFunction,The function 'kernel_diag_mask_inf_8' is never used.,The function 'kernel_diag_mask_inf_8' is never used.,561,13,,kernel_diag_mask_inf_8
ggml/src/ggml-opencl/kernels/div.cl,6,style,unusedFunction,The function 'kernel_div' is never used.,The function 'kernel_div' is never used.,561,13,,kernel_div
ggml/src/ggml-opencl/kernels/div.cl,55,style,unusedFunction,The function 'kernel_div_row' is never used.,The function 'kernel_div_row' is never used.,561,13,,kernel_div_row
ggml/src/ggml-opencl/kernels/div.cl,74,style,unusedFunction,The function 'kernel_div_f16' is never used.,The function 'kernel_div_f16' is never used.,561,13,,kernel_div_f16
ggml/src/ggml-opencl/kernels/div.cl,121,style,unusedFunction,The function 'kernel_div_row_f16' is never used.,The function 'kernel_div_row_f16' is never used.,561,13,,kernel_div_row_f16
ggml/src/ggml-opencl/kernels/flash_attn_f16.cl,26,style,unusedFunction,The function 'flash_attn_f16' is never used.,The function 'flash_attn_f16' is never used.,561,15,,flash_attn_f16
ggml/src/ggml-opencl/kernels/flash_attn_f16.cl,207,style,unusedFunction,The function 'flash_attn_f16_q1' is never used.,The function 'flash_attn_f16_q1' is never used.,561,15,,flash_attn_f16_q1
ggml/src/ggml-opencl/kernels/flash_attn_f32.cl,26,style,unusedFunction,The function 'flash_attn_f32' is never used.,The function 'flash_attn_f32' is never used.,561,15,,flash_attn_f32
ggml/src/ggml-opencl/kernels/flash_attn_f32.cl,207,style,unusedFunction,The function 'flash_attn_f32_q1' is never used.,The function 'flash_attn_f32_q1' is never used.,561,15,,flash_attn_f32_q1
ggml/src/ggml-opencl/kernels/flash_attn_f32_f16.cl,29,style,unusedFunction,The function 'flash_attn_f32_f16' is never used.,The function 'flash_attn_f32_f16' is never used.,561,15,,flash_attn_f32_f16
ggml/src/ggml-opencl/kernels/flash_attn_f32_f16.cl,210,style,unusedFunction,The function 'flash_attn_f32_f16_q1' is never used.,The function 'flash_attn_f32_f16_q1' is never used.,561,15,,flash_attn_f32_f16_q1
ggml/src/ggml-opencl/kernels/gelu.cl,11,style,unusedFunction,The function 'kernel_gelu' is never used.,The function 'kernel_gelu' is never used.,561,13,,kernel_gelu
ggml/src/ggml-opencl/kernels/gelu.cl,25,style,unusedFunction,The function 'kernel_gelu_4' is never used.,The function 'kernel_gelu_4' is never used.,561,13,,kernel_gelu_4
ggml/src/ggml-opencl/kernels/gelu.cl,39,style,unusedFunction,The function 'kernel_gelu_erf' is never used.,The function 'kernel_gelu_erf' is never used.,561,13,,kernel_gelu_erf
ggml/src/ggml-opencl/kernels/gelu.cl,52,style,unusedFunction,The function 'kernel_gelu_erf_4' is never used.,The function 'kernel_gelu_erf_4' is never used.,561,13,,kernel_gelu_erf_4
ggml/src/ggml-opencl/kernels/gelu.cl,65,style,unusedFunction,The function 'kernel_gelu_quick' is never used.,The function 'kernel_gelu_quick' is never used.,561,13,,kernel_gelu_quick
ggml/src/ggml-opencl/kernels/gelu.cl,78,style,unusedFunction,The function 'kernel_gelu_quick_4' is never used.,The function 'kernel_gelu_quick_4' is never used.,561,13,,kernel_gelu_quick_4
ggml/src/ggml-opencl/kernels/gemv_noshuffle.cl,194,style,unusedFunction,The function 'kernel_gemv_noshuffle' is never used.,The function 'kernel_gemv_noshuffle' is never used.,561,15,,kernel_gemv_noshuffle
ggml/src/ggml-opencl/kernels/get_rows.cl,62,style,unusedFunction,The function 'kernel_get_rows_f32' is never used.,The function 'kernel_get_rows_f32' is never used.,561,13,,kernel_get_rows_f32
ggml/src/ggml-opencl/kernels/get_rows.cl,95,style,unusedFunction,The function 'kernel_get_rows_f16' is never used.,The function 'kernel_get_rows_f16' is never used.,561,13,,kernel_get_rows_f16
ggml/src/ggml-opencl/kernels/get_rows.cl,128,style,unusedFunction,The function 'kernel_get_rows_q4_0' is never used.,The function 'kernel_get_rows_q4_0' is never used.,561,13,,kernel_get_rows_q4_0
ggml/src/ggml-opencl/kernels/glu.cl,11,style,unusedFunction,The function 'kernel_geglu' is never used.,The function 'kernel_geglu' is never used.,561,13,,kernel_geglu
ggml/src/ggml-opencl/kernels/glu.cl,43,style,unusedFunction,The function 'kernel_geglu_f16' is never used.,The function 'kernel_geglu_f16' is never used.,561,13,,kernel_geglu_f16
ggml/src/ggml-opencl/kernels/glu.cl,78,style,unusedFunction,The function 'kernel_reglu' is never used.,The function 'kernel_reglu' is never used.,561,13,,kernel_reglu
ggml/src/ggml-opencl/kernels/glu.cl,108,style,unusedFunction,The function 'kernel_reglu_f16' is never used.,The function 'kernel_reglu_f16' is never used.,561,13,,kernel_reglu_f16
ggml/src/ggml-opencl/kernels/glu.cl,141,style,unusedFunction,The function 'kernel_swiglu' is never used.,The function 'kernel_swiglu' is never used.,561,13,,kernel_swiglu
ggml/src/ggml-opencl/kernels/glu.cl,173,style,unusedFunction,The function 'kernel_swiglu_f16' is never used.,The function 'kernel_swiglu_f16' is never used.,561,13,,kernel_swiglu_f16
ggml/src/ggml-opencl/kernels/glu.cl,208,style,unusedFunction,The function 'kernel_swiglu_oai' is never used.,The function 'kernel_swiglu_oai' is never used.,561,13,,kernel_swiglu_oai
ggml/src/ggml-opencl/kernels/glu.cl,249,style,unusedFunction,The function 'kernel_geglu_erf' is never used.,The function 'kernel_geglu_erf' is never used.,561,13,,kernel_geglu_erf
ggml/src/ggml-opencl/kernels/glu.cl,281,style,unusedFunction,The function 'kernel_geglu_erf_f16' is never used.,The function 'kernel_geglu_erf_f16' is never used.,561,13,,kernel_geglu_erf_f16
ggml/src/ggml-opencl/kernels/glu.cl,316,style,unusedFunction,The function 'kernel_geglu_quick' is never used.,The function 'kernel_geglu_quick' is never used.,561,13,,kernel_geglu_quick
ggml/src/ggml-opencl/kernels/glu.cl,348,style,unusedFunction,The function 'kernel_geglu_quick_f16' is never used.,The function 'kernel_geglu_quick_f16' is never used.,561,13,,kernel_geglu_quick_f16
ggml/src/ggml-opencl/kernels/group_norm.cl,27,style,unusedFunction,The function 'kernel_group_norm' is never used.,The function 'kernel_group_norm' is never used.,561,13,,kernel_group_norm
ggml/src/ggml-opencl/kernels/group_norm.cl,82,style,unusedFunction,The function 'kernel_group_norm_mul_add' is never used.,The function 'kernel_group_norm_mul_add' is never used.,561,13,,kernel_group_norm_mul_add
ggml/src/ggml-opencl/kernels/im2col_f16.cl,3,style,unusedFunction,The function 'kernel_im2col_f16' is never used.,The function 'kernel_im2col_f16' is never used.,561,13,,kernel_im2col_f16
ggml/src/ggml-opencl/kernels/im2col_f32.cl,3,style,unusedFunction,The function 'kernel_im2col_f32' is never used.,The function 'kernel_im2col_f32' is never used.,561,13,,kernel_im2col_f32
ggml/src/ggml-opencl/kernels/mul.cl,6,style,unusedFunction,The function 'kernel_mul' is never used.,The function 'kernel_mul' is never used.,561,13,,kernel_mul
ggml/src/ggml-opencl/kernels/mul.cl,62,style,unusedFunction,The function 'kernel_mul_row' is never used.,The function 'kernel_mul_row' is never used.,561,13,,kernel_mul_row
ggml/src/ggml-opencl/kernels/mul.cl,81,style,unusedFunction,The function 'kernel_mul_f16' is never used.,The function 'kernel_mul_f16' is never used.,561,13,,kernel_mul_f16
ggml/src/ggml-opencl/kernels/mul.cl,135,style,unusedFunction,The function 'kernel_mul_row_f16' is never used.,The function 'kernel_mul_row_f16' is never used.,561,13,,kernel_mul_row_f16
ggml/src/ggml-opencl/kernels/mul_mat_Ab_Bi_8x4.cl,20,style,unusedFunction,The function 'kernel_mul_mat_Ab_Bi_8x4' is never used.,The function 'kernel_mul_mat_Ab_Bi_8x4' is never used.,561,13,,kernel_mul_mat_Ab_Bi_8x4
ggml/src/ggml-opencl/kernels/mul_mat_f16_f32.cl,21,style,unusedFunction,The function 'mul_mat_f16_f32' is never used.,The function 'mul_mat_f16_f32' is never used.,561,15,,mul_mat_f16_f32
ggml/src/ggml-opencl/kernels/mul_mm_f16_f32_l4_lm.cl,12,style,unusedFunction,The function 'kernel_mul_mm_f16_f32_l4_lm' is never used.,The function 'kernel_mul_mm_f16_f32_l4_lm' is never used.,561,13,,kernel_mul_mm_f16_f32_l4_lm
ggml/src/ggml-opencl/kernels/mul_mm_f32_f32_l4_lm.cl,12,style,unusedFunction,The function 'kernel_mul_mm_f32_f32_l4_lm' is never used.,The function 'kernel_mul_mm_f32_f32_l4_lm' is never used.,561,13,,kernel_mul_mm_f32_f32_l4_lm
ggml/src/ggml-opencl/kernels/mul_mv_f16_f16.cl,26,style,unusedFunction,The function 'kernel_mul_mat_f16_f16' is never used.,The function 'kernel_mul_mat_f16_f16' is never used.,561,13,,kernel_mul_mat_f16_f16
ggml/src/ggml-opencl/kernels/mul_mv_f16_f32.cl,26,style,unusedFunction,The function 'kernel_mul_mat_f16_f32' is never used.,The function 'kernel_mul_mat_f16_f32' is never used.,561,13,,kernel_mul_mat_f16_f32
ggml/src/ggml-opencl/kernels/mul_mv_f16_f32_1row.cl,24,style,unusedFunction,The function 'kernel_mul_mat_f16_f32_1row' is never used.,The function 'kernel_mul_mat_f16_f32_1row' is never used.,561,13,,kernel_mul_mat_f16_f32_1row
ggml/src/ggml-opencl/kernels/mul_mv_f16_f32_l4.cl,25,style,unusedFunction,The function 'kernel_mul_mat_f16_f32_l4' is never used.,The function 'kernel_mul_mat_f16_f32_l4' is never used.,561,13,,kernel_mul_mat_f16_f32_l4
ggml/src/ggml-opencl/kernels/mul_mv_f32_f32.cl,26,style,unusedFunction,The function 'kernel_mul_mat_f32_f32' is never used.,The function 'kernel_mul_mat_f32_f32' is never used.,561,13,,kernel_mul_mat_f32_f32
ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32.cl,139,style,unusedFunction,The function 'kernel_mul_mv_id_mxfp4_f32' is never used.,The function 'kernel_mul_mv_id_mxfp4_f32' is never used.,561,13,,kernel_mul_mv_id_mxfp4_f32
ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32_flat.cl,68,style,unusedFunction,The function 'kernel_mul_mv_id_mxfp4_f32_flat' is never used.,The function 'kernel_mul_mv_id_mxfp4_f32_flat' is never used.,561,13,,kernel_mul_mv_id_mxfp4_f32_flat
ggml/src/ggml-opencl/kernels/mul_mv_id_q4_0_f32_8x_flat.cl,235,style,unusedFunction,The function 'kernel_mul_mv_id_q4_0_f32_8x_flat' is never used.,The function 'kernel_mul_mv_id_q4_0_f32_8x_flat' is never used.,561,13,,kernel_mul_mv_id_q4_0_f32_8x_flat
ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32.cl,44,style,unusedFunction,The function 'kernel_mul_mv_id_q8_0_f32' is never used.,The function 'kernel_mul_mv_id_q8_0_f32' is never used.,561,13,,kernel_mul_mv_id_q8_0_f32
ggml/src/ggml-opencl/kernels/mul_mv_id_q8_0_f32_flat.cl,44,style,unusedFunction,The function 'kernel_mul_mv_id_q8_0_f32_flat' is never used.,The function 'kernel_mul_mv_id_q8_0_f32_flat' is never used.,561,13,,kernel_mul_mv_id_q8_0_f32_flat
ggml/src/ggml-opencl/kernels/mul_mv_mxfp4_f32.cl,58,style,unusedFunction,The function 'kernel_mul_mv_mxfp4_f32' is never used.,The function 'kernel_mul_mv_mxfp4_f32' is never used.,561,13,,kernel_mul_mv_mxfp4_f32
ggml/src/ggml-opencl/kernels/mul_mv_mxfp4_f32_flat.cl,73,style,unusedFunction,The function 'kernel_mul_mv_mxfp4_f32_flat' is never used.,The function 'kernel_mul_mv_mxfp4_f32_flat' is never used.,561,13,,kernel_mul_mv_mxfp4_f32_flat
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl,170,style,unusedFunction,The function 'kernel_mul_mat_q4_0_f32' is never used.,The function 'kernel_mul_mat_q4_0_f32' is never used.,561,13,,kernel_mul_mat_q4_0_f32
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl,286,style,unusedFunction,The function 'kernel_mul_mat_q4_0_f32_1d_16x_flat' is never used.,The function 'kernel_mul_mat_q4_0_f32_1d_16x_flat' is never used.,561,13,,kernel_mul_mat_q4_0_f32_1d_16x_flat
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl,244,style,unusedFunction,The function 'kernel_mul_mat_q4_0_f32_1d_8x_flat' is never used.,The function 'kernel_mul_mat_q4_0_f32_1d_8x_flat' is never used.,561,13,,kernel_mul_mat_q4_0_f32_1d_8x_flat
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_8x_flat.cl,251,style,unusedFunction,The function 'kernel_mul_mat_q4_0_f32_8x_flat' is never used.,The function 'kernel_mul_mat_q4_0_f32_8x_flat' is never used.,561,13,,kernel_mul_mat_q4_0_f32_8x_flat
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl,232,style,unusedFunction,The function 'kernel_mul_mat_q4_0_f32_v' is never used.,The function 'kernel_mul_mat_q4_0_f32_v' is never used.,561,13,,kernel_mul_mat_q4_0_f32_v
ggml/src/ggml-opencl/kernels/mul_mv_q6_k.cl,80,style,unusedFunction,The function 'kernel_mul_mv_q6_K_f32' is never used.,The function 'kernel_mul_mv_q6_K_f32' is never used.,561,13,,kernel_mul_mv_q6_K_f32
ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32.cl,44,style,unusedFunction,The function 'kernel_mul_mv_q8_0_f32' is never used.,The function 'kernel_mul_mv_q8_0_f32' is never used.,561,13,,kernel_mul_mv_q8_0_f32
ggml/src/ggml-opencl/kernels/mul_mv_q8_0_f32_flat.cl,44,style,unusedFunction,The function 'kernel_mul_mv_q8_0_f32_flat' is never used.,The function 'kernel_mul_mv_q8_0_f32_flat' is never used.,561,13,,kernel_mul_mv_q8_0_f32_flat
ggml/src/ggml-opencl/kernels/norm.cl,18,style,unusedFunction,The function 'kernel_norm' is never used.,The function 'kernel_norm' is never used.,561,13,,kernel_norm
ggml/src/ggml-opencl/kernels/norm.cl,91,style,unusedFunction,The function 'kernel_norm_mul_add' is never used.,The function 'kernel_norm_mul_add' is never used.,561,13,,kernel_norm_mul_add
ggml/src/ggml-opencl/kernels/pad.cl,1,style,unusedFunction,The function 'kernel_pad' is never used.,The function 'kernel_pad' is never used.,561,13,,kernel_pad
ggml/src/ggml-opencl/kernels/relu.cl,6,style,unusedFunction,The function 'kernel_relu' is never used.,The function 'kernel_relu' is never used.,561,13,,kernel_relu
ggml/src/ggml-opencl/kernels/repeat.cl,1,style,unusedFunction,The function 'kernel_repeat' is never used.,The function 'kernel_repeat' is never used.,561,13,,kernel_repeat
ggml/src/ggml-opencl/kernels/rms_norm.cl,30,style,unusedFunction,The function 'kernel_rms_norm' is never used.,The function 'kernel_rms_norm' is never used.,561,13,,kernel_rms_norm
ggml/src/ggml-opencl/kernels/rms_norm.cl,106,style,unusedFunction,The function 'kernel_rms_norm_mul' is never used.,The function 'kernel_rms_norm_mul' is never used.,561,13,,kernel_rms_norm_mul
ggml/src/ggml-opencl/kernels/rope.cl,45,style,unusedFunction,The function 'kernel_rope_norm_f32' is never used.,The function 'kernel_rope_norm_f32' is never used.,561,13,,kernel_rope_norm_f32
ggml/src/ggml-opencl/kernels/rope.cl,124,style,unusedFunction,The function 'kernel_rope_norm_f16' is never used.,The function 'kernel_rope_norm_f16' is never used.,561,13,,kernel_rope_norm_f16
ggml/src/ggml-opencl/kernels/rope.cl,203,style,unusedFunction,The function 'kernel_rope_neox_f32' is never used.,The function 'kernel_rope_neox_f32' is never used.,561,13,,kernel_rope_neox_f32
ggml/src/ggml-opencl/kernels/rope.cl,282,style,unusedFunction,The function 'kernel_rope_neox_f16' is never used.,The function 'kernel_rope_neox_f16' is never used.,561,13,,kernel_rope_neox_f16
ggml/src/ggml-opencl/kernels/rope.cl,361,style,unusedFunction,The function 'kernel_rope_multi_f32' is never used.,The function 'kernel_rope_multi_f32' is never used.,561,13,,kernel_rope_multi_f32
ggml/src/ggml-opencl/kernels/rope.cl,459,style,unusedFunction,The function 'kernel_rope_multi_f16' is never used.,The function 'kernel_rope_multi_f16' is never used.,561,13,,kernel_rope_multi_f16
ggml/src/ggml-opencl/kernels/rope.cl,557,style,unusedFunction,The function 'kernel_rope_vision_f32' is never used.,The function 'kernel_rope_vision_f32' is never used.,561,13,,kernel_rope_vision_f32
ggml/src/ggml-opencl/kernels/rope.cl,640,style,unusedFunction,The function 'kernel_rope_vision_f16' is never used.,The function 'kernel_rope_vision_f16' is never used.,561,13,,kernel_rope_vision_f16
ggml/src/ggml-opencl/kernels/scale.cl,6,style,unusedFunction,The function 'kernel_scale' is never used.,The function 'kernel_scale' is never used.,561,13,,kernel_scale
ggml/src/ggml-opencl/kernels/set_rows.cl,3,style,unusedFunction,The function 'kernel_set_rows_f32_i64' is never used.,The function 'kernel_set_rows_f32_i64' is never used.,561,13,,kernel_set_rows_f32_i64
ggml/src/ggml-opencl/kernels/set_rows.cl,50,style,unusedFunction,The function 'kernel_set_rows_f16_i64' is never used.,The function 'kernel_set_rows_f16_i64' is never used.,561,13,,kernel_set_rows_f16_i64
ggml/src/ggml-opencl/kernels/set_rows.cl,97,style,unusedFunction,The function 'kernel_set_rows_f32_i32' is never used.,The function 'kernel_set_rows_f32_i32' is never used.,561,13,,kernel_set_rows_f32_i32
ggml/src/ggml-opencl/kernels/set_rows.cl,144,style,unusedFunction,The function 'kernel_set_rows_f16_i32' is never used.,The function 'kernel_set_rows_f16_i32' is never used.,561,13,,kernel_set_rows_f16_i32
ggml/src/ggml-opencl/kernels/sigmoid.cl,7,style,unusedFunction,The function 'kernel_sigmoid_f32' is never used.,The function 'kernel_sigmoid_f32' is never used.,561,13,,kernel_sigmoid_f32
ggml/src/ggml-opencl/kernels/sigmoid.cl,19,style,unusedFunction,The function 'kernel_sigmoid_f16' is never used.,The function 'kernel_sigmoid_f16' is never used.,561,13,,kernel_sigmoid_f16
ggml/src/ggml-opencl/kernels/silu.cl,6,style,unusedFunction,The function 'kernel_silu' is never used.,The function 'kernel_silu' is never used.,561,13,,kernel_silu
ggml/src/ggml-opencl/kernels/silu.cl,19,style,unusedFunction,The function 'kernel_silu_4' is never used.,The function 'kernel_silu_4' is never used.,561,13,,kernel_silu_4
ggml/src/ggml-opencl/kernels/softmax_4_f16.cl,24,style,unusedFunction,The function 'kernel_soft_max_4_f16' is never used.,The function 'kernel_soft_max_4_f16' is never used.,561,13,,kernel_soft_max_4_f16
ggml/src/ggml-opencl/kernels/softmax_4_f32.cl,24,style,unusedFunction,The function 'kernel_soft_max_4' is never used.,The function 'kernel_soft_max_4' is never used.,561,13,,kernel_soft_max_4
ggml/src/ggml-opencl/kernels/softmax_f16.cl,24,style,unusedFunction,The function 'kernel_soft_max_f16' is never used.,The function 'kernel_soft_max_f16' is never used.,561,13,,kernel_soft_max_f16
ggml/src/ggml-opencl/kernels/softmax_f32.cl,24,style,unusedFunction,The function 'kernel_soft_max' is never used.,The function 'kernel_soft_max' is never used.,561,13,,kernel_soft_max
ggml/src/ggml-opencl/kernels/sub.cl,6,style,unusedFunction,The function 'kernel_sub' is never used.,The function 'kernel_sub' is never used.,561,13,,kernel_sub
ggml/src/ggml-opencl/kernels/sub.cl,55,style,unusedFunction,The function 'kernel_sub_row' is never used.,The function 'kernel_sub_row' is never used.,561,13,,kernel_sub_row
ggml/src/ggml-opencl/kernels/sub.cl,74,style,unusedFunction,The function 'kernel_sub_f16' is never used.,The function 'kernel_sub_f16' is never used.,561,13,,kernel_sub_f16
ggml/src/ggml-opencl/kernels/sub.cl,121,style,unusedFunction,The function 'kernel_sub_row_f16' is never used.,The function 'kernel_sub_row_f16' is never used.,561,13,,kernel_sub_row_f16
ggml/src/ggml-opencl/kernels/sum_rows.cl,2,style,unusedFunction,The function 'kernel_sum_rows_f32' is never used.,The function 'kernel_sum_rows_f32' is never used.,561,13,,kernel_sum_rows_f32
ggml/src/ggml-opencl/kernels/tanh.cl,15,style,unusedFunction,The function 'kernel_tanh_f32_nd' is never used.,The function 'kernel_tanh_f32_nd' is never used.,561,13,,kernel_tanh_f32_nd
ggml/src/ggml-opencl/kernels/tanh.cl,40,style,unusedFunction,The function 'kernel_tanh_f16_nd' is never used.,The function 'kernel_tanh_f16_nd' is never used.,561,13,,kernel_tanh_f16_nd
ggml/src/ggml-opencl/kernels/transpose.cl,4,style,unusedFunction,The function 'kernel_transpose_16' is never used.,The function 'kernel_transpose_16' is never used.,561,13,,kernel_transpose_16
ggml/src/ggml-opencl/kernels/transpose.cl,28,style,unusedFunction,The function 'kernel_transpose_16_4x1' is never used.,The function 'kernel_transpose_16_4x1' is never used.,561,13,,kernel_transpose_16_4x1
ggml/src/ggml-opencl/kernels/transpose.cl,48,style,unusedFunction,The function 'kernel_transpose_32' is never used.,The function 'kernel_transpose_32' is never used.,561,13,,kernel_transpose_32
ggml/src/ggml-opencl/kernels/transpose.cl,76,style,unusedFunction,The function 'kernel_transpose_32_16' is never used.,The function 'kernel_transpose_32_16' is never used.,561,13,,kernel_transpose_32_16
ggml/src/ggml-opencl/kernels/tsembd.cl,1,style,unusedFunction,The function 'kernel_timestep_embedding' is never used.,The function 'kernel_timestep_embedding' is never used.,561,13,,kernel_timestep_embedding
ggml/src/ggml-opencl/kernels/upscale.cl,1,style,unusedFunction,The function 'kernel_upscale' is never used.,The function 'kernel_upscale' is never used.,561,13,,kernel_upscale
ggml/src/ggml-opencl/kernels/upscale.cl,45,style,unusedFunction,The function 'kernel_upscale_bilinear' is never used.,The function 'kernel_upscale_bilinear' is never used.,561,13,,kernel_upscale_bilinear
ggml/src/ggml-rpc/ggml-rpc.cpp,854,style,unusedFunction,The function 'ggml_backend_is_rpc' is never used.,The function 'ggml_backend_is_rpc' is never used.,561,6,,ggml_backend_is_rpc
ggml/src/ggml-sycl/common.cpp,54,style,unusedFunction,The function 'gpu_has_xmx' is never used.,The function 'gpu_has_xmx' is never used.,561,6,,gpu_has_xmx
ggml/src/ggml-sycl/common.hpp,162,style,unusedFunction,The function 'bad_arch' is never used.,The function 'bad_arch' is never used.,561,33,,bad_arch
ggml/src/ggml-sycl/dmmv.cpp,14,style,unusedFunction,The function 'convert_f32' is never used.,The function 'convert_f32' is never used.,561,13,,convert_f32
ggml/src/ggml-sycl/dpct/helper.hpp,289,style,unusedFunction,The function 'set_data_ptr' is never used.,The function 'set_data_ptr' is never used.,561,14,,set_data_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,292,style,unusedFunction,The function 'set_pitch' is never used.,The function 'set_pitch' is never used.,561,14,,set_pitch
ggml/src/ggml-sycl/dpct/helper.hpp,294,style,unusedFunction,The function 'get_x' is never used.,The function 'get_x' is never used.,561,16,,get_x
ggml/src/ggml-sycl/dpct/helper.hpp,295,style,unusedFunction,The function 'set_x' is never used.,The function 'set_x' is never used.,561,14,,set_x
ggml/src/ggml-sycl/dpct/helper.hpp,298,style,unusedFunction,The function 'set_y' is never used.,The function 'set_y' is never used.,561,14,,set_y
ggml/src/ggml-sycl/dpct/helper.hpp,315,style,unusedFunction,The function 'get_max_work_item_sizes' is never used.,The function 'get_max_work_item_sizes' is never used.,561,14,,get_max_work_item_sizes
ggml/src/ggml-sycl/dpct/helper.hpp,341,style,unusedFunction,The function 'get_host_unified_memory' is never used.,The function 'get_host_unified_memory' is never used.,561,14,,get_host_unified_memory
ggml/src/ggml-sycl/dpct/helper.hpp,349,style,unusedFunction,The function 'get_max_work_items_per_compute_unit' is never used.,The function 'get_max_work_items_per_compute_unit' is never used.,561,13,,get_max_work_items_per_compute_unit
ggml/src/ggml-sycl/dpct/helper.hpp,361,style,unusedFunction,The function 'get_max_nd_range_size' is never used.,The function 'get_max_nd_range_size' is never used.,561,14,,get_max_nd_range_size
ggml/src/ggml-sycl/dpct/helper.hpp,380,style,unusedFunction,The function 'get_local_mem_size' is never used.,The function 'get_local_mem_size' is never used.,561,16,,get_local_mem_size
ggml/src/ggml-sycl/dpct/helper.hpp,384,style,unusedFunction,The function 'get_memory_clock_rate' is never used.,The function 'get_memory_clock_rate' is never used.,561,22,,get_memory_clock_rate
ggml/src/ggml-sycl/dpct/helper.hpp,387,style,unusedFunction,The function 'get_memory_bus_width' is never used.,The function 'get_memory_bus_width' is never used.,561,22,,get_memory_bus_width
ggml/src/ggml-sycl/dpct/helper.hpp,389,style,unusedFunction,The function 'get_uuid' is never used.,The function 'get_uuid' is never used.,561,39,,get_uuid
ggml/src/ggml-sycl/dpct/helper.hpp,391,style,unusedFunction,The function 'get_global_mem_cache_size' is never used.,The function 'get_global_mem_cache_size' is never used.,561,22,,get_global_mem_cache_size
ggml/src/ggml-sycl/dpct/helper.hpp,429,style,unusedFunction,The function 'set_integrated' is never used.,The function 'set_integrated' is never used.,561,14,,set_integrated
ggml/src/ggml-sycl/dpct/helper.hpp,468,style,unusedFunction,The function 'set_memory_clock_rate' is never used.,The function 'set_memory_clock_rate' is never used.,561,14,,set_memory_clock_rate
ggml/src/ggml-sycl/dpct/helper.hpp,472,style,unusedFunction,The function 'set_memory_bus_width' is never used.,The function 'set_memory_bus_width' is never used.,561,14,,set_memory_bus_width
ggml/src/ggml-sycl/dpct/helper.hpp,481,style,unusedFunction,The function 'set_device_id' is never used.,The function 'set_device_id' is never used.,561,14,,set_device_id
ggml/src/ggml-sycl/dpct/helper.hpp,485,style,unusedFunction,The function 'set_uuid' is never used.,The function 'set_uuid' is never used.,561,14,,set_uuid
ggml/src/ggml-sycl/dpct/helper.hpp,643,style,unusedFunction,The function 'is_native_atomic_supported' is never used.,The function 'is_native_atomic_supported' is never used.,561,11,,is_native_atomic_supported
ggml/src/ggml-sycl/dpct/helper.hpp,671,style,unusedFunction,The function 'get_mem_base_addr_align' is never used.,The function 'get_mem_base_addr_align' is never used.,561,11,,get_mem_base_addr_align
ggml/src/ggml-sycl/dpct/helper.hpp,729,style,unusedFunction,The function 'out_of_order_queue' is never used.,The function 'out_of_order_queue' is never used.,561,20,,out_of_order_queue
ggml/src/ggml-sycl/dpct/helper.hpp,744,style,unusedFunction,The function 'create_queue' is never used.,The function 'create_queue' is never used.,561,19,,create_queue
ggml/src/ggml-sycl/dpct/helper.hpp,766,style,unusedFunction,The function 'create_out_of_order_queue' is never used.,The function 'create_out_of_order_queue' is never used.,561,19,,create_out_of_order_queue
ggml/src/ggml-sycl/dpct/helper.hpp,772,style,unusedFunction,The function 'destroy_queue' is never used.,The function 'destroy_queue' is never used.,561,12,,destroy_queue
ggml/src/ggml-sycl/dpct/helper.hpp,781,style,unusedFunction,The function 'set_saved_queue' is never used.,The function 'set_saved_queue' is never used.,561,12,,set_saved_queue
ggml/src/ggml-sycl/dpct/helper.hpp,785,style,unusedFunction,The function 'get_saved_queue' is never used.,The function 'get_saved_queue' is never used.,561,19,,get_saved_queue
ggml/src/ggml-sycl/dpct/helper.hpp,859,style,unusedFunction,The function 'cpu_device' is never used.,The function 'cpu_device' is never used.,561,21,,cpu_device
ggml/src/ggml-sycl/dpct/helper.hpp,1208,style,unusedFunction,The function 'mem_alloc' is never used.,The function 'mem_alloc' is never used.,561,19,,mem_alloc
ggml/src/ggml-sycl/dpct/helper.hpp,1231,style,unusedFunction,The function 'mem_free' is never used.,The function 'mem_free' is never used.,561,18,,mem_free
ggml/src/ggml-sycl/dpct/helper.hpp,1241,style,unusedFunction,The function 'translate_ptr' is never used.,The function 'translate_ptr' is never used.,561,24,,translate_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,1249,style,unusedFunction,The function 'is_device_ptr' is never used.,The function 'is_device_ptr' is never used.,561,18,,is_device_ptr
ggml/src/ggml-sycl/dpct/helper.hpp,1658,style,unusedFunction,The function 'address' is never used.,The function 'address' is never used.,561,25,,address
ggml/src/ggml-sycl/dpct/helper.hpp,1859,style,unusedFunction,The function 'vectorized_min' is never used.,The function 'vectorized_min' is never used.,561,14,,vectorized_min
ggml/src/ggml-sycl/dpct/helper.hpp,2846,style,unusedFunction,The function 'get_access' is never used.,The function 'get_access' is never used.,561,13,,get_access
ggml/src/ggml-sycl/element_wise.cpp,301,style,unusedFunction,The function 'unary_op_clamp_kernel' is never used.,The function 'unary_op_clamp_kernel' is never used.,561,13,,unary_op_clamp_kernel
ggml/src/ggml-sycl/ggml-sycl.cpp,275,style,unusedFunction,The function 'ggml_backend_sycl_get_gpu_list' is never used.,The function 'ggml_backend_sycl_get_gpu_list' is never used.,561,15,,ggml_backend_sycl_get_gpu_list
ggml/src/ggml-sycl/ggml-sycl.cpp,3784,style,unusedFunction,The function 'ggml_backend_sycl_get_device_description' is never used.,The function 'ggml_backend_sycl_get_device_description' is never used.,561,15,,ggml_backend_sycl_get_device_description
ggml/src/ggml-sycl/ggml-sycl.cpp,3798,style,unusedFunction,The function 'ggml_backend_sycl_get_device_memory' is never used.,The function 'ggml_backend_sycl_get_device_memory' is never used.,561,6,,ggml_backend_sycl_get_device_memory
ggml/src/ggml-sycl/ggml-sycl.cpp,3882,style,unusedFunction,The function 'ggml_backend_sycl_cpy_tensor_async' is never used.,The function 'ggml_backend_sycl_cpy_tensor_async' is never used.,561,13,,ggml_backend_sycl_cpy_tensor_async
ggml/src/ggml-sycl/mmq.cpp,1617,style,unusedFunction,The function 'mul_mat_q3_K' is never used.,The function 'mul_mat_q3_K' is never used.,561,1,,mul_mat_q3_K
ggml/src/ggml-sycl/set_rows.cpp,6,style,unusedFunction,The function 'is_arithmetic_v' is never used.,The function 'is_arithmetic_v' is never used.,561,23,,is_arithmetic_v
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,209,style,unusedFunction,The function 'is_quantized_type' is never used.,The function 'is_quantized_type' is never used.,561,6,,is_quantized_type
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,217,style,unusedFunction,The function 'is_k_quant' is never used.,The function 'is_k_quant' is never used.,561,6,,is_k_quant
ggml/src/ggml-vulkan/vulkan-shaders/vulkan-shaders-gen.cpp,221,style,unusedFunction,The function 'is_iq_quant' is never used.,The function 'is_iq_quant' is never used.,561,6,,is_iq_quant
ggml/src/ggml-webgpu/ggml-webgpu.cpp,101,style,unusedFunction,The function 'cleanup' is never used.,The function 'cleanup' is never used.,561,10,,cleanup
ggml/src/ggml-webgpu/ggml-webgpu.cpp,338,style,unusedFunction,The function 'ggml_backend_webgpu_debug' is never used.,The function 'ggml_backend_webgpu_debug' is never used.,561,13,,ggml_backend_webgpu_debug
ggml/src/ggml-webgpu/ggml-webgpu.cpp,1552,style,unusedFunction,The function 'ggml_backend_webgpu_init' is never used.,The function 'ggml_backend_webgpu_init' is never used.,561,16,,ggml_backend_webgpu_init
ggml/src/ggml-zdnn/ggml-zdnn.cpp,436,style,unusedFunction,The function 'ggml_backend_is_zdnn' is never used.,The function 'ggml_backend_is_zdnn' is never used.,561,6,,ggml_backend_is_zdnn
ggml/tests/test-backend-ops.cpp,332,style,unusedFunction,The function 'output_format_str' is never used.,The function 'output_format_str' is never used.,561,21,,output_format_str
ggml/tests/test-conv-transpose.c,16,style,unusedFunction,The function 'printf_tensor' is never used.,The function 'printf_tensor' is never used.,561,6,,printf_tensor
ggml/src/ggml-cpu/ggml-cpu.c,778,style,staticFunction,The function 'ggml_set_f32' should have static linkage since it is not used outside of its translation unit.,The function 'ggml_set_f32' should have static linkage since it is not used outside of its translation unit.,,22,,ggml_set_f32
ggml/src/ggml-cpu/ggml-cpu.c,926,style,staticFunction,The function 'ggml_get_i32_nd' should have static linkage since it is not used outside of its translation unit.,The function 'ggml_get_i32_nd' should have static linkage since it is not used outside of its translation unit.,,9,,ggml_get_i32_nd
ggml/src/ggml-cpu/ggml-cpu.c,946,style,staticFunction,The function 'ggml_set_i32_nd' should have static linkage since it is not used outside of its translation unit.,The function 'ggml_set_i32_nd' should have static linkage since it is not used outside of its translation unit.,,6,,ggml_set_i32_nd
ggml/src/ggml-cpu/ggml-cpu.c,1057,style,staticFunction,The function 'ggml_get_f32_nd' should have static linkage since it is not used outside of its translation unit.,The function 'ggml_get_f32_nd' should have static linkage since it is not used outside of its translation unit.,,7,,ggml_get_f32_nd
ggml/src/ggml-cpu/ggml-cpu.c,1077,style,staticFunction,The function 'ggml_set_f32_nd' should have static linkage since it is not used outside of its translation unit.,The function 'ggml_set_f32_nd' should have static linkage since it is not used outside of its translation unit.,,6,,ggml_set_f32_nd
ggml/src/ggml-cpu/ggml-cpu.c,1205,style,staticFunction,The function 'ggml_compute_forward_mul_mat' should have static linkage since it is not used outside of its translation unit.,The function 'ggml_compute_forward_mul_mat' should have static linkage since it is not used outside of its translation unit.,,6,,ggml_compute_forward_mul_mat
ggml/src/ggml-cpu/ggml-cpu.c,3210,style,staticFunction,The function 'ggml_cpu_fp32_to_fp32' should have static linkage since it is not used outside of its translation unit.,The function 'ggml_cpu_fp32_to_fp32' should have static linkage since it is not used outside of its translation unit.,,6,,ggml_cpu_fp32_to_fp32
ggml/src/ggml-cpu/ggml-cpu.c,3214,style,staticFunction,The function 'ggml_cpu_fp32_to_fp16' should have static linkage since it is not used outside of its translation unit.,The function 'ggml_cpu_fp32_to_fp16' should have static linkage since it is not used outside of its translation unit.,,6,,ggml_cpu_fp32_to_fp16
ggml/src/ggml-cpu/ggml-cpu.c,3274,style,staticFunction,The function 'ggml_cpu_fp32_to_bf16' should have static linkage since it is not used outside of its translation unit.,The function 'ggml_cpu_fp32_to_bf16' should have static linkage since it is not used outside of its translation unit.,,6,,ggml_cpu_fp32_to_bf16
ggml/src/ggml-cpu/ggml-cpu.c,3281,style,staticFunction,The function 'ggml_cpu_fp32_to_i32' should have static linkage since it is not used outside of its translation unit.,The function 'ggml_cpu_fp32_to_i32' should have static linkage since it is not used outside of its translation unit.,,6,,ggml_cpu_fp32_to_i32
ggml/src/ggml-opencl/kernels/get_rows.cl,25,style,staticFunction,The function 'dequantize_q4_0_f32' should have static linkage since it is not used outside of its translation unit.,The function 'dequantize_q4_0_f32' should have static linkage since it is not used outside of its translation unit.,,6,,dequantize_q4_0_f32
ggml/src/ggml-opencl/kernels/mul_mv_id_mxfp4_f32.cl,53,style,staticFunction,The function 'mul_mv_mxfp4_f32' should have static linkage since it is not used outside of its translation unit.,The function 'mul_mv_mxfp4_f32' should have static linkage since it is not used outside of its translation unit.,,13,,mul_mv_mxfp4_f32
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl,57,style,staticFunction,The function 'block_q_4_0_dot_y' should have static linkage since it is not used outside of its translation unit.,The function 'block_q_4_0_dot_y' should have static linkage since it is not used outside of its translation unit.,,14,,block_q_4_0_dot_y
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32.cl,85,style,staticFunction,The function 'mul_vec_q_n_f32' should have static linkage since it is not used outside of its translation unit.,The function 'mul_vec_q_n_f32' should have static linkage since it is not used outside of its translation unit.,,13,,mul_vec_q_n_f32
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_16x_flat.cl,97,style,staticFunction,The function 'mul_mat_q_n_f32_1d_16x_flat' should have static linkage since it is not used outside of its translation unit.,The function 'mul_mat_q_n_f32_1d_16x_flat' should have static linkage since it is not used outside of its translation unit.,,13,,mul_mat_q_n_f32_1d_16x_flat
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_1d_8x_flat.cl,97,style,staticFunction,The function 'mul_mat_q_n_f32_1d_8x_flat' should have static linkage since it is not used outside of its translation unit.,The function 'mul_mat_q_n_f32_1d_8x_flat' should have static linkage since it is not used outside of its translation unit.,,13,,mul_mat_q_n_f32_1d_8x_flat
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl,54,style,staticFunction,The function 'block_q_4_0_dot_y_v' should have static linkage since it is not used outside of its translation unit.,The function 'block_q_4_0_dot_y_v' should have static linkage since it is not used outside of its translation unit.,,14,,block_q_4_0_dot_y_v
ggml/src/ggml-opencl/kernels/mul_mv_q4_0_f32_v.cl,101,style,staticFunction,The function 'mul_vec_q_n_f32_v' should have static linkage since it is not used outside of its translation unit.,The function 'mul_vec_q_n_f32_v' should have static linkage since it is not used outside of its translation unit.,,13,,mul_vec_q_n_f32_v
ggml/src/ggml-opencl/kernels/rope.cl,31,style,staticFunction,The function 'rope_yarn_corr_factor' should have static linkage since it is not used outside of its translation unit.,The function 'rope_yarn_corr_factor' should have static linkage since it is not used outside of its translation unit.,,7,,rope_yarn_corr_factor
ggml/src/ggml-opencl/kernels/rope.cl,35,style,staticFunction,The function 'rope_yarn_corr_dims' should have static linkage since it is not used outside of its translation unit.,The function 'rope_yarn_corr_dims' should have static linkage since it is not used outside of its translation unit.,,8,,rope_yarn_corr_dims
ggml/tests/test-cont.c,31,style,staticFunction,The function 'make_backend' should have static linkage since it is not used outside of its translation unit.,The function 'make_backend' should have static linkage since it is not used outside of its translation unit.,,16,,make_backend
ggml/tests/test-cont.c,46,style,staticFunction,The function 'model_init' should have static linkage since it is not used outside of its translation unit.,The function 'model_init' should have static linkage since it is not used outside of its translation unit.,,6,,model_init
ggml/tests/test-cont.c,61,style,staticFunction,The function 'model_alloc' should have static linkage since it is not used outside of its translation unit.,The function 'model_alloc' should have static linkage since it is not used outside of its translation unit.,,6,,model_alloc
ggml/tests/test-cont.c,66,style,staticFunction,The function 'model_compute' should have static linkage since it is not used outside of its translation unit.,The function 'model_compute' should have static linkage since it is not used outside of its translation unit.,,6,,model_compute
ggml/tests/test-cont.c,71,style,staticFunction,The function 'model_free' should have static linkage since it is not used outside of its translation unit.,The function 'model_free' should have static linkage since it is not used outside of its translation unit.,,6,,model_free
ggml/tests/test-customop.c,36,style,staticFunction,The function 'custom1' should have static linkage since it is not used outside of its translation unit.,The function 'custom1' should have static linkage since it is not used outside of its translation unit.,,6,,custom1
ggml/tests/test-customop.c,61,style,staticFunction,The function 'custom2' should have static linkage since it is not used outside of its translation unit.,The function 'custom2' should have static linkage since it is not used outside of its translation unit.,,6,,custom2
ggml/tests/test-customop.c,98,style,staticFunction,The function 'custom3' should have static linkage since it is not used outside of its translation unit.,The function 'custom3' should have static linkage since it is not used outside of its translation unit.,,6,,custom3
ggml/tests/test-customop.c,130,style,staticFunction,The function 'custom' should have static linkage since it is not used outside of its translation unit.,The function 'custom' should have static linkage since it is not used outside of its translation unit.,,6,,custom
ggml/tests/test-dup.c,7,style,staticFunction,The function 'arange' should have static linkage since it is not used outside of its translation unit.,The function 'arange' should have static linkage since it is not used outside of its translation unit.,,6,,arange
ggml/tests/test-dup.c,14,style,staticFunction,The function 'dup_to' should have static linkage since it is not used outside of its translation unit.,The function 'dup_to' should have static linkage since it is not used outside of its translation unit.,,6,,dup_to
ggml/tests/test-dup.c,21,style,staticFunction,The function 'can_dup' should have static linkage since it is not used outside of its translation unit.,The function 'can_dup' should have static linkage since it is not used outside of its translation unit.,,6,,can_dup
